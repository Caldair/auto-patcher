diff -Npru stock-services/smali/com/android/server/am/ActivityManagerService.smali v6-services/smali/com/android/server/am/ActivityManagerService.smali
--- stock-services/smali/com/android/server/am/ActivityManagerService.smali	2012-06-14 15:24:55.000000000 -0500
+++ v6-services/smali/com/android/server/am/ActivityManagerService.smali	2012-06-14 16:41:44.899558933 -0500
@@ -7888,7 +7888,7 @@
 
     if-le v10, v2, :cond_118
 
-    const/4 v10, 0x1
+    const/4 v10, 0x3
 
     const-string v2, "visible"
 
@@ -7952,7 +7952,7 @@
 
     if-ne v0, v2, :cond_154
 
-    const/4 v10, 0x3
+    const/4 v10, 0x4
 
     const/16 v27, 0x1
 
@@ -7981,7 +7981,7 @@
 
     if-ne v0, v2, :cond_16d
 
-    const/4 v10, 0x6
+    const/4 v10, 0x1
 
     const/16 v27, 0x1
 
@@ -8020,7 +8020,7 @@
 
     if-lez v2, :cond_190
 
-    const/4 v10, 0x7
+    const/4 v10, 0x5
 
     const/16 v27, 0x1
 
@@ -8069,7 +8069,7 @@
 
     if-le v10, v2, :cond_1bb
 
-    const/4 v10, 0x4
+    const/4 v10, 0x7
 
     const-string v2, "backup"
 
@@ -8480,7 +8480,7 @@
 
     if-le v10, v2, :cond_32c
 
-    const/4 v10, 0x5
+    const/4 v10, 0x6
 
     const-string v2, "started-services"
 
diff -Npru stock-services/smali/com/android/server/am/ActivityManagerService.smali~ v6-services/smali/com/android/server/am/ActivityManagerService.smali~
--- stock-services/smali/com/android/server/am/ActivityManagerService.smali~	1969-12-31 18:00:00.000000000 -0600
+++ v6-services/smali/com/android/server/am/ActivityManagerService.smali~	2012-06-14 15:24:55.000000000 -0500
@@ -0,0 +1,60247 @@
+.class public final Lcom/android/server/am/ActivityManagerService;
+.super Landroid/app/ActivityManagerNative;
+.source "ActivityManagerService.java"
+
+# interfaces
+.implements Lcom/android/server/Watchdog$Monitor;
+.implements Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;
+
+
+# annotations
+.annotation system Ldalvik/annotation/MemberClasses;
+    value = {
+        Lcom/android/server/am/ActivityManagerService$ServiceRestarter;,
+        Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;,
+        Lcom/android/server/am/ActivityManagerService$MemItem;,
+        Lcom/android/server/am/ActivityManagerService$ItemMatcher;,
+        Lcom/android/server/am/ActivityManagerService$PermissionController;,
+        Lcom/android/server/am/ActivityManagerService$AppNotResponding;,
+        Lcom/android/server/am/ActivityManagerService$CpuBinder;,
+        Lcom/android/server/am/ActivityManagerService$GraphicsBinder;,
+        Lcom/android/server/am/ActivityManagerService$MemBinder;,
+        Lcom/android/server/am/ActivityManagerService$AThread;,
+        Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;,
+        Lcom/android/server/am/ActivityManagerService$Identity;,
+        Lcom/android/server/am/ActivityManagerService$ForegroundToken;,
+        Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;
+    }
+.end annotation
+
+
+# static fields
+.field static final APP_SWITCH_DELAY_TIME:J = 0x1388L
+
+.field static final BATTERY_STATS_TIME:J = 0x1b7740L
+
+.field static final BROADCAST_INTENT_MSG:I = 0x7
+
+.field static final BROADCAST_TIMEOUT:I = 0x2710
+
+.field static final BROADCAST_TIMEOUT_MSG:I = 0x8
+
+.field static final CANCEL_HEAVY_NOTIFICATION_MSG:I = 0x19
+
+.field static final CHECK_EXCESSIVE_WAKE_LOCKS_MSG:I = 0x1b
+
+.field static final CLEAR_DNS_CACHE:I = 0x1c
+
+.field static final CPU_MIN_CHECK_DURATION:I = 0x493e0
+
+.field static final DEBUG:Z = false
+
+.field static final DEBUG_BACKUP:Z = false
+
+.field static final DEBUG_BROADCAST:Z = false
+
+.field static final DEBUG_BROADCAST_LIGHT:Z = false
+
+.field static final DEBUG_CONFIGURATION:Z = false
+
+.field static final DEBUG_OOM_ADJ:Z = false
+
+.field static final DEBUG_PAUSE:Z = false
+
+.field static final DEBUG_POWER:Z = false
+
+.field static final DEBUG_POWER_QUICK:Z = false
+
+.field static final DEBUG_PROCESSES:Z = false
+
+.field static final DEBUG_PROVIDER:Z = false
+
+.field static final DEBUG_RESULTS:Z = false
+
+.field static final DEBUG_SERVICE:Z = false
+
+.field static final DEBUG_SERVICE_EXECUTING:Z = false
+
+.field static final DEBUG_SWITCH:Z = false
+
+.field static final DEBUG_TASKS:Z = false
+
+.field static final DEBUG_TRANSITION:Z = false
+
+.field static final DEBUG_URI_PERMISSION:Z = false
+
+.field static final DEBUG_USER_LEAVING:Z = false
+
+.field static final DEBUG_VISBILITY:Z = false
+
+.field static final DISPATCH_FOREGROUND_ACTIVITIES_CHANGED:I = 0x1f
+
+.field static final DISPATCH_PROCESS_DIED:I = 0x20
+
+.field static final DO_PENDING_ACTIVITY_LAUNCHES_MSG:I = 0x15
+
+.field static final DUMP_MEM_BUCKETS:[J = null
+
+.field static final DUMP_MEM_OOM_ADJ:[I = null
+
+.field static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String; = null
+
+.field static final EMPTY_STRING_ARRAY:[Ljava/lang/String; = null
+
+.field static final FINALIZE_PENDING_INTENT_MSG:I = 0x17
+
+.field static final GC_BACKGROUND_PROCESSES_MSG:I = 0x5
+
+.field static final GC_MIN_INTERVAL:I = 0xea60
+
+.field static final GC_TIMEOUT:I = 0x1388
+
+.field static final IM_FEELING_LUCKY_MSG:I = 0xf
+
+.field static final INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I = 0xea60
+
+#the value of this static final field might be set in the static constructor
+.field static final IS_USER_BUILD:Z = false
+
+.field static final KEY_DISPATCHING_TIMEOUT:I = 0x1388
+
+.field static final KILL_APPLICATION_MSG:I = 0x16
+
+.field static final LAST_DONE_VERSION:I = 0x2710
+
+.field static final MAX_BROADCAST_HISTORY:I = 0x19
+
+.field private static final MAX_DUP_SUPPRESSED_STACKS:I = 0x1388
+
+.field static final MAX_RECENT_TASKS:I = 0x14
+
+.field static final MAX_SERVICE_INACTIVITY:I = 0x1b7740
+
+.field static final MONITOR_CPU_MAX_TIME:J = 0xfffffffL
+
+.field static final MONITOR_CPU_MIN_TIME:J = 0x1388L
+
+.field static final MONITOR_CPU_USAGE:Z = true
+
+.field static final MONITOR_THREAD_CPU_USAGE:Z = false
+
+#the value of this static final field might be set in the static constructor
+.field static final MY_PID:I = 0x0
+
+.field static final POST_HEAVY_NOTIFICATION_MSG:I = 0x18
+
+.field static final POWER_CHECK_DELAY:I = 0xdbba0
+
+.field static final PROC_START_TIMEOUT:I = 0x2710
+
+.field static final PROC_START_TIMEOUT_MSG:I = 0x14
+
+.field static final PROC_START_TIMEOUT_WITH_WRAPPER:I = 0x493e0
+
+.field static final REPORT_MEM_USAGE:I = 0x21
+
+.field static final SERVICE_MIN_RESTART_TIME_BETWEEN:I = 0x2710
+
+.field static final SERVICE_RESET_RUN_DURATION:I = 0xea60
+
+.field static final SERVICE_RESTART_DURATION:I = 0x1388
+
+.field static final SERVICE_RESTART_DURATION_FACTOR:I = 0x4
+
+.field static final SERVICE_TIMEOUT:I = 0x4e20
+
+.field static final SERVICE_TIMEOUT_MSG:I = 0xc
+
+.field static final SHOW_ACTIVITY_START_TIME:Z = true
+
+.field static final SHOW_COMPAT_MODE_DIALOG_MSG:I = 0x1e
+
+.field static final SHOW_ERROR_MSG:I = 0x1
+
+.field static final SHOW_FACTORY_ERROR_MSG:I = 0x3
+
+.field static final SHOW_NOT_RESPONDING_MSG:I = 0x2
+
+.field static final SHOW_STRICT_MODE_VIOLATION_MSG:I = 0x1a
+
+.field static final SHOW_UID_ERROR_MSG:I = 0xe
+
+.field static final STOCK_PM_FLAGS:I = 0x400
+
+.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"
+
+.field static final TAG:Ljava/lang/String; = "ActivityManager"
+
+.field static final UPDATE_CONFIGURATION_MSG:I = 0x4
+
+.field static final UPDATE_HTTP_PROXY:I = 0x1d
+
+.field static final UPDATE_TIME_ZONE:I = 0xd
+
+.field static final VALIDATE_TOKENS:Z = false
+
+.field static final WAIT_FOR_DEBUGGER_MSG:I = 0x6
+
+.field static final WAKE_LOCK_MIN_CHECK_DURATION:I = 0x493e0
+
+.field static final localLOGV:Z
+
+.field static mSelf:Lcom/android/server/am/ActivityManagerService;
+
+.field static mSystemThread:Landroid/app/ActivityThread;
+
+.field private static sCallerIdentity:Ljava/lang/ThreadLocal;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/lang/ThreadLocal",
+            "<",
+            "Lcom/android/server/am/ActivityManagerService$Identity;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+
+# instance fields
+.field final GL_ES_VERSION:I
+
+.field mAdjSeq:I
+
+.field private final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashSet",
+            "<",
+            "Ljava/lang/Integer;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mAlwaysFinishActivities:Z
+
+.field mAppBindArgs:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Ljava/lang/String;",
+            "Landroid/os/IBinder;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mAppSwitchesAllowedTime:J
+
+.field mAutoStopProfiler:Z
+
+.field mBackupAppName:Ljava/lang/String;
+
+.field mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+.field final mBadProcesses:Lcom/android/server/ProcessMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Lcom/android/server/ProcessMap",
+            "<",
+            "Ljava/lang/Long;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+.field mBooted:Z
+
+.field mBooting:Z
+
+.field final mBroadcastHistory:[Lcom/android/server/am/BroadcastRecord;
+
+.field mBroadcastsScheduled:Z
+
+.field final mCancelledThumbnails:Ljava/util/ArrayList;
+
+.field mCheckedForSetup:Z
+
+.field mCompatModeDialog:Lcom/android/server/am/CompatModeDialog;
+
+.field final mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+.field mConfiguration:Landroid/content/res/Configuration;
+
+.field mConfigurationSeq:I
+
+.field mContext:Landroid/content/Context;
+
+.field mController:Landroid/app/IActivityController;
+
+.field mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;
+
+.field mCurTask:I
+
+.field mDebugApp:Ljava/lang/String;
+
+.field mDebugTransient:Z
+
+.field mDidAppSwitch:Z
+
+.field mDidDexOpt:Z
+
+.field mDidUpdate:Z
+
+.field mFactoryTest:I
+
+.field mFocusedActivity:Lcom/android/server/am/ActivityRecord;
+
+.field final mForegroundProcesses:Landroid/util/SparseArray;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/util/SparseArray",
+            "<",
+            "Lcom/android/server/am/ActivityManagerService$ForegroundToken;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field private final mGrantedUriPermissions:Landroid/util/SparseArray;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/util/SparseArray",
+            "<",
+            "Ljava/util/HashMap",
+            "<",
+            "Landroid/net/Uri;",
+            "Lcom/android/server/am/UriPermission;",
+            ">;>;"
+        }
+    .end annotation
+.end field
+
+.field final mHandler:Landroid/os/Handler;
+
+.field mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+.field mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+.field final mIntentSenderRecords:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Lcom/android/server/am/PendingIntentRecord$Key;",
+            "Ljava/lang/ref/WeakReference",
+            "<",
+            "Lcom/android/server/am/PendingIntentRecord;",
+            ">;>;"
+        }
+    .end annotation
+.end field
+
+.field final mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;
+
+.field mLastMemUsageReportTime:J
+
+.field mLastPowerCheckRealtime:J
+
+.field mLastPowerCheckUptime:J
+
+.field mLastWriteTime:J
+
+.field mLaunchWarningShown:Z
+
+.field final mLaunchingProviders:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ContentProviderRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mLruProcesses:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mLruSeq:I
+
+.field public mMainStack:Lcom/android/server/am/ActivityStack;
+
+.field mNewNumServiceProcs:I
+
+.field mNumServiceProcs:I
+
+.field mOnBattery:Z
+
+.field final mOrderedBroadcasts:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/BroadcastRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mOrigDebugApp:Ljava/lang/String;
+
+.field mOrigWaitForDebugger:Z
+
+.field final mParallelBroadcasts:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/BroadcastRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mPendingActivityLaunches:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+.field mPendingBroadcastRecvIndex:I
+
+.field private mPendingBroadcastTimeoutMessage:Z
+
+.field final mPendingResultRecords:Ljava/util/HashSet;
+
+.field final mPendingServices:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ServiceRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mPendingThumbnails:Ljava/util/ArrayList;
+
+.field final mPersistentStartingProcesses:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mPidsSelfLocked:Landroid/util/SparseArray;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/util/SparseArray",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+.field mPreviousProcessVisibleTime:J
+
+.field mProcDeaths:[I
+
+.field final mProcessCrashTimes:Lcom/android/server/ProcessMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Lcom/android/server/ProcessMap",
+            "<",
+            "Ljava/lang/Long;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mProcessLimit:I
+
+.field mProcessLimitOverride:I
+
+.field final mProcessList:Lcom/android/server/am/ProcessList;
+
+.field final mProcessNames:Lcom/android/server/ProcessMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Lcom/android/server/ProcessMap",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mProcessObservers:Landroid/os/RemoteCallbackList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/RemoteCallbackList",
+            "<",
+            "Landroid/app/IProcessObserver;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+.field final mProcessStatsMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;
+
+.field final mProcessStatsThread:Ljava/lang/Thread;
+
+.field final mProcessesOnHold:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mProcessesReady:Z
+
+.field final mProcessesToGc:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mProfileApp:Ljava/lang/String;
+
+.field mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+.field mProfileFile:Ljava/lang/String;
+
+.field mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+.field mProfileType:I
+
+.field final mProvidersByClass:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Landroid/content/ComponentName;",
+            "Lcom/android/server/am/ContentProviderRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mProvidersByName:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Ljava/lang/String;",
+            "Lcom/android/server/am/ContentProviderRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mReceiverResolver:Lcom/android/server/IntentResolver;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Lcom/android/server/IntentResolver",
+            "<",
+            "Lcom/android/server/am/BroadcastFilter;",
+            "Lcom/android/server/am/BroadcastFilter;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mRecentTasks:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/TaskRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mRegisteredReceivers:Ljava/util/HashMap;
+
+.field final mRemovedProcesses:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mRequestPssCallback:Ljava/lang/Runnable;
+
+.field final mRequestPssList:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mRestartingServices:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ServiceRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mServiceConnections:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Landroid/os/IBinder;",
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ConnectionRecord;",
+            ">;>;"
+        }
+    .end annotation
+.end field
+
+.field final mServices:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Landroid/content/ComponentName;",
+            "Lcom/android/server/am/ServiceRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field final mServicesByIntent:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Landroid/content/Intent$FilterComparison;",
+            "Lcom/android/server/am/ServiceRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mShuttingDown:Z
+
+.field mSleeping:Z
+
+.field mStartRunning:Z
+
+.field final mStickyBroadcasts:Ljava/util/HashMap;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/HashMap",
+            "<",
+            "Ljava/lang/String;",
+            "Ljava/util/ArrayList",
+            "<",
+            "Landroid/content/Intent;",
+            ">;>;"
+        }
+    .end annotation
+.end field
+
+.field final mStoppingServices:Ljava/util/ArrayList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ServiceRecord;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field private final mStrictModeBuffer:Ljava/lang/StringBuilder;
+
+.field final mStringBuilder:Ljava/lang/StringBuilder;
+
+.field mSystemReady:Z
+
+.field mTopAction:Ljava/lang/String;
+
+.field mTopComponent:Landroid/content/ComponentName;
+
+.field mTopData:Ljava/lang/String;
+
+.field mUiContext:Landroid/content/Context;
+
+.field mUidAlert:Landroid/app/AlertDialog;
+
+.field final mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+.field mWaitForDebugger:Z
+
+.field mWaitingUpdate:Z
+
+.field final mWatchers:Landroid/os/RemoteCallbackList;
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "Landroid/os/RemoteCallbackList",
+            "<",
+            "Landroid/app/IActivityWatcher;",
+            ">;"
+        }
+    .end annotation
+.end field
+
+.field mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 4
+
+    const/16 v3, 0xc
+
+    const/4 v2, 0x0
+
+    const-string v0, "user"
+
+    sget-object v1, Landroid/os/Build;->TYPE:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->IS_USER_BUILD:Z
+
+    invoke-static {}, Landroid/os/Process;->myPid()I
+
+    move-result v0
+
+    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    new-array v0, v2, [Ljava/lang/String;
+
+    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;
+
+    new-instance v0, Ljava/lang/ThreadLocal;
+
+    invoke-direct {v0}, Ljava/lang/ThreadLocal;-><init>()V
+
+    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    const/16 v0, 0x17
+
+    new-array v0, v0, [J
+
+    fill-array-data v0, :array_72
+
+    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J
+
+    new-array v0, v3, [I
+
+    fill-array-data v0, :array_d2
+
+    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I
+
+    new-array v0, v3, [Ljava/lang/String;
+
+    const-string v1, "System"
+
+    aput-object v1, v0, v2
+
+    const/4 v1, 0x1
+
+    const-string v2, "Persistent"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x2
+
+    const-string v2, "Foreground"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x3
+
+    const-string v2, "Visible"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x4
+
+    const-string v2, "Perceptible"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x5
+
+    const-string v2, "Heavy Weight"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x6
+
+    const-string v2, "Backup"
+
+    aput-object v2, v0, v1
+
+    const/4 v1, 0x7
+
+    const-string v2, "A Services"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x8
+
+    const-string v2, "Home"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0x9
+
+    const-string v2, "Previous"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xa
+
+    const-string v2, "B Services"
+
+    aput-object v2, v0, v1
+
+    const/16 v1, 0xb
+
+    const-string v2, "Background"
+
+    aput-object v2, v0, v1
+
+    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;
+
+    return-void
+
+    :array_72
+    .array-data 0x8
+        0x0t 0x14t 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x1ct 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x28t 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x3ct 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x50t 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x78t 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0xa0t 0x0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x40t 0x1t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0xe0t 0x1t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x80t 0x2t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x20t 0x3t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0xe8t 0x3t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0xb0t 0x4t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x78t 0x5t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x40t 0x6t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0xd0t 0x7t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x60t 0x9t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x80t 0xct 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x0t 0x10t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x0t 0x20t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x0t 0x50t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x0t 0xa0t 0x0t 0x0t 0x0t 0x0t 0x0t
+        0x0t 0x0t 0x40t 0x1t 0x0t 0x0t 0x0t 0x0t
+    .end array-data
+
+    :array_d2
+    .array-data 0x4
+        0xf0t 0xfft 0xfft 0xfft
+        0xf4t 0xfft 0xfft 0xfft
+        0x0t 0x0t 0x0t 0x0t
+        0x1t 0x0t 0x0t 0x0t
+        0x2t 0x0t 0x0t 0x0t
+        0x3t 0x0t 0x0t 0x0t
+        0x4t 0x0t 0x0t 0x0t
+        0x5t 0x0t 0x0t 0x0t
+        0x6t 0x0t 0x0t 0x0t
+        0x7t 0x0t 0x0t 0x0t
+        0x8t 0x0t 0x0t 0x0t
+        0xft 0x0t 0x0t 0x0t
+    .end array-data
+.end method
+
+.method private constructor <init>()V
+    .registers 10
+
+    const-wide/16 v7, 0x0
+
+    const/4 v6, 0x1
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    invoke-direct {p0}, Landroid/app/ActivityManagerNative;-><init>()V
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingActivityLaunches:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    const/16 v2, 0x19
+
+    new-array v2, v2, [Lcom/android/server/am/BroadcastRecord;
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastHistory:[Lcom/android/server/am/BroadcastRecord;
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastsScheduled:Z
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    new-instance v2, Lcom/android/server/am/ProcessList;
+
+    invoke-direct {v2}, Lcom/android/server/am/ProcessList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    new-instance v2, Lcom/android/server/ProcessMap;
+
+    invoke-direct {v2}, Lcom/android/server/ProcessMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    new-instance v2, Lcom/android/server/ProcessMap;
+
+    invoke-direct {v2}, Lcom/android/server/ProcessMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    new-instance v2, Lcom/android/server/ProcessMap;
+
+    invoke-direct {v2}, Lcom/android/server/ProcessMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    new-instance v2, Landroid/util/SparseArray;
+
+    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    new-instance v2, Landroid/util/SparseArray;
+
+    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/HashSet;
+
+    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingResultRecords:Ljava/util/HashSet;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/HashSet;
+
+    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    new-instance v2, Lcom/android/server/am/ActivityManagerService$1;
+
+    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServicesByIntent:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPendingThumbnails:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCancelledThumbnails:Ljava/util/ArrayList;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/HashMap;
+
+    invoke-direct {v2}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    new-instance v2, Landroid/util/SparseArray;
+
+    invoke-direct {v2}, Landroid/util/SparseArray;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    new-instance v2, Landroid/content/res/Configuration;
+
+    invoke-direct {v2}, Landroid/content/res/Configuration;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    const/16 v3, 0x100
+
+    invoke-direct {v2, v3}, Ljava/lang/StringBuilder;-><init>(I)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartRunning:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z
+
+    iput v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurTask:I
+
+    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I
+
+    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    const/16 v2, 0x14
+
+    new-array v2, v2, [I
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcDeaths:[I
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    iput v5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z
+
+    new-instance v2, Landroid/os/RemoteCallbackList;
+
+    invoke-direct {v2}, Landroid/os/RemoteCallbackList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    new-instance v2, Landroid/os/RemoteCallbackList;
+
+    invoke-direct {v2}, Landroid/os/RemoteCallbackList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    new-instance v2, Ljava/util/ArrayList;
+
+    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRequestPssList:Ljava/util/ArrayList;
+
+    new-instance v2, Lcom/android/internal/os/ProcessStats;
+
+    invoke-direct {v2, v5}, Lcom/android/internal/os/ProcessStats;-><init>(Z)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    new-instance v2, Ljava/util/concurrent/atomic/AtomicLong;
+
+    invoke-direct {v2, v7, v8}, Ljava/util/concurrent/atomic/AtomicLong;-><init>(J)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;
+
+    new-instance v2, Ljava/util/concurrent/atomic/AtomicBoolean;
+
+    invoke-direct {v2, v6}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;
+
+    iput-wide v7, p0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J
+
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
+
+    const/16 v2, 0xf
+
+    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I
+
+    const/4 v2, -0x1
+
+    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I
+
+    iput-wide v7, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J
+
+    new-instance v2, Lcom/android/server/am/ActivityManagerService$2;
+
+    invoke-direct {v2, p0}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Memory class: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;
+
+    move-result-object v0
+
+    new-instance v1, Ljava/io/File;
+
+    const-string v2, "system"
+
+    invoke-direct {v1, v0, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+
+    invoke-virtual {v1}, Ljava/io/File;->mkdirs()Z
+
+    new-instance v2, Lcom/android/server/am/BatteryStatsService;
+
+    new-instance v3, Ljava/io/File;
+
+    const-string v4, "batterystats.bin"
+
+    invoke-direct {v3, v1, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+
+    invoke-virtual {v3}, Ljava/io/File;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-direct {v2, v3}, Lcom/android/server/am/BatteryStatsService;-><init>(Ljava/lang/String;)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl;->readLocked()V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl;->getIsOnBattery()Z
+
+    move-result v2
+
+    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p0}, Lcom/android/internal/os/BatteryStatsImpl;->setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V
+
+    new-instance v2, Lcom/android/server/am/UsageStatsService;
+
+    new-instance v3, Ljava/io/File;
+
+    const-string v4, "usagestats"
+
+    invoke-direct {v3, v1, v4}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+
+    invoke-virtual {v3}, Ljava/io/File;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-direct {v2, v3}, Lcom/android/server/am/UsageStatsService;-><init>(Ljava/lang/String;)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+    const-string v2, "ro.opengles.version"
+
+    invoke-static {v2, v5}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I
+
+    move-result v2
+
+    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    invoke-virtual {v2}, Landroid/content/res/Configuration;->setToDefaults()V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;
+
+    move-result-object v3
+
+    iput-object v3, v2, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iput v6, v2, Landroid/content/res/Configuration;->seq:I
+
+    iput v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    invoke-virtual {v2}, Lcom/android/internal/os/ProcessStats;->init()V
+
+    new-instance v2, Lcom/android/server/am/CompatModePackages;
+
+    invoke-direct {v2, p0, v1}, Lcom/android/server/am/CompatModePackages;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V
+
+    new-instance v2, Lcom/android/server/am/ActivityManagerService$3;
+
+    const-string v3, "ProcessStats"
+
+    invoke-direct {v2, p0, v3}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsThread:Ljava/lang/Thread;
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsThread:Ljava/lang/Thread;
+
+    invoke-virtual {v2}, Ljava/lang/Thread;->start()V
+
+    return-void
+.end method
+
+.method synthetic constructor <init>(Lcom/android/server/am/ActivityManagerService$1;)V
+    .registers 2
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;-><init>()V
+
+    return-void
+.end method
+
+.method static synthetic access$000(Lcom/android/server/am/ActivityManagerService;)Landroid/content/Context;
+    .registers 2
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->getUiContext()Landroid/content/Context;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method static synthetic access$100(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+    .registers 15
+
+    invoke-direct/range {p0 .. p13}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    move-result v0
+
+    return v0
+.end method
+
+.method static synthetic access$1000(Lcom/android/server/am/ActivityManagerService;)Ljava/lang/StringBuilder;
+    .registers 2
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;
+
+    return-object v0
+.end method
+
+.method static synthetic access$200(Lcom/android/server/am/ActivityManagerService;Z)V
+    .registers 2
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processNextBroadcast(Z)V
+
+    return-void
+.end method
+
+.method static synthetic access$300(Lcom/android/server/am/ActivityManagerService;Z)V
+    .registers 2
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->broadcastTimeoutLocked(Z)V
+
+    return-void
+.end method
+
+.method static synthetic access$400(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
+    .registers 2
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    return-void
+.end method
+
+.method static synthetic access$500(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;IZZZZ)Z
+    .registers 8
+
+    invoke-direct/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+.method static synthetic access$600(Lcom/android/server/am/ActivityManagerService;IIZ)V
+    .registers 4
+
+    invoke-direct {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->dispatchForegroundActivitiesChanged(IIZ)V
+
+    return-void
+.end method
+
+.method static synthetic access$700(Lcom/android/server/am/ActivityManagerService;II)V
+    .registers 3
+
+    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessDied(II)V
+
+    return-void
+.end method
+
+.method static synthetic access$900(Ljava/util/ArrayList;)V
+    .registers 1
+
+    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V
+
+    return-void
+.end method
+
+.method private final addBroadcastToHistoryLocked(Lcom/android/server/am/BroadcastRecord;)V
+    .registers 7
+
+    const/4 v4, 0x0
+
+    iget v0, p1, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    if-gez v0, :cond_6
+
+    :goto_5
+    return-void
+
+    :cond_6
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastHistory:[Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastHistory:[Lcom/android/server/am/BroadcastRecord;
+
+    const/4 v2, 0x1
+
+    const/16 v3, 0x18
+
+    invoke-static {v0, v4, v1, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    iput-wide v0, p1, Lcom/android/server/am/BroadcastRecord;->finishTime:J
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastHistory:[Lcom/android/server/am/BroadcastRecord;
+
+    aput-object p1, v0, v4
+
+    goto :goto_5
+.end method
+
+.method private appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
+    .registers 13
+
+    if-nez p1, :cond_12
+
+    const-string v6, "Process: "
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "\n"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :goto_11
+    return-void
+
+    :cond_12
+    monitor-enter p0
+
+    :try_start_13
+    const-string v6, "Process: "
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "\n"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v6, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v5
+
+    const-string v6, "Flags: 0x"
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const/16 v7, 0x10
+
+    invoke-static {v1, v7}, Ljava/lang/Integer;->toString(II)Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "\n"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Ljava/util/HashSet;
+
+    invoke-virtual {v6}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v2
+
+    :goto_45
+    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_a4
+
+    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Ljava/lang/String;
+
+    const-string v6, "Package: "
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    :try_end_5a
+    .catchall {:try_start_13 .. :try_end_5a} :catchall_87
+
+    const/4 v6, 0x0
+
+    :try_start_5b
+    invoke-interface {v5, v4, v6}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_81
+
+    const-string v6, " v"
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget v7, v3, Landroid/content/pm/PackageInfo;->versionCode:I
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    iget-object v6, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;
+
+    if-eqz v6, :cond_81
+
+    const-string v6, " ("
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, ")"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    :try_end_81
+    .catchall {:try_start_5b .. :try_end_81} :catchall_87
+    .catch Landroid/os/RemoteException; {:try_start_5b .. :try_end_81} :catch_8a
+
+    :cond_81
+    :goto_81
+    :try_start_81
+    const-string v6, "\n"
+
+    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    goto :goto_45
+
+    :catchall_87
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_89
+    .catchall {:try_start_81 .. :try_end_89} :catchall_87
+
+    throw v6
+
+    :catch_8a
+    move-exception v0
+
+    :try_start_8b
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Error getting package info: "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_81
+
+    :cond_a4
+    monitor-exit p0
+    :try_end_a5
+    .catchall {:try_start_8b .. :try_end_a5} :catchall_87
+
+    goto/16 :goto_11
+.end method
+
+.method static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
+    .registers 14
+
+    const-wide/16 v7, 0x400
+
+    const/16 v5, 0x2e
+
+    invoke-virtual {p3, v5}, Ljava/lang/String;->lastIndexOf(I)I
+
+    move-result v4
+
+    if-ltz v4, :cond_32
+
+    add-int/lit8 v4, v4, 0x1
+
+    :goto_c
+    invoke-virtual {p3}, Ljava/lang/String;->length()I
+
+    move-result v2
+
+    const/4 v3, 0x0
+
+    :goto_11
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J
+
+    array-length v5, v5
+
+    if-ge v3, v5, :cond_3a
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J
+
+    aget-wide v5, v5, v3
+
+    cmp-long v5, v5, p1
+
+    if-ltz v5, :cond_37
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J
+
+    aget-wide v5, v5, v3
+
+    div-long v0, v5, v7
+
+    invoke-virtual {p0, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    if-eqz p4, :cond_34
+
+    const-string v5, "MB."
+
+    :goto_2b
+    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
+
+    :goto_31
+    return-void
+
+    :cond_32
+    const/4 v4, 0x0
+
+    goto :goto_c
+
+    :cond_34
+    const-string v5, "MB "
+
+    goto :goto_2b
+
+    :cond_37
+    add-int/lit8 v3, v3, 0x1
+
+    goto :goto_11
+
+    :cond_3a
+    div-long v5, p1, v7
+
+    invoke-virtual {p0, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    if-eqz p4, :cond_4a
+
+    const-string v5, "MB."
+
+    :goto_43
+    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;
+
+    goto :goto_31
+
+    :cond_4a
+    const-string v5, "MB "
+
+    goto :goto_43
+.end method
+
+.method private final attachApplicationLocked(Landroid/app/IApplicationThread;I)Z
+    .registers 37
+
+    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    move/from16 v0, p2
+
+    if-eq v0, v5, :cond_5f
+
+    if-ltz p2, :cond_5f
+
+    move-object/from16 v0, p0
+
+    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v9
+
+    :try_start_d
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move/from16 v0, p2
+
+    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v24
+
+    check-cast v24, Lcom/android/server/am/ProcessRecord;
+
+    monitor-exit v9
+    :try_end_1a
+    .catchall {:try_start_d .. :try_end_1a} :catchall_5c
+
+    :goto_1a
+    if-nez v24, :cond_68
+
+    const-string v5, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "No pending application record for pid "
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move/from16 v0, p2
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v13, " (IApplicationThread "
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v13, "); dropping process"
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v5, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v5, 0x7551
+
+    move/from16 v0, p2
+
+    invoke-static {v5, v0}, Landroid/util/EventLog;->writeEvent(II)I
+
+    if-lez p2, :cond_62
+
+    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    move/from16 v0, p2
+
+    if-eq v0, v5, :cond_62
+
+    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    :goto_5a
+    const/4 v5, 0x0
+
+    :goto_5b
+    return v5
+
+    :catchall_5c
+    move-exception v5
+
+    :try_start_5d
+    monitor-exit v9
+    :try_end_5e
+    .catchall {:try_start_5d .. :try_end_5e} :catchall_5c
+
+    throw v5
+
+    :cond_5f
+    const/16 v24, 0x0
+
+    goto :goto_1a
+
+    :cond_62
+    :try_start_62
+    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
+    :try_end_65
+    .catch Ljava/lang/Exception; {:try_start_62 .. :try_end_65} :catch_66
+
+    goto :goto_5a
+
+    :catch_66
+    move-exception v5
+
+    goto :goto_5a
+
+    :cond_68
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v5, :cond_77
+
+    const/4 v5, 0x1
+
+    const/4 v9, 0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-direct {v0, v1, v5, v9}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    :cond_77
+    move-object/from16 v0, v24
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    :try_start_7b
+    new-instance v23, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
+
+    move-object/from16 v0, v23
+
+    move-object/from16 v1, p0
+
+    move-object/from16 v2, v24
+
+    move/from16 v3, p2
+
+    move-object/from16 v4, p1
+
+    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V
+
+    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v5
+
+    const/4 v9, 0x0
+
+    move-object/from16 v0, v23
+
+    invoke-interface {v5, v0, v9}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
+
+    move-object/from16 v0, v23
+
+    move-object/from16 v1, v24
+
+    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->deathRecipient:Landroid/os/IBinder$DeathRecipient;
+    :try_end_9a
+    .catch Landroid/os/RemoteException; {:try_start_7b .. :try_end_9a} :catch_2d9
+
+    const/16 v5, 0x753a
+
+    const/4 v9, 0x2
+
+    new-array v9, v9, [Ljava/lang/Object;
+
+    const/4 v13, 0x0
+
+    move-object/from16 v0, v24
+
+    iget v14, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v14
+
+    aput-object v14, v9, v13
+
+    const/4 v13, 0x1
+
+    move-object/from16 v0, v24
+
+    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v14, v9, v13
+
+    invoke-static {v5, v9}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, p1
+
+    move-object/from16 v1, v24
+
+    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    const/16 v5, -0x64
+
+    move-object/from16 v0, v24
+
+    iput v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move-object/from16 v0, v24
+
+    iput v5, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v24
+
+    iput v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    const/4 v5, 0x1
+
+    move-object/from16 v0, v24
+
+    iput v5, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v24
+
+    iput-object v5, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v24
+
+    iput-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v24
+
+    iput-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v24
+
+    iput-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v9, 0x14
+
+    move-object/from16 v0, v24
+
+    invoke-virtual {v5, v9, v0}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V
+
+    move-object/from16 v0, p0
+
+    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-nez v5, :cond_ff
+
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_2e9
+
+    :cond_ff
+    const/16 v32, 0x1
+
+    :goto_101
+    if-eqz v32, :cond_2ed
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
+
+    move-result-object v8
+
+    :goto_10b
+    if-nez v32, :cond_127
+
+    const-string v5, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "Launching preboot mode app: "
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, v24
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v5, v9}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_127
+    const/4 v15, 0x0
+
+    :try_start_128
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    if-eqz v5, :cond_15a
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_15a
+
+    move-object/from16 v0, p0
+
+    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
+
+    if-eqz v5, :cond_2f0
+
+    const/4 v15, 0x2
+
+    :goto_13f
+    const/4 v5, 0x1
+
+    move-object/from16 v0, v24
+
+    iput-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z
+
+    move-object/from16 v0, p0
+
+    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z
+
+    if-eqz v5, :cond_15a
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z
+
+    move-object/from16 v0, p0
+
+    iput-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
+
+    :cond_15a
+    move-object/from16 v0, v24
+
+    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    if-eqz v5, :cond_182
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_182
+
+    move-object/from16 v0, v24
+
+    move-object/from16 v1, p0
+
+    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p0
+
+    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    move-object/from16 v0, p0
+
+    iget-boolean v12, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z
+
+    :cond_182
+    const/16 v31, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    if-eqz v5, :cond_1b1
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_1b1
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget v5, v5, Lcom/android/server/am/BackupRecord;->backupMode:I
+
+    const/4 v9, 0x2
+
+    if-eq v5, v9, :cond_1af
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget v5, v5, Lcom/android/server/am/BackupRecord;->backupMode:I
+
+    const/4 v9, 0x3
+
+    if-eq v5, v9, :cond_1af
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget v5, v5, Lcom/android/server/am/BackupRecord;->backupMode:I
+
+    const/4 v9, 0x1
+
+    if-ne v5, v9, :cond_2f3
+
+    :cond_1af
+    const/16 v31, 0x1
+
+    :cond_1b1
+    :goto_1b1
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;
+
+    if-eqz v5, :cond_2f7
+
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    :goto_1bd
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V
+
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    if-eqz v5, :cond_1d5
+
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V
+
+    :cond_1d5
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;
+
+    if-eqz v5, :cond_2ff
+
+    move-object/from16 v0, v24
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;
+
+    :goto_1df
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v7}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v5
+
+    move-object/from16 v0, v24
+
+    iput-object v5, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;
+
+    if-eqz v11, :cond_1ef
+
+    invoke-virtual {v11}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;
+
+    move-result-object v11
+
+    :cond_1ef
+    move-object/from16 v0, v24
+
+    iget-object v9, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    move-object/from16 v0, v24
+
+    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;
+
+    move-object/from16 v0, v24
+
+    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;
+
+    if-nez v31, :cond_1ff
+
+    if-nez v32, :cond_305
+
+    :cond_1ff
+    const/16 v16, 0x1
+
+    :goto_201
+    move-object/from16 v0, v24
+
+    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    move/from16 v17, v0
+
+    new-instance v18, Landroid/content/res/Configuration;
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    move-object/from16 v0, v18
+
+    invoke-direct {v0, v5}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
+
+    move-object/from16 v0, v24
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;
+
+    move-object/from16 v19, v0
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked()Ljava/util/HashMap;
+
+    move-result-object v20
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;
+
+    invoke-virtual {v5}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;
+
+    move-result-object v21
+
+    move-object/from16 v5, p1
+
+    invoke-interface/range {v5 .. v21}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/ParcelFileDescriptor;ZLandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;IZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;)V
+
+    const/4 v5, 0x0
+
+    const/4 v9, 0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-virtual {v0, v1, v5, v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v13
+
+    move-object/from16 v0, v24
+
+    iput-wide v13, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J
+
+    move-object/from16 v0, v24
+
+    iput-wide v13, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+    :try_end_23e
+    .catch Ljava/lang/Exception; {:try_start_128 .. :try_end_23e} :catch_309
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    move-object/from16 v0, v24
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    move-object/from16 v0, v24
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    const/16 v25, 0x0
+
+    const/16 v27, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v9, 0x0
+
+    invoke-virtual {v5, v9}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v29
+
+    if-eqz v29, :cond_293
+
+    if-eqz v32, :cond_293
+
+    move-object/from16 v0, v29
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v5, :cond_350
+
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v29
+
+    iget-object v9, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;
+
+    iget-object v9, v9, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    if-ne v5, v9, :cond_350
+
+    move-object/from16 v0, v29
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_350
+
+    :try_start_281
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v9, 0x1
+
+    const/4 v13, 0x1
+
+    move-object/from16 v0, v29
+
+    move-object/from16 v1, v24
+
+    invoke-virtual {v5, v0, v1, v9, v13}, Lcom/android/server/am/ActivityStack;->realStartActivityLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ProcessRecord;ZZ)Z
+    :try_end_28e
+    .catch Ljava/lang/Exception; {:try_start_281 .. :try_end_28e} :catch_325
+
+    move-result v5
+
+    if-eqz v5, :cond_293
+
+    const/16 v27, 0x1
+
+    :cond_293
+    :goto_293
+    if-nez v25, :cond_396
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-lez v5, :cond_396
+
+    const/16 v33, 0x0
+
+    const/16 v30, 0x0
+
+    :goto_2a3
+    :try_start_2a3
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    move/from16 v0, v30
+
+    if-ge v0, v5, :cond_396
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move/from16 v0, v30
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    move-object v0, v5
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v33, v0
+
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v33
+
+    iget-object v9, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    if-ne v5, v9, :cond_2d6
+
+    move-object/from16 v0, v33
+
+    iget-object v5, v0, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+    :try_end_2d3
+    .catch Ljava/lang/Exception; {:try_start_2a3 .. :try_end_2d3} :catch_375
+
+    move-result v5
+
+    if-nez v5, :cond_35d
+
+    :cond_2d6
+    :goto_2d6
+    add-int/lit8 v30, v30, 0x1
+
+    goto :goto_2a3
+
+    :catch_2d9
+    move-exception v28
+
+    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ProcessRecord;->resetPackageList()V
+
+    const-string v5, "link fail"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-direct {v0, v1, v5, v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v5, 0x0
+
+    goto/16 :goto_5b
+
+    :cond_2e9
+    const/16 v32, 0x0
+
+    goto/16 :goto_101
+
+    :cond_2ed
+    const/4 v8, 0x0
+
+    goto/16 :goto_10b
+
+    :cond_2f0
+    const/4 v15, 0x1
+
+    goto/16 :goto_13f
+
+    :cond_2f3
+    const/16 v31, 0x0
+
+    goto/16 :goto_1b1
+
+    :cond_2f7
+    :try_start_2f7
+    move-object/from16 v0, v24
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    goto/16 :goto_1bd
+
+    :cond_2ff
+    move-object/from16 v0, v24
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+    :try_end_303
+    .catch Ljava/lang/Exception; {:try_start_2f7 .. :try_end_303} :catch_309
+
+    goto/16 :goto_1df
+
+    :cond_305
+    const/16 v16, 0x0
+
+    goto/16 :goto_201
+
+    :catch_309
+    move-exception v28
+
+    const-string v5, "ActivityManager"
+
+    const-string v9, "Exception thrown during bind!"
+
+    move-object/from16 v0, v28
+
+    invoke-static {v5, v9, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ProcessRecord;->resetPackageList()V
+
+    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V
+
+    const-string v5, "bind fail"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-direct {v0, v1, v5, v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v5, 0x0
+
+    goto/16 :goto_5b
+
+    :catch_325
+    move-exception v28
+
+    const-string v5, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "Exception in new application when starting activity "
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, v29
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v13}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v13
+
+    invoke-virtual {v13}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v13
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    move-object/from16 v0, v28
+
+    invoke-static {v5, v9, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/16 v25, 0x1
+
+    goto/16 :goto_293
+
+    :cond_350
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v9, 0x0
+
+    const/4 v13, 0x0
+
+    move-object/from16 v0, v29
+
+    invoke-virtual {v5, v0, v9, v6, v13}, Lcom/android/server/am/ActivityStack;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V
+
+    goto/16 :goto_293
+
+    :cond_35d
+    :try_start_35d
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move/from16 v0, v30
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v30, v30, -0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v33
+
+    move-object/from16 v2, v24
+
+    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;)V
+    :try_end_371
+    .catch Ljava/lang/Exception; {:try_start_35d .. :try_end_371} :catch_375
+
+    const/16 v27, 0x1
+
+    goto/16 :goto_2d6
+
+    :catch_375
+    move-exception v28
+
+    const-string v5, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "Exception in new application when starting service "
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, v33
+
+    iget-object v13, v0, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    move-object/from16 v0, v28
+
+    invoke-static {v5, v9, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/16 v25, 0x1
+
+    :cond_396
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    move-object/from16 v26, v0
+
+    if-nez v25, :cond_3b8
+
+    if-eqz v26, :cond_3b8
+
+    move-object/from16 v0, v26
+
+    iget-object v5, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v24
+
+    if-ne v5, v0, :cond_3b8
+
+    const/4 v5, 0x0
+
+    :try_start_3a9
+    move-object/from16 v0, p0
+
+    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    move-object/from16 v2, v24
+
+    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->processCurBroadcastLocked(Lcom/android/server/am/BroadcastRecord;Lcom/android/server/am/ProcessRecord;)V
+    :try_end_3b6
+    .catch Ljava/lang/Exception; {:try_start_3a9 .. :try_end_3b6} :catch_408
+
+    const/16 v27, 0x1
+
+    :cond_3b8
+    :goto_3b8
+    if-nez v25, :cond_3fa
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    if-eqz v5, :cond_3fa
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v24
+
+    iget-object v9, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    if-ne v5, v9, :cond_3fa
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V
+
+    :try_start_3dd
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v0, p0
+
+    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v9
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget v13, v13, Lcom/android/server/am/BackupRecord;->backupMode:I
+
+    move-object/from16 v0, p1
+
+    invoke-interface {v0, v5, v9, v13}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
+    :try_end_3fa
+    .catch Ljava/lang/Exception; {:try_start_3dd .. :try_end_3fa} :catch_463
+
+    :cond_3fa
+    :goto_3fa
+    if-eqz v25, :cond_46f
+
+    const/4 v5, 0x0
+
+    const/4 v9, 0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v24
+
+    invoke-direct {v0, v1, v5, v9}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    const/4 v5, 0x0
+
+    goto/16 :goto_5b
+
+    :catch_408
+    move-exception v28
+
+    const-string v5, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "Exception in new application when starting receiver "
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, v26
+
+    iget-object v13, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v13}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v13
+
+    invoke-virtual {v9, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    move-object/from16 v0, v28
+
+    invoke-static {v5, v9, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/16 v25, 0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    move-object/from16 v0, v26
+
+    iget-object v0, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v26
+
+    iget v0, v0, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    move/from16 v18, v0
+
+    move-object/from16 v0, v26
+
+    iget-object v0, v0, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    move-object/from16 v19, v0
+
+    move-object/from16 v0, v26
+
+    iget-object v0, v0, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    move-object/from16 v20, v0
+
+    move-object/from16 v0, v26
+
+    iget-boolean v0, v0, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    move/from16 v21, v0
+
+    const/16 v22, 0x1
+
+    move-object/from16 v16, p0
+
+    invoke-direct/range {v16 .. v22}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v26
+
+    iput v5, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    goto/16 :goto_3b8
+
+    :catch_463
+    move-exception v28
+
+    const-string v5, "ActivityManager"
+
+    const-string v9, "Exception scheduling backup agent creation: "
+
+    invoke-static {v5, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual/range {v28 .. v28}, Ljava/lang/Exception;->printStackTrace()V
+
+    goto :goto_3fa
+
+    :cond_46f
+    if-nez v27, :cond_474
+
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_474
+    const/4 v5, 0x1
+
+    goto/16 :goto_5b
+.end method
+
+.method private final bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+    .registers 16
+
+    if-nez p2, :cond_7
+
+    iget-boolean v9, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-eqz v9, :cond_7
+
+    :cond_6
+    :goto_6
+    return-void
+
+    :cond_7
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_bc
+
+    if-nez p2, :cond_3d
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v9
+
+    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v8
+
+    :cond_1b
+    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_3d
+
+    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Ljava/util/ArrayList;
+
+    const/4 v5, 0x0
+
+    :goto_28
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v9
+
+    if-ge v5, v9, :cond_1b
+
+    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ConnectionRecord;
+
+    iget v9, v9, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v9, v9, 0x1
+
+    if-nez v9, :cond_6
+
+    add-int/lit8 v5, v5, 0x1
+
+    goto :goto_28
+
+    :cond_3d
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v9
+
+    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v8
+
+    :cond_47
+    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_bc
+
+    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/util/ArrayList;
+
+    const/4 v5, 0x0
+
+    :goto_54
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v9
+
+    if-ge v5, v9, :cond_47
+
+    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ConnectionRecord;
+
+    const/4 v9, 0x1
+
+    iput-boolean v9, v2, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z
+
+    :try_start_63
+    iget-object v9, v2, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    iget-object v10, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    const/4 v11, 0x0
+
+    invoke-interface {v9, v10, v11}, Landroid/app/IServiceConnection;->connected(Landroid/content/ComponentName;Landroid/os/IBinder;)V
+    :try_end_6b
+    .catch Ljava/lang/Exception; {:try_start_63 .. :try_end_6b} :catch_6e
+
+    :goto_6b
+    add-int/lit8 v5, v5, 0x1
+
+    goto :goto_54
+
+    :catch_6e
+    move-exception v4
+
+    const-string v10, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Failure disconnecting service "
+
+    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v11, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v11, " to connection "
+
+    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    invoke-interface {v9}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v9
+
+    invoke-virtual {v11, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v11, " (in "
+
+    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v11, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v11, ")"
+
+    invoke-virtual {v9, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v10, v9, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_6b
+
+    :cond_bc
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_12d
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v9, :cond_12d
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v9, :cond_12d
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v9
+
+    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v7
+
+    :cond_d8
+    :goto_d8
+    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_12d
+
+    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v9, :cond_d8
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v9, :cond_d8
+
+    iget-boolean v9, v6, Lcom/android/server/am/IntentBindRecord;->hasBound:Z
+
+    if-eqz v9, :cond_d8
+
+    :try_start_f2
+    const-string v9, "bring down unbind"
+
+    invoke-direct {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {p0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, v6, Lcom/android/server/am/IntentBindRecord;->hasBound:Z
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    iget-object v10, v6, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v10}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v10
+
+    invoke-interface {v9, p1, v10}, Landroid/app/IApplicationThread;->scheduleUnbindService(Landroid/os/IBinder;Landroid/content/Intent;)V
+    :try_end_10c
+    .catch Ljava/lang/Exception; {:try_start_f2 .. :try_end_10c} :catch_10d
+
+    goto :goto_d8
+
+    :catch_10d
+    move-exception v4
+
+    const-string v9, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Exception when unbinding service "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    iget-object v11, p1, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v9, v10, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v9, 0x1
+
+    invoke-virtual {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto :goto_d8
+
+    :cond_12d
+    const/16 v10, 0x754f
+
+    const/4 v9, 0x3
+
+    new-array v11, v9, [Ljava/lang/Object;
+
+    const/4 v9, 0x0
+
+    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v12
+
+    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v12
+
+    aput-object v12, v11, v9
+
+    const/4 v9, 0x1
+
+    iget-object v12, p1, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    aput-object v12, v11, v9
+
+    const/4 v12, 0x2
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v9, :cond_185
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v9, v9, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    :goto_14b
+    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v9
+
+    aput-object v9, v11, v12
+
+    invoke-static {v10, v11}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    iget-object v10, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v9, v10}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mServicesByIntent:Ljava/util/HashMap;
+
+    iget-object v10, p1, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v9, v10}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    const/4 v9, 0x0
+
+    iput v9, p1, Lcom/android/server/am/ServiceRecord;->totalRestartCount:I
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->unscheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)Z
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v5, 0x0
+
+    :goto_16f
+    if-ge v5, v0, :cond_187
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    if-ne v9, p1, :cond_182
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v5, v5, -0x1
+
+    add-int/lit8 v0, v0, -0x1
+
+    :cond_182
+    add-int/lit8 v5, v5, 0x1
+
+    goto :goto_16f
+
+    :cond_185
+    const/4 v9, -0x1
+
+    goto :goto_14b
+
+    :cond_187
+    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->cancelNotification()V
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    const/4 v9, 0x0
+
+    iput v9, p1, Lcom/android/server/am/ServiceRecord;->foregroundId:I
+
+    const/4 v9, 0x0
+
+    iput-object v9, p1, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;
+
+    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->clearDeliveredStartsLocked()V
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v9, :cond_1d5
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v10
+
+    monitor-enter v10
+
+    :try_start_1a6
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->stopLaunchedLocked()V
+
+    monitor-exit v10
+    :try_end_1ac
+    .catchall {:try_start_1a6 .. :try_end_1ac} :catchall_1f2
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v9, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v9, :cond_1d5
+
+    :try_start_1b9
+    const-string v9, "stop"
+
+    invoke-direct {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {p0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v9, p1}, Landroid/app/IApplicationThread;->scheduleStopService(Landroid/os/IBinder;)V
+    :try_end_1cf
+    .catch Ljava/lang/Exception; {:try_start_1b9 .. :try_end_1cf} :catch_1f5
+
+    :goto_1cf
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v10, 0x0
+
+    invoke-virtual {p0, v9, v10}, Lcom/android/server/am/ActivityManagerService;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessRecord;Z)V
+
+    :cond_1d5
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_1e2
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->clear()V
+
+    :cond_1e2
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;
+
+    instance-of v9, v9, Lcom/android/server/am/ActivityManagerService$ServiceRestarter;
+
+    if-eqz v9, :cond_6
+
+    iget-object v9, p1, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;
+
+    check-cast v9, Lcom/android/server/am/ActivityManagerService$ServiceRestarter;
+
+    const/4 v10, 0x0
+
+    invoke-virtual {v9, v10}, Lcom/android/server/am/ActivityManagerService$ServiceRestarter;->setService(Lcom/android/server/am/ServiceRecord;)V
+
+    goto/16 :goto_6
+
+    :catchall_1f2
+    move-exception v9
+
+    :try_start_1f3
+    monitor-exit v10
+    :try_end_1f4
+    .catchall {:try_start_1f3 .. :try_end_1f4} :catchall_1f2
+
+    throw v9
+
+    :catch_1f5
+    move-exception v4
+
+    const-string v9, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Exception when stopping service "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    iget-object v11, p1, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v9, v10, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v9, 0x1
+
+    invoke-virtual {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto :goto_1cf
+.end method
+
+.method private final bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZ)Z
+    .registers 16
+
+    const/4 v7, 0x0
+
+    const/4 v3, 0x1
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v0, :cond_10
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v0, :cond_10
+
+    invoke-direct {p0, p1, v7}, Lcom/android/server/am/ActivityManagerService;->sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    :cond_f
+    :goto_f
+    return v3
+
+    :cond_10
+    if-nez p3, :cond_1a
+
+    iget-wide v4, p1, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    const-wide/16 v10, 0x0
+
+    cmp-long v0, v4, v10
+
+    if-gtz v0, :cond_f
+
+    :cond_1a
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    :try_start_1f
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v0
+
+    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    invoke-interface {v0, v2, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;Z)V
+    :try_end_29
+    .catch Landroid/os/RemoteException; {:try_start_1f .. :try_end_29} :catch_e9
+    .catch Ljava/lang/IllegalArgumentException; {:try_start_1f .. :try_end_29} :catch_b3
+
+    :goto_29
+    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {p0, v1, v0}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_5f
+
+    iget-object v0, v8, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v0, :cond_5f
+
+    :try_start_39
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v8, v0}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;)Z
+
+    invoke-direct {p0, p1, v8}, Lcom/android/server/am/ActivityManagerService;->realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;)V
+    :try_end_43
+    .catch Landroid/os/RemoteException; {:try_start_39 .. :try_end_43} :catch_44
+
+    goto :goto_f
+
+    :catch_44
+    move-exception v9
+
+    const-string v0, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Exception when starting service "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    :cond_5f
+    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    const-string v5, "service"
+
+    iget-object v6, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object v0, p0
+
+    move v4, p2
+
+    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;Z)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_da
+
+    const-string v0, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unable to launch app "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v4, "/"
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v4, " for service "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v4}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v4
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v4, ": process is bad"
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-direct {p0, p1, v3}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    move v3, v7
+
+    goto/16 :goto_f
+
+    :catch_b3
+    move-exception v9
+
+    const-string v0, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Failed trying to unstop package "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v4, ": "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_29
+
+    :cond_da
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_f
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto/16 :goto_f
+
+    :catch_e9
+    move-exception v0
+
+    goto/16 :goto_29
+.end method
+
+.method private final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+    .registers 74
+
+    new-instance v42, Landroid/content/Intent;
+
+    move-object/from16 v0, v42
+
+    move-object/from16 v1, p3
+
+    invoke-direct {v0, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    const/16 v3, 0x10
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    if-eqz p5, :cond_34
+
+    if-nez p10, :cond_34
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Broadcast "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " not ordered but result callback requested!"
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_34
+    const-string v3, "android.intent.action.UID_REMOVED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v59
+
+    const-string v3, "android.intent.action.PACKAGE_REMOVED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_64
+
+    const-string v3, "android.intent.action.PACKAGE_CHANGED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_64
+
+    const-string v3, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_64
+
+    if-eqz v59, :cond_233
+
+    :cond_64
+    const-string v4, "android.permission.BROADCAST_PACKAGE_REMOVED"
+
+    const/4 v7, -0x1
+
+    const/4 v8, 0x1
+
+    move-object/from16 v3, p0
+
+    move/from16 v5, p12
+
+    move/from16 v6, p13
+
+    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v3
+
+    if-nez v3, :cond_1d7
+
+    if-eqz v59, :cond_151
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;
+
+    move-result-object v43
+
+    if-eqz v43, :cond_14a
+
+    const-string v3, "android.intent.extra.UID"
+
+    move-object/from16 v0, v43
+
+    invoke-virtual {v0, v3}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I
+
+    move-result v58
+
+    :goto_84
+    if-ltz v58, :cond_97
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v3}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v35
+
+    monitor-enter v35
+
+    :try_start_8f
+    move-object/from16 v0, v35
+
+    move/from16 v1, v58
+
+    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->removeUidStatsLocked(I)V
+
+    monitor-exit v35
+    :try_end_97
+    .catchall {:try_start_8f .. :try_end_97} :catchall_14e
+
+    :cond_97
+    :goto_97
+    const-string v3, "android.intent.action.TIMEZONE_CHANGED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_ac
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v5, 0xd
+
+    invoke-virtual {v3, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    :cond_ac
+    const-string v3, "android.intent.action.CLEAR_DNS_CACHE"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_c1
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v5, 0x1c
+
+    invoke-virtual {v3, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    :cond_c1
+    const-string v3, "android.intent.action.PROXY_CHANGE"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_ea
+
+    const-string v3, "proxy"
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;
+
+    move-result-object v51
+
+    check-cast v51, Landroid/net/ProxyProperties;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v8, 0x1d
+
+    move-object/from16 v0, v51
+
+    invoke-virtual {v5, v8, v0}, Landroid/os/Handler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    :cond_ea
+    const/16 v3, 0x3e8
+
+    move/from16 v0, p13
+
+    if-eq v0, v3, :cond_fe
+
+    const/16 v3, 0x3e9
+
+    move/from16 v0, p13
+
+    if-eq v0, v3, :cond_fe
+
+    const/16 v3, 0x7d0
+
+    move/from16 v0, p13
+
+    if-eq v0, v3, :cond_fe
+
+    if-nez p13, :cond_25d
+
+    :cond_fe
+    if-eqz p11, :cond_355
+
+    const-string v3, "android.permission.BROADCAST_STICKY"
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p12
+
+    move/from16 v2, p13
+
+    invoke-virtual {v0, v3, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I
+
+    move-result v3
+
+    if-eqz v3, :cond_2bd
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move/from16 v0, p12
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move/from16 v0, p13
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " requires "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, "android.permission.BROADCAST_STICKY"
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v49
+
+    const-string v3, "ActivityManager"
+
+    move-object/from16 v0, v49
+
+    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v3, Ljava/lang/SecurityException;
+
+    move-object/from16 v0, v49
+
+    invoke-direct {v3, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_14a
+    const/16 v58, -0x1
+
+    goto/16 :goto_84
+
+    :catchall_14e
+    move-exception v3
+
+    :try_start_14f
+    monitor-exit v35
+    :try_end_150
+    .catchall {:try_start_14f .. :try_end_150} :catchall_14e
+
+    throw v3
+
+    :cond_151
+    const-string v3, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_194
+
+    const-string v3, "android.intent.extra.changed_package_list"
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;
+
+    move-result-object v47
+
+    if-eqz v47, :cond_97
+
+    move-object/from16 v0, v47
+
+    array-length v3, v0
+
+    if-lez v3, :cond_97
+
+    move-object/from16 v34, v47
+
+    move-object/from16 v0, v34
+
+    array-length v0, v0
+
+    move/from16 v46, v0
+
+    const/16 v41, 0x0
+
+    :goto_175
+    move/from16 v0, v41
+
+    move/from16 v1, v46
+
+    if-ge v0, v1, :cond_18a
+
+    aget-object v4, v34, v41
+
+    const/4 v5, -0x1
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x1
+
+    const/4 v8, 0x1
+
+    const/4 v9, 0x0
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    add-int/lit8 v41, v41, 0x1
+
+    goto :goto_175
+
+    :cond_18a
+    const/4 v3, 0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v47
+
+    invoke-direct {v0, v3, v1}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;)V
+
+    goto/16 :goto_97
+
+    :cond_194
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v38
+
+    if-eqz v38, :cond_97
+
+    invoke-virtual/range {v38 .. v38}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_97
+
+    const-string v3, "android.intent.extra.DONT_KILL_APP"
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3, v5}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z
+
+    move-result v3
+
+    if-nez v3, :cond_1bd
+
+    const-string v3, "android.intent.extra.UID"
+
+    const/4 v5, -0x1
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3, v5}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I
+
+    move-result v7
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x1
+
+    const/4 v10, 0x1
+
+    const/4 v11, 0x0
+
+    move-object/from16 v5, p0
+
+    invoke-direct/range {v5 .. v11}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    :cond_1bd
+    const-string v3, "android.intent.action.PACKAGE_REMOVED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_97
+
+    const/4 v3, 0x0
+
+    const/4 v5, 0x1
+
+    new-array v5, v5, [Ljava/lang/String;
+
+    const/4 v8, 0x0
+
+    aput-object v6, v5, v8
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;)V
+
+    goto/16 :goto_97
+
+    :cond_1d7
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " broadcast from "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " (pid="
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move/from16 v0, p12
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move/from16 v0, p13
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, ")"
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " requires "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, "android.permission.BROADCAST_PACKAGE_REMOVED"
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v49
+
+    const-string v3, "ActivityManager"
+
+    move-object/from16 v0, v49
+
+    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v3, Ljava/lang/SecurityException;
+
+    move-object/from16 v0, v49
+
+    invoke-direct {v3, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_233
+    const-string v3, "android.intent.action.PACKAGE_ADDED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_97
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v38
+
+    if-eqz v38, :cond_97
+
+    invoke-virtual/range {v38 .. v38}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_97
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    const-string v5, "android.intent.extra.REPLACING"
+
+    const/4 v8, 0x0
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v5, v8}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z
+
+    move-result v5
+
+    invoke-virtual {v3, v6, v5}, Lcom/android/server/am/CompatModePackages;->handlePackageAddedLocked(Ljava/lang/String;Z)V
+
+    goto/16 :goto_97
+
+    :cond_25d
+    if-eqz p1, :cond_265
+
+    move-object/from16 v0, p1
+
+    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v3, :cond_fe
+
+    :cond_265
+    :try_start_265
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-interface {v3, v5}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_fe
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: not allowed to send broadcast "
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, " from pid="
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move/from16 v0, p12
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move/from16 v0, p13
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v49
+
+    const-string v3, "ActivityManager"
+
+    move-object/from16 v0, v49
+
+    invoke-static {v3, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v3, Ljava/lang/SecurityException;
+
+    move-object/from16 v0, v49
+
+    invoke-direct {v3, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+    :try_end_2b1
+    .catch Landroid/os/RemoteException; {:try_start_265 .. :try_end_2b1} :catch_2b1
+
+    :catch_2b1
+    move-exception v39
+
+    const-string v3, "ActivityManager"
+
+    const-string v5, "Remote exception"
+
+    move-object/from16 v0, v39
+
+    invoke-static {v3, v5, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v3, 0x0
+
+    :goto_2bc
+    return v3
+
+    :cond_2bd
+    if-eqz p9, :cond_2e7
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Can\'t broadcast sticky intent "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v8, " and enforce permission "
+
+    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, p9
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v3, -0x1
+
+    goto :goto_2bc
+
+    :cond_2e7
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_2f5
+
+    new-instance v3, Ljava/lang/SecurityException;
+
+    const-string v5, "Sticky broadcasts can\'t target a specific component"
+
+    invoke-direct {v3, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_2f5
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v48
+
+    check-cast v48, Ljava/util/ArrayList;
+
+    if-nez v48, :cond_317
+
+    new-instance v48, Ljava/util/ArrayList;
+
+    invoke-direct/range {v48 .. v48}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v48
+
+    invoke-virtual {v3, v5, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_317
+    invoke-virtual/range {v48 .. v48}, Ljava/util/ArrayList;->size()I
+
+    move-result v30
+
+    const/16 v40, 0x0
+
+    :goto_31d
+    move/from16 v0, v40
+
+    move/from16 v1, v30
+
+    if-ge v0, v1, :cond_343
+
+    move-object/from16 v0, v48
+
+    move/from16 v1, v40
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Landroid/content/Intent;
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_485
+
+    new-instance v3, Landroid/content/Intent;
+
+    move-object/from16 v0, v42
+
+    invoke-direct {v3, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    move-object/from16 v0, v48
+
+    move/from16 v1, v40
+
+    invoke-virtual {v0, v1, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;
+
+    :cond_343
+    move/from16 v0, v40
+
+    move/from16 v1, v30
+
+    if-lt v0, v1, :cond_355
+
+    new-instance v3, Landroid/content/Intent;
+
+    move-object/from16 v0, v42
+
+    invoke-direct {v3, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    move-object/from16 v0, v48
+
+    invoke-virtual {v0, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_355
+    const/16 v22, 0x0
+
+    const/4 v14, 0x0
+
+    :try_start_358
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_489
+
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v5
+
+    const/16 v8, 0x400
+
+    invoke-interface {v3, v5, v8}, Landroid/content/pm/IPackageManager;->getReceiverInfo(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;
+
+    move-result-object v33
+
+    if-eqz v33, :cond_387
+
+    new-instance v52, Ljava/util/ArrayList;
+
+    invoke-direct/range {v52 .. v52}, Ljava/util/ArrayList;-><init>()V
+    :try_end_373
+    .catch Landroid/os/RemoteException; {:try_start_358 .. :try_end_373} :catch_5af
+
+    :try_start_373
+    new-instance v55, Landroid/content/pm/ResolveInfo;
+
+    invoke-direct/range {v55 .. v55}, Landroid/content/pm/ResolveInfo;-><init>()V
+
+    move-object/from16 v0, v33
+
+    move-object/from16 v1, v55
+
+    iput-object v0, v1, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    move-object/from16 v0, v52
+
+    move-object/from16 v1, v55
+
+    invoke-interface {v0, v1}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_385
+    .catch Landroid/os/RemoteException; {:try_start_373 .. :try_end_385} :catch_5b2
+
+    move-object/from16 v22, v52
+
+    :cond_387
+    :goto_387
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getFlags()I
+
+    move-result v3
+
+    const/high16 v5, 0x2000
+
+    and-int/2addr v3, v5
+
+    if-eqz v3, :cond_4af
+
+    const/16 v53, 0x1
+
+    :goto_392
+    if-eqz v14, :cond_4b3
+
+    invoke-interface {v14}, Ljava/util/List;->size()I
+
+    move-result v31
+
+    :goto_398
+    if-nez p10, :cond_3fb
+
+    if-lez v31, :cond_3fb
+
+    new-instance v7, Lcom/android/server/am/BroadcastRecord;
+
+    const/16 v21, 0x0
+
+    move-object/from16 v8, v42
+
+    move-object/from16 v9, p1
+
+    move-object/from16 v10, p2
+
+    move/from16 v11, p12
+
+    move/from16 v12, p13
+
+    move-object/from16 v13, p9
+
+    move-object/from16 v15, p5
+
+    move/from16 v16, p6
+
+    move-object/from16 v17, p7
+
+    move-object/from16 v18, p8
+
+    move/from16 v19, p10
+
+    move/from16 v20, p11
+
+    invoke-direct/range {v7 .. v21}, Lcom/android/server/am/BroadcastRecord;-><init>(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZ)V
+
+    const/16 v54, 0x0
+
+    if-eqz v53, :cond_3ec
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    add-int/lit8 v40, v3, -0x1
+
+    :goto_3c9
+    if-ltz v40, :cond_3ec
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    move/from16 v0, v40
+
+    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_4b7
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    move/from16 v0, v40
+
+    invoke-virtual {v3, v0, v7}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;
+
+    const/16 v54, 0x1
+
+    :cond_3ec
+    if-nez v54, :cond_3f8
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    :cond_3f8
+    const/4 v14, 0x0
+
+    const/16 v31, 0x0
+
+    :cond_3fb
+    const/16 v44, 0x0
+
+    if-eqz v22, :cond_527
+
+    const/16 v57, 0x0
+
+    const-string v3, "android.intent.action.PACKAGE_ADDED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_425
+
+    const-string v3, "android.intent.action.PACKAGE_RESTARTED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_425
+
+    const-string v3, "android.intent.action.PACKAGE_DATA_CLEARED"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_4bb
+
+    :cond_425
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v38
+
+    if-eqz v38, :cond_439
+
+    invoke-virtual/range {v38 .. v38}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;
+
+    move-result-object v50
+
+    if-eqz v50, :cond_439
+
+    const/4 v3, 0x1
+
+    new-array v0, v3, [Ljava/lang/String;
+
+    move-object/from16 v57, v0
+
+    const/4 v3, 0x0
+
+    aput-object v50, v57, v3
+
+    :cond_439
+    :goto_439
+    if-eqz v57, :cond_4d5
+
+    move-object/from16 v0, v57
+
+    array-length v3, v0
+
+    if-lez v3, :cond_4d5
+
+    move-object/from16 v34, v57
+
+    move-object/from16 v0, v34
+
+    array-length v0, v0
+
+    move/from16 v46, v0
+
+    const/16 v41, 0x0
+
+    :goto_449
+    move/from16 v0, v41
+
+    move/from16 v1, v46
+
+    if-ge v0, v1, :cond_4d5
+
+    aget-object v56, v34, v41
+
+    if-eqz v56, :cond_4d1
+
+    invoke-interface/range {v22 .. v22}, Ljava/util/List;->size()I
+
+    move-result v32
+
+    const/16 v45, 0x0
+
+    :goto_459
+    move/from16 v0, v45
+
+    move/from16 v1, v32
+
+    if-ge v0, v1, :cond_4d1
+
+    move-object/from16 v0, v22
+
+    move/from16 v1, v45
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v37
+
+    check-cast v37, Landroid/content/pm/ResolveInfo;
+
+    move-object/from16 v0, v37
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v56
+
+    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_482
+
+    move-object/from16 v0, v22
+
+    move/from16 v1, v45
+
+    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v45, v45, -0x1
+
+    add-int/lit8 v32, v32, -0x1
+
+    :cond_482
+    add-int/lit8 v45, v45, 0x1
+
+    goto :goto_459
+
+    :cond_485
+    add-int/lit8 v40, v40, 0x1
+
+    goto/16 :goto_31d
+
+    :cond_489
+    :try_start_489
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getFlags()I
+
+    move-result v3
+
+    const/high16 v5, 0x4000
+
+    and-int/2addr v3, v5
+
+    if-nez v3, :cond_4a0
+
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    const/16 v5, 0x400
+
+    move-object/from16 v0, v42
+
+    move-object/from16 v1, p4
+
+    invoke-interface {v3, v0, v1, v5}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;I)Ljava/util/List;
+
+    move-result-object v22
+
+    :cond_4a0
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v42
+
+    move-object/from16 v1, p4
+
+    invoke-virtual {v3, v0, v1, v5}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;Z)Ljava/util/List;
+    :try_end_4ac
+    .catch Landroid/os/RemoteException; {:try_start_489 .. :try_end_4ac} :catch_5af
+
+    move-result-object v14
+
+    goto/16 :goto_387
+
+    :cond_4af
+    const/16 v53, 0x0
+
+    goto/16 :goto_392
+
+    :cond_4b3
+    const/16 v31, 0x0
+
+    goto/16 :goto_398
+
+    :cond_4b7
+    add-int/lit8 v40, v40, -0x1
+
+    goto/16 :goto_3c9
+
+    :cond_4bb
+    const-string v3, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"
+
+    invoke-virtual/range {v42 .. v42}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_439
+
+    const-string v3, "android.intent.extra.changed_package_list"
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;
+
+    move-result-object v57
+
+    goto/16 :goto_439
+
+    :cond_4d1
+    add-int/lit8 v41, v41, 0x1
+
+    goto/16 :goto_449
+
+    :cond_4d5
+    if-eqz v22, :cond_51f
+
+    invoke-interface/range {v22 .. v22}, Ljava/util/List;->size()I
+
+    move-result v32
+
+    :goto_4db
+    const/16 v45, 0x0
+
+    const/16 v37, 0x0
+
+    const/16 v36, 0x0
+
+    :goto_4e1
+    move/from16 v0, v45
+
+    move/from16 v1, v32
+
+    if-ge v0, v1, :cond_527
+
+    move/from16 v0, v44
+
+    move/from16 v1, v31
+
+    if-ge v0, v1, :cond_527
+
+    if-nez v37, :cond_4f9
+
+    move-object/from16 v0, v22
+
+    move/from16 v1, v45
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v37
+
+    check-cast v37, Landroid/content/pm/ResolveInfo;
+
+    :cond_4f9
+    if-nez v36, :cond_503
+
+    move/from16 v0, v44
+
+    invoke-interface {v14, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v36
+
+    check-cast v36, Lcom/android/server/am/BroadcastFilter;
+
+    :cond_503
+    invoke-virtual/range {v36 .. v36}, Lcom/android/server/am/BroadcastFilter;->getPriority()I
+
+    move-result v3
+
+    move-object/from16 v0, v37
+
+    iget v5, v0, Landroid/content/pm/ResolveInfo;->priority:I
+
+    if-lt v3, v5, :cond_522
+
+    move-object/from16 v0, v22
+
+    move/from16 v1, v45
+
+    move-object/from16 v2, v36
+
+    invoke-interface {v0, v1, v2}, Ljava/util/List;->add(ILjava/lang/Object;)V
+
+    add-int/lit8 v44, v44, 0x1
+
+    const/16 v36, 0x0
+
+    add-int/lit8 v45, v45, 0x1
+
+    add-int/lit8 v32, v32, 0x1
+
+    goto :goto_4e1
+
+    :cond_51f
+    const/16 v32, 0x0
+
+    goto :goto_4db
+
+    :cond_522
+    add-int/lit8 v45, v45, 0x1
+
+    const/16 v37, 0x0
+
+    goto :goto_4e1
+
+    :cond_527
+    :goto_527
+    move/from16 v0, v44
+
+    move/from16 v1, v31
+
+    if-ge v0, v1, :cond_542
+
+    if-nez v22, :cond_534
+
+    new-instance v22, Ljava/util/ArrayList;
+
+    invoke-direct/range {v22 .. v22}, Ljava/util/ArrayList;-><init>()V
+
+    :cond_534
+    move/from16 v0, v44
+
+    invoke-interface {v14, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    move-object/from16 v0, v22
+
+    invoke-interface {v0, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 v44, v44, 0x1
+
+    goto :goto_527
+
+    :cond_542
+    if-eqz v22, :cond_54a
+
+    invoke-interface/range {v22 .. v22}, Ljava/util/List;->size()I
+
+    move-result v3
+
+    if-gtz v3, :cond_54c
+
+    :cond_54a
+    if-eqz p5, :cond_5a9
+
+    :cond_54c
+    new-instance v7, Lcom/android/server/am/BroadcastRecord;
+
+    const/16 v29, 0x0
+
+    move-object v15, v7
+
+    move-object/from16 v16, v42
+
+    move-object/from16 v17, p1
+
+    move-object/from16 v18, p2
+
+    move/from16 v19, p12
+
+    move/from16 v20, p13
+
+    move-object/from16 v21, p9
+
+    move-object/from16 v23, p5
+
+    move/from16 v24, p6
+
+    move-object/from16 v25, p7
+
+    move-object/from16 v26, p8
+
+    move/from16 v27, p10
+
+    move/from16 v28, p11
+
+    invoke-direct/range {v15 .. v29}, Lcom/android/server/am/BroadcastRecord;-><init>(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZ)V
+
+    const/16 v54, 0x0
+
+    if-eqz v53, :cond_59d
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    add-int/lit8 v40, v3, -0x1
+
+    :goto_57a
+    if-lez v40, :cond_59d
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    move/from16 v0, v40
+
+    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    move-object/from16 v0, v42
+
+    invoke-virtual {v0, v3}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_5ac
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    move/from16 v0, v40
+
+    invoke-virtual {v3, v0, v7}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;
+
+    const/16 v54, 0x1
+
+    :cond_59d
+    if-nez v54, :cond_5a9
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    :cond_5a9
+    const/4 v3, 0x0
+
+    goto/16 :goto_2bc
+
+    :cond_5ac
+    add-int/lit8 v40, v40, -0x1
+
+    goto :goto_57a
+
+    :catch_5af
+    move-exception v3
+
+    goto/16 :goto_387
+
+    :catch_5b2
+    move-exception v3
+
+    move-object/from16 v22, v52
+
+    goto/16 :goto_387
+.end method
+
+.method private final broadcastTimeoutLocked(Z)V
+    .registers 21
+
+    if-eqz p1, :cond_7
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastTimeoutMessage:Z
+
+    :cond_7
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    if-nez v3, :cond_12
+
+    :cond_11
+    :goto_11
+    return-void
+
+    :cond_12
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v14
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz p1, :cond_58
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
+
+    if-eqz v3, :cond_3e
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v3
+
+    const-wide/16 v5, 0x2710
+
+    add-long v17, v3, v5
+
+    move-object/from16 v0, p0
+
+    move-wide/from16 v1, v17
+
+    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->setBroadcastTimeoutLocked(J)V
+
+    goto :goto_11
+
+    :cond_3e
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-eqz v3, :cond_11
+
+    move-object/from16 v0, v16
+
+    iget-wide v3, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    const-wide/16 v5, 0x2710
+
+    add-long v17, v3, v5
+
+    cmp-long v3, v17, v14
+
+    if-lez v3, :cond_58
+
+    move-object/from16 v0, p0
+
+    move-wide/from16 v1, v17
+
+    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->setBroadcastTimeoutLocked(J)V
+
+    goto :goto_11
+
+    :cond_58
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Timeout of broadcast "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " - receiver="
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, v16
+
+    iget-object v5, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, ", started "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, v16
+
+    iget-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    sub-long v5, v14, v5
+
+    invoke-virtual {v4, v5, v6}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, "ms ago"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, v16
+
+    iput-wide v14, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    move-object/from16 v0, v16
+
+    iget v3, v0, Lcom/android/server/am/BroadcastRecord;->anrCount:I
+
+    add-int/lit8 v3, v3, 0x1
+
+    move-object/from16 v0, v16
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->anrCount:I
+
+    move-object/from16 v0, v16
+
+    iget v3, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    if-gtz v3, :cond_b3
+
+    const-string v3, "ActivityManager"
+
+    const-string v4, "Timeout on receiver with nextReceiver <= 0"
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_11
+
+    :cond_b3
+    const/4 v11, 0x0
+
+    const/4 v10, 0x0
+
+    move-object/from16 v0, v16
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    move-object/from16 v0, v16
+
+    iget v4, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    add-int/lit8 v4, v4, -0x1
+
+    invoke-interface {v3, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v13
+
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Receiver during timeout: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v16
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    instance-of v3, v13, Lcom/android/server/am/BroadcastFilter;
+
+    if-eqz v3, :cond_169
+
+    move-object v12, v13
+
+    check-cast v12, Lcom/android/server/am/BroadcastFilter;
+
+    iget-object v3, v12, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v3, v3, Lcom/android/server/am/ReceiverList;->pid:I
+
+    if-eqz v3, :cond_10d
+
+    iget-object v3, v12, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v3, v3, Lcom/android/server/am/ReceiverList;->pid:I
+
+    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v3, v4, :cond_10d
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v4
+
+    :try_start_fc
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    iget-object v5, v12, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v5, v5, Lcom/android/server/am/ReceiverList;->pid:I
+
+    invoke-virtual {v3, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    move-object v0, v3
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    move-object v11, v0
+
+    monitor-exit v4
+    :try_end_10d
+    .catchall {:try_start_fc .. :try_end_10d} :catchall_166
+
+    :cond_10d
+    :goto_10d
+    if-eqz v11, :cond_12a
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Broadcast of "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, v16
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v4}, Landroid/content/Intent;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    :cond_12a
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    move-object/from16 v0, v16
+
+    if-ne v3, v0, :cond_137
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    :cond_137
+    move-object/from16 v0, v16
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    move-object/from16 v0, v16
+
+    iget v5, v0, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    move-object/from16 v0, v16
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    move-object/from16 v0, v16
+
+    iget-object v7, v0, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    move-object/from16 v0, v16
+
+    iget-boolean v8, v0, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    const/4 v9, 0x1
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    if-eqz v10, :cond_11
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    new-instance v4, Lcom/android/server/am/ActivityManagerService$AppNotResponding;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v4, v0, v11, v10}, Lcom/android/server/am/ActivityManagerService$AppNotResponding;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
+
+    invoke-virtual {v3, v4}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
+
+    goto/16 :goto_11
+
+    :catchall_166
+    move-exception v3
+
+    :try_start_167
+    monitor-exit v4
+    :try_end_168
+    .catchall {:try_start_167 .. :try_end_168} :catchall_166
+
+    throw v3
+
+    :cond_169
+    move-object/from16 v0, v16
+
+    iget-object v11, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    goto :goto_10d
+.end method
+
+.method private static buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+    .registers 6
+
+    if-ne p2, p3, :cond_19
+
+    if-nez p1, :cond_5
+
+    :goto_4
+    return-object p0
+
+    :cond_5
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, "  "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object p0
+
+    goto :goto_4
+
+    :cond_19
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v0, p0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, "+"
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    sub-int v1, p2, p3
+
+    invoke-static {v1}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object p0
+
+    goto :goto_4
+.end method
+
+.method private final bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+    .registers 9
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    iget v3, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    if-nez v3, :cond_31
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_31
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v3}, Ljava/util/HashSet;->size()I
+
+    move-result v3
+
+    if-nez v3, :cond_2a
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v4, 0xc
+
+    invoke-virtual {v3, v4}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v0
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v3, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const-wide/16 v4, 0x4e20
+
+    add-long/2addr v4, v1
+
+    invoke-virtual {v3, v0, v4, v5}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z
+
+    :cond_2a
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v3, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    :cond_31
+    iget v3, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    add-int/lit8 v3, v3, 0x1
+
+    iput v3, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    iput-wide v1, p1, Lcom/android/server/am/ServiceRecord;->executingStart:J
+
+    return-void
+.end method
+
+.method private final canGcNowLocked()Z
+    .registers 2
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-nez v0, :cond_24
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-nez v0, :cond_24
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z
+
+    if-nez v0, :cond_22
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v0, :cond_24
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->idle:Z
+
+    if-eqz v0, :cond_24
+
+    :cond_22
+    const/4 v0, 0x1
+
+    :goto_23
+    return v0
+
+    :cond_24
+    const/4 v0, 0x0
+
+    goto :goto_23
+.end method
+
+.method private final cancelBroadcastTimeoutLocked()V
+    .registers 3
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastTimeoutMessage:Z
+
+    if-eqz v0, :cond_e
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v1, 0x8
+
+    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeMessages(I)V
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastTimeoutMessage:Z
+
+    :cond_e
+    return-void
+.end method
+
+.method private final checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
+    .registers 16
+
+    const/4 v8, 0x0
+
+    if-eqz p2, :cond_1b
+
+    iget v2, p2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    :goto_5
+    if-eqz p2, :cond_20
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    :goto_b
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;
+
+    iget-object v0, p1, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-boolean v5, p1, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    move-object v0, p0
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v0
+
+    if-nez v0, :cond_25
+
+    :cond_1a
+    :goto_1a
+    return-object v8
+
+    :cond_1b
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    goto :goto_5
+
+    :cond_20
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    goto :goto_b
+
+    :cond_25
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;
+
+    iget-object v0, p1, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-boolean v5, p1, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    move-object v0, p0
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v0
+
+    if-eqz v0, :cond_1a
+
+    iget-object v11, p1, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;
+
+    if-eqz v11, :cond_62
+
+    array-length v6, v11
+
+    :cond_39
+    if-lez v6, :cond_62
+
+    add-int/lit8 v6, v6, -0x1
+
+    aget-object v10, v11, v6
+
+    invoke-virtual {v10}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;
+
+    move-result-object v1
+
+    iget-object v0, p1, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-boolean v5, p1, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    move-object v0, p0
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v0
+
+    if-eqz v0, :cond_1a
+
+    invoke-virtual {v10}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;
+
+    move-result-object v1
+
+    iget-object v0, p1, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-boolean v5, p1, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    move-object v0, p0
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v0
+
+    if-nez v0, :cond_39
+
+    goto :goto_1a
+
+    :cond_62
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v0, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Ljava/util/HashMap;
+
+    if-eqz v9, :cond_93
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v7
+
+    :cond_74
+    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_93
+
+    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Ljava/util/Map$Entry;
+
+    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Landroid/net/Uri;
+
+    invoke-virtual {v0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_74
+
+    goto :goto_1a
+
+    :cond_93
+    iget-boolean v0, p1, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    if-nez v0, :cond_e4
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "Permission Denial: opening provider "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, " from "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    if-eqz p2, :cond_e1
+
+    :goto_b0
+    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, " (pid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", uid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ") that is not exported from uid "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    :goto_da
+    const-string v0, "ActivityManager"
+
+    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_1a
+
+    :cond_e1
+    const-string p2, "(null)"
+
+    goto :goto_b0
+
+    :cond_e4
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "Permission Denial: opening provider "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, " from "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    if-eqz p2, :cond_132
+
+    :goto_fd
+    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, " (pid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", uid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ") requires "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, " or "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    goto :goto_da
+
+    :cond_132
+    const-string p2, "(null)"
+
+    goto :goto_fd
+.end method
+
+.method private final checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Landroid/net/Uri;II)Z
+    .registers 17
+
+    and-int/lit8 v10, p5, 0x1
+
+    if-nez v10, :cond_79
+
+    const/4 v8, 0x1
+
+    :goto_5
+    and-int/lit8 v10, p5, 0x2
+
+    if-nez v10, :cond_7b
+
+    const/4 v9, 0x1
+
+    :goto_a
+    :try_start_a
+    iget-boolean v10, p2, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    if-nez v10, :cond_7d
+
+    iget-object v10, p2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    if-eq v10, p4, :cond_7d
+
+    const/4 v7, 0x1
+
+    :goto_15
+    if-nez v8, :cond_26
+
+    if-nez v7, :cond_1d
+
+    iget-object v10, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;
+
+    if-eqz v10, :cond_25
+
+    :cond_1d
+    iget-object v10, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;
+
+    invoke-interface {p1, v10, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
+
+    move-result v10
+
+    if-nez v10, :cond_26
+
+    :cond_25
+    const/4 v8, 0x1
+
+    :cond_26
+    if-nez v9, :cond_37
+
+    if-nez v7, :cond_2e
+
+    iget-object v10, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;
+
+    if-eqz v10, :cond_36
+
+    :cond_2e
+    iget-object v10, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;
+
+    invoke-interface {p1, v10, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
+
+    move-result v10
+
+    if-nez v10, :cond_37
+
+    :cond_36
+    const/4 v9, 0x1
+
+    :cond_37
+    iget-object v5, p2, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;
+
+    if-eqz v5, :cond_82
+
+    if-eqz v8, :cond_3f
+
+    if-nez v9, :cond_82
+
+    :cond_3f
+    invoke-virtual {p3}, Landroid/net/Uri;->getPath()Ljava/lang/String;
+
+    move-result-object v2
+
+    array-length v1, v5
+
+    :cond_44
+    :goto_44
+    if-lez v1, :cond_82
+
+    if-eqz v8, :cond_4a
+
+    if-nez v9, :cond_82
+
+    :cond_4a
+    add-int/lit8 v1, v1, -0x1
+
+    aget-object v3, v5, v1
+
+    if-nez v8, :cond_63
+
+    invoke-virtual {v3}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;
+
+    move-result-object v4
+
+    if-eqz v4, :cond_63
+
+    invoke-virtual {v3, v2}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z
+
+    move-result v10
+
+    if-eqz v10, :cond_63
+
+    invoke-interface {p1, v4, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
+
+    move-result v10
+
+    if-nez v10, :cond_63
+
+    const/4 v8, 0x1
+
+    :cond_63
+    if-nez v9, :cond_44
+
+    invoke-virtual {v3}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;
+
+    move-result-object v6
+
+    if-eqz v6, :cond_44
+
+    invoke-virtual {v3, v2}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z
+
+    move-result v10
+
+    if-eqz v10, :cond_44
+
+    invoke-interface {p1, v6, p4}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
+    :try_end_74
+    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_74} :catch_7f
+
+    move-result v10
+
+    if-nez v10, :cond_44
+
+    const/4 v9, 0x1
+
+    goto :goto_44
+
+    :cond_79
+    const/4 v8, 0x0
+
+    goto :goto_5
+
+    :cond_7b
+    const/4 v9, 0x0
+
+    goto :goto_a
+
+    :cond_7d
+    const/4 v7, 0x0
+
+    goto :goto_15
+
+    :catch_7f
+    move-exception v0
+
+    const/4 v10, 0x0
+
+    :goto_81
+    return v10
+
+    :cond_82
+    if-eqz v8, :cond_88
+
+    if-eqz v9, :cond_88
+
+    const/4 v10, 0x1
+
+    goto :goto_81
+
+    :cond_88
+    const/4 v10, 0x0
+
+    goto :goto_81
+.end method
+
+.method private final checkUriPermissionLocked(Landroid/net/Uri;II)Z
+    .registers 9
+
+    const/4 v2, 0x1
+
+    const/4 v3, 0x0
+
+    if-nez p2, :cond_5
+
+    :cond_4
+    :goto_4
+    return v2
+
+    :cond_5
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/util/HashMap;
+
+    if-nez v1, :cond_11
+
+    move v2, v3
+
+    goto :goto_4
+
+    :cond_11
+    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/UriPermission;
+
+    if-nez v0, :cond_1b
+
+    move v2, v3
+
+    goto :goto_4
+
+    :cond_1b
+    iget v4, v0, Lcom/android/server/am/UriPermission;->modeFlags:I
+
+    and-int/2addr v4, p3
+
+    if-eq v4, p3, :cond_4
+
+    move v2, v3
+
+    goto :goto_4
+.end method
+
+.method private final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+    .registers 19
+
+    if-ltz p4, :cond_9
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    move/from16 v0, p4
+
+    invoke-virtual {v9, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    :cond_9
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;
+
+    if-eqz v9, :cond_1a
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;
+
+    invoke-virtual {v9}, Landroid/app/Dialog;->dismiss()V
+
+    const/4 v9, 0x0
+
+    iput-object v9, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;
+
+    :cond_1a
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;
+
+    if-eqz v9, :cond_26
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;
+
+    invoke-virtual {v9}, Landroid/app/Dialog;->dismiss()V
+
+    const/4 v9, 0x0
+
+    iput-object v9, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;
+
+    :cond_26
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;
+
+    if-eqz v9, :cond_32
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;
+
+    invoke-virtual {v9}, Landroid/app/Dialog;->dismiss()V
+
+    const/4 v9, 0x0
+
+    iput-object v9, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;
+
+    :cond_32
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->resetPackageList()V
+
+    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V
+
+    const/4 v9, 0x0
+
+    iput-object v9, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    const/4 v9, 0x0
+
+    iput-object v9, p1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z
+
+    move/from16 v0, p3
+
+    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V
+
+    const/4 v8, 0x0
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->isEmpty()Z
+
+    move-result v9
+
+    if-nez v9, :cond_a8
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v9
+
+    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v6
+
+    :cond_6e
+    :goto_6e
+    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_a3
+
+    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ContentProviderRecord;
+
+    const/4 v9, 0x0
+
+    iput-object v9, v3, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;
+
+    const/4 v9, 0x0
+
+    iput-object v9, v3, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v4, 0x0
+
+    iget-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->bad:Z
+
+    if-nez v9, :cond_a1
+
+    if-eqz p3, :cond_a1
+
+    :goto_87
+    if-ge v4, v1, :cond_92
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    if-ne v9, v3, :cond_9e
+
+    const/4 v8, 0x1
+
+    :cond_92
+    :goto_92
+    if-lt v4, v1, :cond_6e
+
+    invoke-direct {p0, p1, v3}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)V
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    goto :goto_6e
+
+    :cond_9e
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_87
+
+    :cond_a1
+    move v4, v1
+
+    goto :goto_92
+
+    :cond_a3
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->clear()V
+
+    :cond_a8
+    const/4 v9, 0x0
+
+    invoke-virtual {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
+
+    move-result v9
+
+    if-eqz v9, :cond_b0
+
+    const/4 v8, 0x1
+
+    :cond_b0
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->isEmpty()Z
+
+    move-result v9
+
+    if-nez v9, :cond_d9
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->keySet()Ljava/util/Set;
+
+    move-result-object v9
+
+    invoke-interface {v9}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v5
+
+    :goto_c2
+    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_d4
+
+    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ContentProviderRecord;
+
+    iget-object v9, v3, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    invoke-virtual {v9, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    goto :goto_c2
+
+    :cond_d4
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->clear()V
+
+    :cond_d9
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->receivers:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_ff
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->receivers:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v7
+
+    :goto_ea
+    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_fa
+
+    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ReceiverList;
+
+    invoke-virtual {p0, v9}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
+
+    goto :goto_ea
+
+    :cond_fa
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->receivers:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V
+
+    :cond_ff
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    if-eqz v9, :cond_11e
+
+    iget v9, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v10, v10, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-ne v9, v10, :cond_11e
+
+    :try_start_10d
+    const-string v9, "backup"
+
+    invoke-static {v9}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v9
+
+    invoke-static {v9}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;
+
+    move-result-object v2
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v9, v9, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-interface {v2, v9}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
+    :try_end_11e
+    .catch Landroid/os/RemoteException; {:try_start_10d .. :try_end_11e} :catch_1af
+
+    :cond_11e
+    :goto_11e
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v10, 0x20
+
+    iget v11, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget-object v12, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    const/4 v13, 0x0
+
+    invoke-virtual {v9, v10, v11, v12, v13}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Landroid/os/Message;->sendToTarget()V
+
+    if-eqz p2, :cond_133
+
+    :cond_132
+    :goto_132
+    return-void
+
+    :cond_133
+    iget-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v9, :cond_178
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v11, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v9, v10, v11}, Lcom/android/server/ProcessMap;->remove(Ljava/lang/String;I)V
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v9, p1, :cond_150
+
+    const/4 v9, 0x0
+
+    iput-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v10, 0x19
+
+    invoke-virtual {v9, v10}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    :cond_150
+    :goto_150
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-ne p1, v9, :cond_15c
+
+    const/4 v9, 0x0
+
+    iput-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    :cond_15c
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-ne p1, v9, :cond_163
+
+    const/4 v9, 0x0
+
+    iput-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+    :cond_163
+    if-eqz v8, :cond_18b
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v11, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v9, v10, v11, p1}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    const-string v9, "restart"
+
+    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-direct {p0, p1, v9, v10}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+
+    goto :goto_132
+
+    :cond_178
+    iget-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    if-nez v9, :cond_150
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I
+
+    move-result v9
+
+    if-gez v9, :cond_150
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    const/4 v8, 0x1
+
+    goto :goto_150
+
+    :cond_18b
+    iget v9, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v9, :cond_132
+
+    iget v9, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v10, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v9, v10, :cond_132
+
+    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v10
+
+    :try_start_198
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    iget v11, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v9, v11}, Landroid/util/SparseArray;->remove(I)V
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v11, 0x14
+
+    invoke-virtual {v9, v11, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V
+
+    monitor-exit v10
+    :try_end_1a7
+    .catchall {:try_start_198 .. :try_end_1a7} :catchall_1ac
+
+    const/4 v9, 0x0
+
+    invoke-virtual {p1, v9}, Lcom/android/server/am/ProcessRecord;->setPid(I)V
+
+    goto :goto_132
+
+    :catchall_1ac
+    move-exception v9
+
+    :try_start_1ad
+    monitor-exit v10
+    :try_end_1ae
+    .catchall {:try_start_1ad .. :try_end_1ae} :catchall_1ac
+
+    throw v9
+
+    :catch_1af
+    move-exception v9
+
+    goto/16 :goto_11e
+.end method
+
+.method private cleanUpRemovedTaskLocked(Lcom/android/server/am/ActivityRecord;Z)V
+    .registers 19
+
+    move-object/from16 v0, p1
+
+    iget-object v14, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    new-instance v5, Landroid/content/Intent;
+
+    iget-object v1, v14, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    if-eqz v1, :cond_2e
+
+    iget-object v1, v14, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    :goto_c
+    invoke-direct {v5, v1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v8
+
+    if-nez v8, :cond_31
+
+    const-string v1, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Now component for base intent of task: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_2d
+    return-void
+
+    :cond_2e
+    iget-object v1, v14, Lcom/android/server/am/TaskRecord;->affinityIntent:Landroid/content/Intent;
+
+    goto :goto_c
+
+    :cond_31
+    new-instance v13, Ljava/util/ArrayList;
+
+    invoke-direct {v13}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v10
+
+    :cond_42
+    :goto_42
+    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_5e
+
+    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ServiceRecord;
+
+    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_42
+
+    invoke-virtual {v13, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_42
+
+    :cond_5e
+    const/4 v9, 0x0
+
+    :goto_5f
+    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-ge v9, v1, :cond_c0
+
+    invoke-virtual {v13, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ServiceRecord;
+
+    iget-boolean v1, v2, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-eqz v1, :cond_9c
+
+    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    iget v1, v1, Landroid/content/pm/ServiceInfo;->flags:I
+
+    and-int/lit8 v1, v1, 0x1
+
+    if-eqz v1, :cond_9f
+
+    const-string v1, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Stopping service "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v2, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": remove task"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v1, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v2}, Lcom/android/server/am/ActivityManagerService;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;)V
+
+    :cond_9c
+    :goto_9c
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_5f
+
+    :cond_9f
+    iget-object v15, v2, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    new-instance v1, Lcom/android/server/am/ServiceRecord$StartItem;
+
+    const/4 v3, 0x1
+
+    invoke-virtual {v2}, Lcom/android/server/am/ServiceRecord;->makeNextStartId()I
+
+    move-result v4
+
+    const/4 v6, -0x1
+
+    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ServiceRecord$StartItem;-><init>(Lcom/android/server/am/ServiceRecord;ZILandroid/content/Intent;I)V
+
+    invoke-virtual {v15, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v1, :cond_9c
+
+    iget-object v1, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v1, :cond_9c
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v2, v1}, Lcom/android/server/am/ActivityManagerService;->sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto :goto_9c
+
+    :cond_c0
+    if-eqz p2, :cond_2d
+
+    new-instance v12, Ljava/util/ArrayList;
+
+    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v1}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v1
+
+    invoke-virtual {v8}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v1, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Landroid/util/SparseArray;
+
+    if-eqz v7, :cond_ec
+
+    const/4 v9, 0x0
+
+    :goto_dc
+    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I
+
+    move-result v1
+
+    if-ge v9, v1, :cond_ec
+
+    invoke-virtual {v7, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    invoke-virtual {v12, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_dc
+
+    :cond_ec
+    const/4 v9, 0x0
+
+    :goto_ed
+    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-ge v9, v1, :cond_2d
+
+    invoke-virtual {v12, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Lcom/android/server/am/ProcessRecord;
+
+    iget v1, v11, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    const/4 v3, 0x1
+
+    if-ne v1, v3, :cond_14c
+
+    const-string v1, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Killing "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v11}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": remove task"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v1, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v1, 0x7547
+
+    const/4 v3, 0x4
+
+    new-array v3, v3, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    iget v6, v11, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    aput-object v6, v3, v4
+
+    const/4 v4, 0x1
+
+    iget-object v6, v11, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v6, v3, v4
+
+    const/4 v4, 0x2
+
+    iget v6, v11, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    aput-object v6, v3, v4
+
+    const/4 v4, 0x3
+
+    const-string v6, "remove task"
+
+    aput-object v6, v3, v4
+
+    invoke-static {v1, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget v1, v11, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v1}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    :goto_149
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_ed
+
+    :cond_14c
+    const-string v1, "remove task"
+
+    iput-object v1, v11, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;
+
+    goto :goto_149
+.end method
+
+.method private clearProfilerLocked()V
+    .registers 4
+
+    const/4 v2, 0x0
+
+    const/4 v1, 0x0
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    if-eqz v0, :cond_b
+
+    :try_start_6
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_b
+    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_b} :catch_16
+
+    :cond_b
+    :goto_b
+    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;
+
+    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
+
+    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z
+
+    return-void
+
+    :catch_16
+    move-exception v0
+
+    goto :goto_b
+.end method
+
+.method private final computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZZ)I
+    .registers 36
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    move-object/from16 v0, p1
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I
+
+    if-ne v2, v5, :cond_23
+
+    if-nez p4, :cond_1e
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    if-eqz v2, :cond_1e
+
+    move/from16 v0, p2
+
+    move-object/from16 v1, p1
+
+    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    move/from16 v0, p2
+
+    move-object/from16 v1, p1
+
+    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    :cond_1e
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    :goto_22
+    return v2
+
+    :cond_23
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v2, :cond_3d
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    const/16 v2, 0xf
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    goto :goto_22
+
+    :cond_3d
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->empty:Z
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v9
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    if-gtz v2, :cond_c5
+
+    const-string v2, "fixed"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z
+
+    move-object/from16 v0, p1
+
+    move-object/from16 v1, p3
+
+    if-ne v0, v1, :cond_a2
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z
+
+    :cond_99
+    :goto_99
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    goto :goto_22
+
+    :cond_a2
+    if-lez v9, :cond_99
+
+    const/16 v18, 0x0
+
+    :goto_a6
+    move/from16 v0, v18
+
+    if-ge v0, v9, :cond_99
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    move/from16 v0, v18
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v25
+
+    check-cast v25, Lcom/android/server/am/ActivityRecord;
+
+    move-object/from16 v0, v25
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityRecord;->visible:Z
+
+    if-eqz v2, :cond_c2
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z
+
+    goto :goto_99
+
+    :cond_c2
+    add-int/lit8 v18, v18, 0x1
+
+    goto :goto_a6
+
+    :cond_c5
+    move-object/from16 v0, p1
+
+    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    move/from16 v16, v0
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z
+
+    move-object/from16 v0, p1
+
+    move-object/from16 v1, p3
+
+    if-ne v0, v1, :cond_252
+
+    const/4 v10, 0x0
+
+    const/16 v27, 0x0
+
+    const-string v2, "top-activity"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    :goto_ee
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    if-nez v2, :cond_124
+
+    if-lez v9, :cond_124
+
+    const/16 v18, 0x0
+
+    :goto_f8
+    move/from16 v0, v18
+
+    if-ge v0, v9, :cond_124
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    move/from16 v0, v18
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v25
+
+    check-cast v25, Lcom/android/server/am/ActivityRecord;
+
+    move-object/from16 v0, v25
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityRecord;->visible:Z
+
+    if-eqz v2, :cond_2c2
+
+    const/4 v2, 0x1
+
+    if-le v10, v2, :cond_118
+
+    const/4 v10, 0x1
+
+    const-string v2, "visible"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_118
+    const/16 v27, 0x0
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    :cond_124
+    const/4 v2, 0x2
+
+    if-le v10, v2, :cond_13b
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    if-eqz v2, :cond_2f2
+
+    const/4 v10, 0x2
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "foreground-service"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    const/16 v27, 0x0
+
+    :cond_13b
+    :goto_13b
+    const/4 v2, 0x3
+
+    if-le v10, v2, :cond_154
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v0, v2, :cond_154
+
+    const/4 v10, 0x3
+
+    const/16 v27, 0x1
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "heavy"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_154
+    const/4 v2, 0x6
+
+    if-le v10, v2, :cond_16d
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v0, v2, :cond_16d
+
+    const/4 v10, 0x6
+
+    const/16 v27, 0x1
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "home"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_16d
+    const/4 v2, 0x7
+
+    if-le v10, v2, :cond_190
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v0, v2, :cond_190
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_190
+
+    const/4 v10, 0x7
+
+    const/16 v27, 0x1
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "previous"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_190
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I
+
+    move-object/from16 v0, p1
+
+    iput v10, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    if-eqz v2, :cond_1bb
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v0, v2, :cond_1bb
+
+    const/4 v2, 0x4
+
+    if-le v10, v2, :cond_1bb
+
+    const/4 v10, 0x4
+
+    const-string v2, "backup"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    :cond_1bb
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->size()I
+
+    move-result v2
+
+    if-eqz v2, :cond_463
+
+    if-gtz v10, :cond_1cc
+
+    const/4 v2, 0x1
+
+    move/from16 v0, v27
+
+    if-ne v0, v2, :cond_463
+
+    :cond_1cc
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v23
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v20
+
+    :cond_1d8
+    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_452
+
+    if-lez v10, :cond_452
+
+    invoke-interface/range {v20 .. v20}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v26
+
+    check-cast v26, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v26
+
+    iget-boolean v2, v0, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-eqz v2, :cond_208
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z
+
+    if-eqz v2, :cond_310
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-eq v0, v2, :cond_310
+
+    const/4 v2, 0x5
+
+    if-le v10, v2, :cond_203
+
+    const-string v2, "started-bg-ui-services"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_203
+    :goto_203
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    :cond_208
+    move-object/from16 v0, v26
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_1d8
+
+    if-gtz v10, :cond_219
+
+    const/4 v2, 0x1
+
+    move/from16 v0, v27
+
+    if-ne v0, v2, :cond_1d8
+
+    :cond_219
+    move-object/from16 v0, v26
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v22
+
+    :cond_225
+    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1d8
+
+    if-lez v10, :cond_1d8
+
+    invoke-interface/range {v22 .. v22}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Ljava/util/ArrayList;
+
+    const/16 v17, 0x0
+
+    :goto_235
+    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    move/from16 v0, v17
+
+    if-ge v0, v2, :cond_225
+
+    if-lez v10, :cond_225
+
+    move/from16 v0, v17
+
+    invoke-virtual {v13, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v15
+
+    check-cast v15, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v2, v15, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v2, v0, :cond_337
+
+    :cond_24f
+    :goto_24f
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_235
+
+    :cond_252
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    if-eqz v2, :cond_263
+
+    const/4 v10, 0x0
+
+    const/16 v27, 0x0
+
+    const-string v2, "instrumentation"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto/16 :goto_ee
+
+    :cond_263
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    if-nez v2, :cond_279
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v2, :cond_284
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v2, v0, :cond_284
+
+    :cond_279
+    const/4 v10, 0x0
+
+    const/16 v27, 0x0
+
+    const-string v2, "broadcast"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto/16 :goto_ee
+
+    :cond_284
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_299
+
+    const/4 v10, 0x0
+
+    const/16 v27, 0x0
+
+    const-string v2, "exec-service"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto/16 :goto_ee
+
+    :cond_299
+    if-lez v9, :cond_2ac
+
+    move/from16 v10, p2
+
+    const/16 v27, 0x1
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "bg-activities"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto/16 :goto_ee
+
+    :cond_2ac
+    move/from16 v10, p2
+
+    const/16 v27, 0x1
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->empty:Z
+
+    const-string v2, "bg-empty"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto/16 :goto_ee
+
+    :cond_2c2
+    move-object/from16 v0, v25
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v2, v5, :cond_2da
+
+    move-object/from16 v0, v25
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSED:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v2, v5, :cond_2da
+
+    move-object/from16 v0, v25
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->STOPPING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-ne v2, v5, :cond_2ee
+
+    :cond_2da
+    const/4 v2, 0x2
+
+    if-le v10, v2, :cond_2e4
+
+    const/4 v10, 0x2
+
+    const-string v2, "stopping"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_2e4
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    :cond_2ee
+    add-int/lit8 v18, v18, 0x1
+
+    goto/16 :goto_f8
+
+    :cond_2f2
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+
+    if-eqz v2, :cond_13b
+
+    const/4 v10, 0x2
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "force-foreground"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    const/16 v27, 0x0
+
+    goto/16 :goto_13b
+
+    :cond_310
+    move-object/from16 v0, v26
+
+    iget-wide v5, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J
+
+    const-wide/32 v28, 0x1b7740
+
+    add-long v5, v5, v28
+
+    cmp-long v2, v23, v5
+
+    if-gez v2, :cond_32c
+
+    const/4 v2, 0x5
+
+    if-le v10, v2, :cond_32c
+
+    const/4 v10, 0x5
+
+    const-string v2, "started-services"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    :cond_32c
+    const/4 v2, 0x5
+
+    if-le v10, v2, :cond_203
+
+    const-string v2, "started-bg-services"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto/16 :goto_203
+
+    :cond_337
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v2, v2, 0x20
+
+    if-nez v2, :cond_3b9
+
+    iget-object v2, v15, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v3, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move v12, v10
+
+    move/from16 v4, p2
+
+    iget v2, v3, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    if-le v4, v2, :cond_34f
+
+    iget v2, v3, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    const/4 v5, 0x1
+
+    if-lt v2, v5, :cond_400
+
+    iget v4, v3, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    :cond_34f
+    :goto_34f
+    const/4 v6, 0x1
+
+    move-object/from16 v2, p0
+
+    move-object/from16 v5, p3
+
+    move/from16 v7, p5
+
+    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZZ)I
+
+    move-result v12
+
+    const/4 v11, 0x0
+
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v2, v2, 0x10
+
+    if-eqz v2, :cond_379
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z
+
+    if-eqz v2, :cond_403
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-eq v0, v2, :cond_403
+
+    if-le v10, v12, :cond_373
+
+    const-string v11, "bound-bg-ui-services"
+
+    :cond_373
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    move v12, v10
+
+    :cond_379
+    :goto_379
+    if-le v10, v12, :cond_38e
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z
+
+    if-eqz v2, :cond_417
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-eq v0, v2, :cond_417
+
+    const/4 v2, 0x2
+
+    if-le v12, v2, :cond_417
+
+    const-string v11, "bound-bg-ui-services"
+
+    :cond_38e
+    :goto_38e
+    if-eqz v11, :cond_3ad
+
+    move-object/from16 v0, p1
+
+    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    const/4 v2, 0x2
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I
+
+    iget-object v2, v15, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v0, p1
+
+    iput v12, v0, Lcom/android/server/am/ProcessRecord;->adjSourceOom:I
+
+    move-object/from16 v0, v26
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    :cond_3ad
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v2, v2, 0x4
+
+    if-nez v2, :cond_3b9
+
+    iget v2, v3, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    if-nez v2, :cond_3b9
+
+    const/16 v27, 0x0
+
+    :cond_3b9
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit16 v2, v2, 0x80
+
+    if-eqz v2, :cond_24f
+
+    iget-object v8, v15, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v8, :cond_24f
+
+    if-lez v10, :cond_24f
+
+    iget-boolean v2, v8, Lcom/android/server/am/ActivityRecord;->visible:Z
+
+    if-nez v2, :cond_3d5
+
+    iget-object v2, v8, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v2, v5, :cond_3d5
+
+    iget-object v2, v8, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-ne v2, v5, :cond_24f
+
+    :cond_3d5
+    const/4 v10, 0x0
+
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v2, v2, 0x4
+
+    if-nez v2, :cond_3de
+
+    const/16 v27, 0x0
+
+    :cond_3de
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "service"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    const/4 v2, 0x2
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I
+
+    move-object/from16 v0, p1
+
+    iput-object v8, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v0, p1
+
+    iput v10, v0, Lcom/android/server/am/ProcessRecord;->adjSourceOom:I
+
+    move-object/from16 v0, v26
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    goto/16 :goto_24f
+
+    :cond_400
+    const/4 v4, 0x1
+
+    goto/16 :goto_34f
+
+    :cond_403
+    move-object/from16 v0, v26
+
+    iget-wide v5, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J
+
+    const-wide/32 v28, 0x1b7740
+
+    add-long v5, v5, v28
+
+    cmp-long v2, v23, v5
+
+    if-ltz v2, :cond_379
+
+    if-le v10, v12, :cond_414
+
+    const-string v11, "bound-bg-services"
+
+    :cond_414
+    move v12, v10
+
+    goto/16 :goto_379
+
+    :cond_417
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v2, v2, 0x48
+
+    if-eqz v2, :cond_434
+
+    move v10, v12
+
+    :cond_41e
+    :goto_41e
+    iget-boolean v2, v3, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    if-nez v2, :cond_427
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    :cond_427
+    iget-boolean v2, v3, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    if-eqz v2, :cond_430
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    :cond_430
+    const-string v11, "service"
+
+    goto/16 :goto_38e
+
+    :cond_434
+    iget v2, v15, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    const/high16 v5, 0x4000
+
+    and-int/2addr v2, v5
+
+    if-eqz v2, :cond_443
+
+    const/4 v2, 0x2
+
+    if-ge v12, v2, :cond_443
+
+    const/4 v2, 0x2
+
+    if-le v10, v2, :cond_443
+
+    const/4 v10, 0x2
+
+    goto :goto_41e
+
+    :cond_443
+    const/4 v2, 0x1
+
+    if-le v12, v2, :cond_448
+
+    move v10, v12
+
+    goto :goto_41e
+
+    :cond_448
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z
+
+    const/4 v2, 0x1
+
+    if-le v10, v2, :cond_41e
+
+    const/4 v10, 0x1
+
+    goto :goto_41e
+
+    :cond_452
+    move/from16 v0, p2
+
+    if-le v10, v0, :cond_463
+
+    move/from16 v10, p2
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const-string v2, "bg-services"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :cond_463
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->size()I
+
+    move-result v2
+
+    if-eqz v2, :cond_53e
+
+    if-gtz v10, :cond_474
+
+    const/4 v2, 0x1
+
+    move/from16 v0, v27
+
+    if-ne v0, v2, :cond_53e
+
+    :cond_474
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v19
+
+    :cond_480
+    :goto_480
+    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_53e
+
+    if-gtz v10, :cond_48d
+
+    const/4 v2, 0x1
+
+    move/from16 v0, v27
+
+    if-ne v0, v2, :cond_53e
+
+    :cond_48d
+    invoke-interface/range {v19 .. v19}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v14
+
+    check-cast v14, Lcom/android/server/am/ContentProviderRecord;
+
+    iget-object v2, v14, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->size()I
+
+    move-result v2
+
+    if-eqz v2, :cond_51d
+
+    iget-object v2, v14, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v21
+
+    :cond_4a1
+    :goto_4a1
+    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_51d
+
+    if-lez v10, :cond_51d
+
+    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-eq v3, v0, :cond_4a1
+
+    move/from16 v4, p2
+
+    iget v2, v3, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    if-le v4, v2, :cond_4bf
+
+    iget v2, v3, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    if-lez v2, :cond_50f
+
+    iget v4, v3, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    :cond_4bf
+    :goto_4bf
+    const/4 v6, 0x1
+
+    move-object/from16 v2, p0
+
+    move-object/from16 v5, p3
+
+    move/from16 v7, p5
+
+    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZZ)I
+
+    move-result v12
+
+    if-le v10, v12, :cond_508
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z
+
+    if-eqz v2, :cond_511
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-eq v0, v2, :cond_511
+
+    const/4 v2, 0x2
+
+    if-le v12, v2, :cond_511
+
+    const-string v2, "bg-ui-provider"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    :goto_4e3
+    iget-boolean v2, v3, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    if-nez v2, :cond_4ec
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    :cond_4ec
+    iget-boolean v2, v3, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    if-eqz v2, :cond_4f5
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    :cond_4f5
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I
+
+    move-object/from16 v0, p1
+
+    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v0, p1
+
+    iput v12, v0, Lcom/android/server/am/ProcessRecord;->adjSourceOom:I
+
+    iget-object v2, v14, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    :cond_508
+    iget v2, v3, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    if-nez v2, :cond_4a1
+
+    const/16 v27, 0x0
+
+    goto :goto_4a1
+
+    :cond_50f
+    const/4 v4, 0x0
+
+    goto :goto_4bf
+
+    :cond_511
+    if-lez v12, :cond_51b
+
+    move v10, v12
+
+    :goto_514
+    const-string v2, "provider"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    goto :goto_4e3
+
+    :cond_51b
+    const/4 v10, 0x0
+
+    goto :goto_514
+
+    :cond_51d
+    iget v2, v14, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    if-eqz v2, :cond_480
+
+    if-lez v10, :cond_480
+
+    const/4 v10, 0x0
+
+    const/16 v27, 0x0
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    const-string v2, "provider"
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    iget-object v2, v14, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v0, p1
+
+    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    goto/16 :goto_480
+
+    :cond_53e
+    move-object/from16 v0, p1
+
+    iput v10, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    if-le v10, v2, :cond_555
+
+    move-object/from16 v0, p1
+
+    iget v10, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    const/4 v5, 0x2
+
+    if-gt v2, v5, :cond_555
+
+    const/16 v27, 0x0
+
+    :cond_555
+    sget v2, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-ge v10, v2, :cond_55e
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    :cond_55e
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z
+
+    if-eqz v2, :cond_566
+
+    if-gez v10, :cond_5c9
+
+    :cond_566
+    :goto_566
+    const/4 v2, 0x5
+
+    if-ne v10, v2, :cond_5e3
+
+    if-eqz p5, :cond_586
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    move-object/from16 v0, p0
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I
+
+    div-int/lit8 v5, v5, 0x3
+
+    if-le v2, v5, :cond_5e1
+
+    const/4 v2, 0x1
+
+    :goto_578
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    add-int/lit8 v2, v2, 0x1
+
+    move-object/from16 v0, p0
+
+    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    :cond_586
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z
+
+    if-eqz v2, :cond_58e
+
+    const/16 v10, 0x8
+
+    :cond_58e
+    :goto_58e
+    move-object/from16 v0, p1
+
+    iput v10, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    move/from16 v0, v27
+
+    move-object/from16 v1, p1
+
+    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    move/from16 v0, v16
+
+    if-eq v0, v2, :cond_5c3
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v5, 0x1f
+
+    move-object/from16 v0, p1
+
+    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move-object/from16 v0, p1
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, p1
+
+    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    move/from16 v28, v0
+
+    invoke-static/range {v28 .. v28}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;
+
+    move-result-object v28
+
+    move-object/from16 v0, v28
+
+    invoke-virtual {v2, v5, v6, v7, v0}, Landroid/os/Handler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/os/Message;->sendToTarget()V
+
+    :cond_5c3
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    goto/16 :goto_22
+
+    :cond_5c9
+    const/4 v2, 0x1
+
+    if-ge v10, v2, :cond_5ce
+
+    const/4 v10, 0x1
+
+    goto :goto_566
+
+    :cond_5ce
+    const/4 v2, 0x2
+
+    if-ge v10, v2, :cond_5d3
+
+    const/4 v10, 0x2
+
+    goto :goto_566
+
+    :cond_5d3
+    sget v2, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-ge v10, v2, :cond_5da
+
+    sget v10, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    goto :goto_566
+
+    :cond_5da
+    const/16 v2, 0xf
+
+    if-ge v10, v2, :cond_566
+
+    add-int/lit8 v10, v10, 0x1
+
+    goto :goto_566
+
+    :cond_5e1
+    const/4 v2, 0x0
+
+    goto :goto_578
+
+    :cond_5e3
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z
+
+    goto :goto_58e
+.end method
+
+.method private crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+    .registers 27
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v8
+
+    move-object/from16 v0, p2
+
+    iget-object v6, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;
+
+    move-object/from16 v0, p2
+
+    iget-object v7, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;
+
+    move-object/from16 v0, p2
+
+    iget-object v0, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;
+
+    move-object/from16 v20, v0
+
+    if-eqz v6, :cond_7a
+
+    if-eqz v7, :cond_7a
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v10, ": "
+
+    invoke-virtual {v3, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    :cond_2d
+    :goto_2d
+    new-instance v19, Lcom/android/server/am/AppErrorResult;
+
+    invoke-direct/range {v19 .. v19}, Lcom/android/server/am/AppErrorResult;-><init>()V
+
+    monitor-enter p0
+
+    :try_start_33
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+    :try_end_37
+    .catchall {:try_start_33 .. :try_end_37} :catchall_12a
+
+    if-eqz v3, :cond_8b
+
+    if-eqz p1, :cond_7e
+
+    :try_start_3b
+    move-object/from16 v0, p1
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    :goto_3f
+    if-eqz p1, :cond_80
+
+    move-object/from16 v0, p1
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    :goto_45
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    move-object/from16 v0, p2
+
+    iget-object v10, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;
+
+    invoke-interface/range {v3 .. v10}, Landroid/app/IActivityController;->appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_8b
+
+    const-string v3, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v21, "Force-killing crashed app "
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v21, " at watcher\'s request"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v3, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-static {v5}, Landroid/os/Process;->killProcess(I)V
+    :try_end_78
+    .catchall {:try_start_3b .. :try_end_78} :catchall_12a
+    .catch Landroid/os/RemoteException; {:try_start_3b .. :try_end_78} :catch_85
+
+    :try_start_78
+    monitor-exit p0
+    :try_end_79
+    .catchall {:try_start_78 .. :try_end_79} :catchall_12a
+
+    :cond_79
+    :goto_79
+    return-void
+
+    :cond_7a
+    if-eqz v6, :cond_2d
+
+    move-object v7, v6
+
+    goto :goto_2d
+
+    :cond_7e
+    const/4 v4, 0x0
+
+    goto :goto_3f
+
+    :cond_80
+    :try_start_80
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+    :try_end_83
+    .catchall {:try_start_80 .. :try_end_83} :catchall_12a
+    .catch Landroid/os/RemoteException; {:try_start_80 .. :try_end_83} :catch_85
+
+    move-result v5
+
+    goto :goto_45
+
+    :catch_85
+    move-exception v13
+
+    const/4 v3, 0x0
+
+    :try_start_87
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    :cond_8b
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v16
+
+    if-eqz p1, :cond_12d
+
+    move-object/from16 v0, p1
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    if-eqz v3, :cond_12d
+
+    const-string v3, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v21, "Error in app "
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v21, " running instrumentation "
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v21, ":"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v3, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    if-eqz v6, :cond_f1
+
+    const-string v3, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v21, "  "
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v3, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_f1
+    if-eqz v7, :cond_10d
+
+    const-string v3, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v21, "  "
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v3, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_10d
+    new-instance v14, Landroid/os/Bundle;
+
+    invoke-direct {v14}, Landroid/os/Bundle;-><init>()V
+
+    const-string v3, "shortMsg"
+
+    invoke-virtual {v14, v3, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v3, "longMsg"
+
+    invoke-virtual {v14, v3, v7}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    invoke-virtual {v0, v1, v3, v14}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
+
+    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto/16 :goto_79
+
+    :catchall_12a
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_12c
+    .catchall {:try_start_87 .. :try_end_12c} :catchall_12a
+
+    throw v3
+
+    :cond_12d
+    if-eqz p1, :cond_13b
+
+    :try_start_12f
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    move-object/from16 v2, v20
+
+    invoke-direct {v0, v1, v6, v7, v2}, Lcom/android/server/am/ActivityManagerService;->makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_141
+
+    :cond_13b
+    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto/16 :goto_79
+
+    :cond_141
+    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;
+
+    move-result-object v15
+
+    const/4 v3, 0x1
+
+    iput v3, v15, Landroid/os/Message;->what:I
+
+    new-instance v12, Ljava/util/HashMap;
+
+    invoke-direct {v12}, Ljava/util/HashMap;-><init>()V
+
+    const-string v3, "result"
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v12, v3, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    const-string v3, "app"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v12, v3, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    iput-object v12, v15, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v3, v15}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_168
+    .catchall {:try_start_12f .. :try_end_168} :catchall_12a
+
+    invoke-virtual/range {v19 .. v19}, Lcom/android/server/am/AppErrorResult;->get()I
+
+    move-result v18
+
+    const/4 v11, 0x0
+
+    monitor-enter p0
+
+    if-eqz p1, :cond_195
+
+    :try_start_170
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, p1
+
+    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move/from16 v21, v0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v22
+
+    invoke-static/range {v22 .. v23}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v22
+
+    move/from16 v0, v21
+
+    move-object/from16 v1, v22
+
+    invoke-virtual {v3, v10, v0, v1}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    :cond_195
+    const/4 v3, 0x1
+
+    move/from16 v0, v18
+
+    if-ne v0, v3, :cond_1a4
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    move-object/from16 v2, p2
+
+    invoke-virtual {v0, v1, v8, v9, v2}, Lcom/android/server/am/ActivityManagerService;->createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;
+
+    move-result-object v11
+
+    :cond_1a4
+    monitor-exit p0
+    :try_end_1a5
+    .catchall {:try_start_170 .. :try_end_1a5} :catchall_1ba
+
+    if-eqz v11, :cond_79
+
+    :try_start_1a7
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3, v11}, Landroid/content/Context;->startActivity(Landroid/content/Intent;)V
+    :try_end_1ae
+    .catch Landroid/content/ActivityNotFoundException; {:try_start_1a7 .. :try_end_1ae} :catch_1b0
+
+    goto/16 :goto_79
+
+    :catch_1b0
+    move-exception v13
+
+    const-string v3, "ActivityManager"
+
+    const-string v10, "bug report receiver dissappeared"
+
+    invoke-static {v3, v10, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_79
+
+    :catchall_1ba
+    move-exception v3
+
+    :try_start_1bb
+    monitor-exit p0
+    :try_end_1bc
+    .catchall {:try_start_1bb .. :try_end_1bc} :catchall_1ba
+
+    throw v3
+.end method
+
+.method private createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;
+    .registers 8
+
+    const/4 v0, 0x0
+
+    const/4 v2, 0x1
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;
+
+    if-nez v1, :cond_7
+
+    :cond_6
+    :goto_6
+    return-object v0
+
+    :cond_7
+    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-nez v1, :cond_f
+
+    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    if-eqz v1, :cond_6
+
+    :cond_f
+    new-instance v0, Landroid/app/ApplicationErrorReport;
+
+    invoke-direct {v0}, Landroid/app/ApplicationErrorReport;-><init>()V
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->packageName:Ljava/lang/String;
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;
+
+    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->installerPackageName:Ljava/lang/String;
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->processName:Ljava/lang/String;
+
+    iput-wide p2, v0, Landroid/app/ApplicationErrorReport;->time:J
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v1, v1, 0x1
+
+    if-eqz v1, :cond_3c
+
+    move v1, v2
+
+    :goto_31
+    iput-boolean v1, v0, Landroid/app/ApplicationErrorReport;->systemApp:Z
+
+    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-eqz v1, :cond_3e
+
+    iput v2, v0, Landroid/app/ApplicationErrorReport;->type:I
+
+    iput-object p4, v0, Landroid/app/ApplicationErrorReport;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;
+
+    goto :goto_6
+
+    :cond_3c
+    const/4 v1, 0x0
+
+    goto :goto_31
+
+    :cond_3e
+    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    if-eqz v1, :cond_6
+
+    const/4 v1, 0x2
+
+    iput v1, v0, Landroid/app/ApplicationErrorReport;->type:I
+
+    new-instance v1, Landroid/app/ApplicationErrorReport$AnrInfo;
+
+    invoke-direct {v1}, Landroid/app/ApplicationErrorReport$AnrInfo;-><init>()V
+
+    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;
+
+    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;
+
+    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->activity:Ljava/lang/String;
+
+    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;
+
+    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->cause:Ljava/lang/String;
+
+    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;
+
+    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->info:Ljava/lang/String;
+
+    goto :goto_6
+.end method
+
+.method private final deliverToRegisteredReceiverLocked(Lcom/android/server/am/BroadcastRecord;Lcom/android/server/am/BroadcastFilter;Z)V
+    .registers 16
+
+    const/4 v5, 0x1
+
+    const/4 v4, -0x1
+
+    const/4 v11, 0x0
+
+    const/4 v10, 0x0
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->requiredPermission:Ljava/lang/String;
+
+    if-eqz v0, :cond_74
+
+    iget-object v1, p2, Lcom/android/server/am/BroadcastFilter;->requiredPermission:Ljava/lang/String;
+
+    iget v2, p1, Lcom/android/server/am/BroadcastRecord;->callingPid:I
+
+    iget v3, p1, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    move-object v0, p0
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v9
+
+    if-eqz v9, :cond_74
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Permission Denial: broadcasting "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v2}, Landroid/content/Intent;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " from "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " (pid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p1, Lcom/android/server/am/BroadcastRecord;->callingPid:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p1, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ")"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " requires "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p2, Lcom/android/server/am/BroadcastFilter;->requiredPermission:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " due to registered receiver "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v10, 0x1
+
+    :cond_74
+    iget-object v0, p1, Lcom/android/server/am/BroadcastRecord;->requiredPermission:Ljava/lang/String;
+
+    if-eqz v0, :cond_102
+
+    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->requiredPermission:Ljava/lang/String;
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v2, v0, Lcom/android/server/am/ReceiverList;->pid:I
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v3, v0, Lcom/android/server/am/ReceiverList;->uid:I
+
+    move-object v0, p0
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v9
+
+    if-eqz v9, :cond_102
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Permission Denial: receiving "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v2}, Landroid/content/Intent;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " to "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v2, v2, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " (pid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v2, v2, Lcom/android/server/am/ReceiverList;->pid:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget v2, v2, Lcom/android/server/am/ReceiverList;->uid:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ")"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " requires "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->requiredPermission:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " due to sender "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " (uid "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p1, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ")"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v10, 0x1
+
+    :cond_102
+    if-nez v10, :cond_14f
+
+    if-eqz p3, :cond_12e
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;
+
+    invoke-interface {v0}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    iput-object v0, p1, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iput-object p2, p1, Lcom/android/server/am/BroadcastRecord;->curFilter:Lcom/android/server/am/BroadcastFilter;
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iput-object p1, v0, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    const/4 v0, 0x2
+
+    iput v0, p1, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v0, :cond_12e
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v0, p1, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iput-object p1, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_12e
+    :try_start_12e
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v1, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v1, v1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;
+
+    new-instance v2, Landroid/content/Intent;
+
+    iget-object v3, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-direct {v2, v3}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    iget v3, p1, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    iget-object v4, p1, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    iget-object v5, p1, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    iget-boolean v6, p1, Lcom/android/server/am/BroadcastRecord;->ordered:Z
+
+    iget-boolean v7, p1, Lcom/android/server/am/BroadcastRecord;->initialSticky:Z
+
+    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->performReceiveLocked(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZ)V
+
+    if-eqz p3, :cond_14f
+
+    const/4 v0, 0x3
+
+    iput v0, p1, Lcom/android/server/am/BroadcastRecord;->state:I
+    :try_end_14f
+    .catch Landroid/os/RemoteException; {:try_start_12e .. :try_end_14f} :catch_150
+
+    :cond_14f
+    :goto_14f
+    return-void
+
+    :catch_150
+    move-exception v8
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Failure sending broadcast "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    if-eqz p3, :cond_14f
+
+    iput-object v11, p1, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iput-object v11, p1, Lcom/android/server/am/BroadcastRecord;->curFilter:Lcom/android/server/am/BroadcastFilter;
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iput-object v11, v0, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v0, :cond_14f
+
+    iget-object v0, p2, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iget-object v0, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v11, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    goto :goto_14f
+.end method
+
+.method private dispatchForegroundActivitiesChanged(IIZ)V
+    .registers 7
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I
+
+    move-result v0
+
+    :cond_6
+    :goto_6
+    if-lez v0, :cond_1a
+
+    add-int/lit8 v0, v0, -0x1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/app/IProcessObserver;
+
+    if-eqz v1, :cond_6
+
+    :try_start_14
+    invoke-interface {v1, p1, p2, p3}, Landroid/app/IProcessObserver;->onForegroundActivitiesChanged(IIZ)V
+    :try_end_17
+    .catch Landroid/os/RemoteException; {:try_start_14 .. :try_end_17} :catch_18
+
+    goto :goto_6
+
+    :catch_18
+    move-exception v2
+
+    goto :goto_6
+
+    :cond_1a
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V
+
+    return-void
+.end method
+
+.method private dispatchProcessDied(II)V
+    .registers 6
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I
+
+    move-result v0
+
+    :cond_6
+    :goto_6
+    if-lez v0, :cond_1a
+
+    add-int/lit8 v0, v0, -0x1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/app/IProcessObserver;
+
+    if-eqz v1, :cond_6
+
+    :try_start_14
+    invoke-interface {v1, p1, p2}, Landroid/app/IProcessObserver;->onProcessDied(II)V
+    :try_end_17
+    .catch Landroid/os/RemoteException; {:try_start_14 .. :try_end_17} :catch_18
+
+    goto :goto_6
+
+    :catch_18
+    move-exception v2
+
+    goto :goto_6
+
+    :cond_1a
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V
+
+    return-void
+.end method
+
+.method private dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V
+    .registers 13
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "  "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    monitor-enter p0
+
+    :try_start_14
+    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, "ACTIVITY "
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, " "
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-static {p4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v3
+
+    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, " pid="
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_71
+
+    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v3, v3, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(I)V
+
+    :goto_41
+    if-eqz p6, :cond_46
+
+    invoke-virtual {p4, p3, v1}, Lcom/android/server/am/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    :cond_46
+    monitor-exit p0
+    :try_end_47
+    .catchall {:try_start_14 .. :try_end_47} :catchall_77
+
+    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_70
+
+    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v3, :cond_70
+
+    invoke-virtual {p3}, Ljava/io/PrintWriter;->flush()V
+
+    :try_start_54
+    new-instance v2, Lcom/android/server/am/TransferPipe;
+
+    invoke-direct {v2}, Lcom/android/server/am/TransferPipe;-><init>()V
+    :try_end_59
+    .catch Ljava/io/IOException; {:try_start_54 .. :try_end_59} :catch_7f
+    .catch Landroid/os/RemoteException; {:try_start_54 .. :try_end_59} :catch_9b
+
+    :try_start_59
+    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-virtual {v2}, Lcom/android/server/am/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;
+
+    move-result-object v4
+
+    iget-object v5, p4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    invoke-interface {v3, v4, v5, v1, p5}, Landroid/app/IApplicationThread;->dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V
+
+    invoke-virtual {v2, p2}, Lcom/android/server/am/TransferPipe;->go(Ljava/io/FileDescriptor;)V
+    :try_end_6d
+    .catchall {:try_start_59 .. :try_end_6d} :catchall_7a
+
+    :try_start_6d
+    invoke-virtual {v2}, Lcom/android/server/am/TransferPipe;->kill()V
+    :try_end_70
+    .catch Ljava/io/IOException; {:try_start_6d .. :try_end_70} :catch_7f
+    .catch Landroid/os/RemoteException; {:try_start_6d .. :try_end_70} :catch_9b
+
+    :cond_70
+    :goto_70
+    return-void
+
+    :cond_71
+    :try_start_71
+    const-string v3, "(not running)"
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_41
+
+    :catchall_77
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_79
+    .catchall {:try_start_71 .. :try_end_79} :catchall_77
+
+    throw v3
+
+    :catchall_7a
+    move-exception v3
+
+    :try_start_7b
+    invoke-virtual {v2}, Lcom/android/server/am/TransferPipe;->kill()V
+
+    throw v3
+    :try_end_7f
+    .catch Ljava/io/IOException; {:try_start_7b .. :try_end_7f} :catch_7f
+    .catch Landroid/os/RemoteException; {:try_start_7b .. :try_end_7f} :catch_9b
+
+    :catch_7f
+    move-exception v0
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "Failure while dumping the activity: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_70
+
+    :catch_9b
+    move-exception v0
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "Got a RemoteException while dumping the activity"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_70
+.end method
+
+.method private static final dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+    .registers 22
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "      "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v10, 0x0
+
+    new-array v1, v10, [Ljava/lang/String;
+
+    invoke-interface {p2}, Ljava/util/List;->size()I
+
+    move-result v10
+
+    add-int/lit8 v4, v10, -0x1
+
+    :goto_20
+    if-ltz v4, :cond_146
+
+    invoke-interface {p2, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v8
+
+    check-cast v8, Lcom/android/server/am/ActivityRecord;
+
+    if-eqz p8, :cond_37
+
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v10
+
+    if-nez v10, :cond_37
+
+    :cond_34
+    :goto_34
+    add-int/lit8 v4, v4, -0x1
+
+    goto :goto_20
+
+    :cond_37
+    if-nez p6, :cond_cf
+
+    if-nez p5, :cond_41
+
+    invoke-virtual {v8}, Lcom/android/server/am/ActivityRecord;->isInHistory()Z
+
+    move-result v10
+
+    if-nez v10, :cond_cf
+
+    :cond_41
+    const/4 v3, 0x1
+
+    :goto_42
+    if-eqz v7, :cond_4a
+
+    const-string v10, " "
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/4 v7, 0x0
+
+    :cond_4a
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v6, v10, :cond_79
+
+    iget-object v6, v8, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    if-eqz v3, :cond_d2
+
+    const-string v10, "* "
+
+    :goto_59
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p1, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    if-eqz v3, :cond_d5
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "  "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-virtual {v6, p1, v10}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    :cond_79
+    :goto_79
+    move-object/from16 v0, p3
+
+    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    if-eqz v3, :cond_ef
+
+    const-string v10, "  * "
+
+    :goto_82
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v10, " #"
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v10, ": "
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p1, v8}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    if-eqz v3, :cond_f2
+
+    invoke-virtual {v8, p1, v5}, Lcom/android/server/am/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    :cond_9f
+    :goto_9f
+    if-eqz p7, :cond_34
+
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v10, :cond_34
+
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v10, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v10, :cond_34
+
+    invoke-virtual {p1}, Ljava/io/PrintWriter;->flush()V
+
+    :try_start_ae
+    new-instance v9, Lcom/android/server/am/TransferPipe;
+
+    invoke-direct {v9}, Lcom/android/server/am/TransferPipe;-><init>()V
+    :try_end_b3
+    .catch Ljava/io/IOException; {:try_start_ae .. :try_end_b3} :catch_112
+    .catch Landroid/os/RemoteException; {:try_start_ae .. :try_end_b3} :catch_12e
+
+    :try_start_b3
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v10, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-virtual {v9}, Lcom/android/server/am/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;
+
+    move-result-object v11
+
+    invoke-virtual {v11}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;
+
+    move-result-object v11
+
+    iget-object v12, v8, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    invoke-interface {v10, v11, v12, v5, v1}, Landroid/app/IApplicationThread;->dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V
+
+    const-wide/16 v10, 0x7d0
+
+    invoke-virtual {v9, p0, v10, v11}, Lcom/android/server/am/TransferPipe;->go(Ljava/io/FileDescriptor;J)V
+    :try_end_c9
+    .catchall {:try_start_b3 .. :try_end_c9} :catchall_10d
+
+    :try_start_c9
+    invoke-virtual {v9}, Lcom/android/server/am/TransferPipe;->kill()V
+    :try_end_cc
+    .catch Ljava/io/IOException; {:try_start_c9 .. :try_end_cc} :catch_112
+    .catch Landroid/os/RemoteException; {:try_start_c9 .. :try_end_cc} :catch_12e
+
+    :goto_cc
+    const/4 v7, 0x1
+
+    goto/16 :goto_34
+
+    :cond_cf
+    const/4 v3, 0x0
+
+    goto/16 :goto_42
+
+    :cond_d2
+    const-string v10, "  "
+
+    goto :goto_59
+
+    :cond_d5
+    if-eqz p5, :cond_79
+
+    iget-object v10, v6, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    if-eqz v10, :cond_79
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v10, "  "
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v10, v6, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v10}, Landroid/content/Intent;->toInsecureString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_79
+
+    :cond_ef
+    const-string v10, "    "
+
+    goto :goto_82
+
+    :cond_f2
+    if-eqz p5, :cond_9f
+
+    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v10}, Landroid/content/Intent;->toInsecureString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v10, :cond_9f
+
+    invoke-virtual {p1, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v10, v8, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_9f
+
+    :catchall_10d
+    move-exception v10
+
+    :try_start_10e
+    invoke-virtual {v9}, Lcom/android/server/am/TransferPipe;->kill()V
+
+    throw v10
+    :try_end_112
+    .catch Ljava/io/IOException; {:try_start_10e .. :try_end_112} :catch_112
+    .catch Landroid/os/RemoteException; {:try_start_10e .. :try_end_112} :catch_12e
+
+    :catch_112
+    move-exception v2
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "Failure while dumping the activity: "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_cc
+
+    :catch_12e
+    move-exception v2
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "Got a RemoteException while dumping the activity"
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-virtual {p1, v10}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_cc
+
+    :cond_146
+    return-void
+.end method
+
+.method static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/ArrayList;Z)V
+    .registers 12
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/io/PrintWriter;",
+            "Ljava/lang/String;",
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ActivityManagerService$MemItem;",
+            ">;Z)V"
+        }
+    .end annotation
+
+    const/4 v7, 0x1
+
+    if-eqz p3, :cond_b
+
+    new-instance v2, Lcom/android/server/am/ActivityManagerService$14;
+
+    invoke-direct {v2}, Lcom/android/server/am/ActivityManagerService$14;-><init>()V
+
+    invoke-static {p2, v2}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V
+
+    :cond_b
+    const/4 v0, 0x0
+
+    :goto_c
+    invoke-virtual {p2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-ge v0, v2, :cond_4f
+
+    invoke-virtual {p2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v2, "%7d kB: "
+
+    new-array v3, v7, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    iget-wide v5, v1, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J
+
+    invoke-static {v5, v6}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    invoke-virtual {p0, v2, v3}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;
+
+    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;
+
+    invoke-virtual {p0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v2, v1, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    if-eqz v2, :cond_4c
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "           "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    invoke-static {p0, v2, v3, v7}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/ArrayList;Z)V
+
+    :cond_4c
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_c
+
+    :cond_4f
+    return-void
+.end method
+
+.method private static final dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+    .registers 15
+
+    const/4 v2, 0x0
+
+    invoke-interface {p2}, Ljava/util/List;->size()I
+
+    move-result v4
+
+    add-int/lit8 v0, v4, -0x1
+
+    move v1, v0
+
+    :goto_8
+    if-ltz v1, :cond_4d
+
+    invoke-interface {p2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p6, :cond_1f
+
+    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-nez v4, :cond_1f
+
+    :cond_1c
+    :goto_1c
+    add-int/lit8 v1, v1, -0x1
+
+    goto :goto_8
+
+    :cond_1f
+    const-string v5, "%s%s #%2d: %s"
+
+    const/4 v4, 0x4
+
+    new-array v6, v4, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    aput-object p3, v6, v4
+
+    const/4 v7, 0x1
+
+    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v4, :cond_4b
+
+    move-object v4, p5
+
+    :goto_2d
+    aput-object v4, v6, v7
+
+    const/4 v4, 0x2
+
+    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v6, v4
+
+    const/4 v4, 0x3
+
+    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    aput-object v7, v6, v4
+
+    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v4, :cond_1c
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_1c
+
+    :cond_4b
+    move-object v4, p4
+
+    goto :goto_2d
+
+    :cond_4d
+    return v2
+.end method
+
+.method private static final dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
+    .registers 36
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/io/PrintWriter;",
+            "Lcom/android/server/am/ActivityManagerService;",
+            "Ljava/util/List",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;",
+            "Ljava/lang/String;",
+            "Ljava/lang/String;",
+            "Ljava/lang/String;",
+            "Z",
+            "Ljava/lang/String;",
+            ")Z"
+        }
+    .end annotation
+
+    new-instance v10, Ljava/util/ArrayList;
+
+    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I
+
+    move-result v23
+
+    move/from16 v0, v23
+
+    invoke-direct {v10, v0}, Ljava/util/ArrayList;-><init>(I)V
+
+    const/4 v9, 0x0
+
+    :goto_c
+    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I
+
+    move-result v23
+
+    move/from16 v0, v23
+
+    if-ge v9, v0, :cond_4a
+
+    move-object/from16 v0, p2
+
+    invoke-interface {v0, v9}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p7, :cond_35
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v23, v0
+
+    move-object/from16 v0, v23
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v23, v0
+
+    move-object/from16 v0, p7
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v23
+
+    if-nez v23, :cond_35
+
+    :goto_32
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_c
+
+    :cond_35
+    new-instance v23, Landroid/util/Pair;
+
+    move-object/from16 v0, p2
+
+    invoke-interface {v0, v9}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v24
+
+    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v25
+
+    invoke-direct/range {v23 .. v25}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V
+
+    move-object/from16 v0, v23
+
+    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_32
+
+    :cond_4a
+    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
+
+    move-result v23
+
+    if-gtz v23, :cond_53
+
+    const/16 v23, 0x0
+
+    :goto_52
+    return v23
+
+    :cond_53
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$13;
+
+    invoke-direct {v3}, Lcom/android/server/am/ActivityManagerService$13;-><init>()V
+
+    invoke-static {v10, v3}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V
+
+    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J
+
+    move-result-wide v4
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J
+
+    move-wide/from16 v23, v0
+
+    sub-long v13, v4, v23
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v6
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J
+
+    move-wide/from16 v23, v0
+
+    sub-long v19, v6, v23
+
+    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
+
+    move-result v23
+
+    add-int/lit8 v9, v23, -0x1
+
+    :goto_79
+    if-ltz v9, :cond_509
+
+    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v23
+
+    check-cast v23, Landroid/util/Pair;
+
+    move-object/from16 v0, v23
+
+    iget-object v12, v0, Landroid/util/Pair;->first:Ljava/lang/Object;
+
+    check-cast v12, Lcom/android/server/am/ProcessRecord;
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    sget v24, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_370
+
+    const-string v23, "bak"
+
+    const-string v24, "  "
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    sget v26, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    :goto_a1
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    move/from16 v23, v0
+
+    packed-switch v23, :pswitch_data_50e
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    move/from16 v23, v0
+
+    invoke-static/range {v23 .. v23}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v15
+
+    :goto_b0
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z
+
+    move/from16 v23, v0
+
+    if-eqz v23, :cond_4b0
+
+    const-string v8, "A"
+
+    :goto_b8
+    const-string v24, "%s%s #%2d: adj=%s/%s%s trm=%2d %s (%s)"
+
+    const/16 v23, 0x9
+
+    move/from16 v0, v23
+
+    new-array v0, v0, [Ljava/lang/Object;
+
+    move-object/from16 v25, v0
+
+    const/16 v23, 0x0
+
+    aput-object p3, v25, v23
+
+    const/16 v26, 0x1
+
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    move/from16 v23, v0
+
+    if-eqz v23, :cond_4be
+
+    move-object/from16 v23, p5
+
+    :goto_d0
+    aput-object v23, v25, v26
+
+    const/16 v26, 0x2
+
+    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I
+
+    move-result v23
+
+    add-int/lit8 v27, v23, -0x1
+
+    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v23
+
+    check-cast v23, Landroid/util/Pair;
+
+    move-object/from16 v0, v23
+
+    iget-object v0, v0, Landroid/util/Pair;->second:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    check-cast v23, Ljava/lang/Integer;
+
+    invoke-virtual/range {v23 .. v23}, Ljava/lang/Integer;->intValue()I
+
+    move-result v23
+
+    sub-int v23, v27, v23
+
+    invoke-static/range {v23 .. v23}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v23
+
+    aput-object v23, v25, v26
+
+    const/16 v23, 0x3
+
+    aput-object v11, v25, v23
+
+    const/16 v23, 0x4
+
+    aput-object v15, v25, v23
+
+    const/16 v23, 0x5
+
+    aput-object v8, v25, v23
+
+    const/16 v23, 0x6
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    move/from16 v26, v0
+
+    invoke-static/range {v26 .. v26}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v26
+
+    aput-object v26, v25, v23
+
+    const/16 v23, 0x7
+
+    invoke-virtual {v12}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;
+
+    move-result-object v26
+
+    aput-object v26, v25, v23
+
+    const/16 v23, 0x8
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;
+
+    move-object/from16 v26, v0
+
+    aput-object v26, v25, v23
+
+    invoke-static/range {v24 .. v25}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+
+    move-result-object v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    if-nez v23, :cond_133
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    if-eqz v23, :cond_198
+
+    :cond_133
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "    "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    move-object/from16 v0, v23
+
+    instance-of v0, v0, Landroid/content/ComponentName;
+
+    move/from16 v23, v0
+
+    if-eqz v23, :cond_4c2
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    check-cast v23, Landroid/content/ComponentName;
+
+    invoke-virtual/range {v23 .. v23}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    :goto_160
+    const-string v23, "<="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    move-object/from16 v0, v23
+
+    instance-of v0, v0, Lcom/android/server/am/ProcessRecord;
+
+    move/from16 v23, v0
+
+    if-eqz v23, :cond_4e4
+
+    const-string v23, "Proc{"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    check-cast v23, Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;
+
+    move-result-object v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "}"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_198
+    :goto_198
+    if-eqz p6, :cond_36c
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "    "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "oom: max="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v23, " hidden="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v23, " curRaw="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v23, " setRaw="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setRawAdj:I
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v23, " cur="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v23, " set="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "    "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "keeping="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V
+
+    const-string v23, " hidden="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->hidden:Z
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V
+
+    const-string v23, " empty="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->empty:Z
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V
+
+    const-string v23, " hasAboveClient="
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z
+
+    move/from16 v23, v0
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Z)V
+
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    move/from16 v23, v0
+
+    if-nez v23, :cond_36c
+
+    iget-wide v0, v12, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J
+
+    move-wide/from16 v23, v0
+
+    const-wide/16 v25, 0x0
+
+    cmp-long v23, v23, v25
+
+    if-eqz v23, :cond_309
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    move-object/from16 v23, v0
+
+    invoke-virtual/range {v23 .. v23}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v16
+
+    monitor-enter v16
+
+    :try_start_29d
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v23, v0
+
+    move-object/from16 v0, v23
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move/from16 v23, v0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v24, v0
+
+    move-object/from16 v0, v16
+
+    move/from16 v1, v23
+
+    move/from16 v2, v24
+
+    invoke-virtual {v0, v1, v2, v4, v5}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J
+
+    move-result-wide v21
+
+    monitor-exit v16
+    :try_end_2b6
+    .catchall {:try_start_29d .. :try_end_2b6} :catchall_506
+
+    iget-wide v0, v12, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J
+
+    move-wide/from16 v23, v0
+
+    sub-long v17, v21, v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "    "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "keep awake over "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    invoke-static {v13, v14, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V
+
+    const-string v23, " used "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p0
+
+    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V
+
+    const-string v23, " ("
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-wide/16 v23, 0x64
+
+    mul-long v23, v23, v17
+
+    div-long v23, v23, v13
+
+    move-object/from16 v0, p0
+
+    move-wide/from16 v1, v23
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V
+
+    const-string v23, "%)"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_309
+    iget-wide v0, v12, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J
+
+    move-wide/from16 v23, v0
+
+    const-wide/16 v25, 0x0
+
+    cmp-long v23, v23, v25
+
+    if-eqz v23, :cond_36c
+
+    iget-wide v0, v12, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
+
+    move-wide/from16 v23, v0
+
+    iget-wide v0, v12, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J
+
+    move-wide/from16 v25, v0
+
+    sub-long v17, v23, v25
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "    "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v23, "run cpu over "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-wide/from16 v0, v19
+
+    move-object/from16 v2, p0
+
+    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V
+
+    const-string v23, " used "
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p0
+
+    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V
+
+    const-string v23, " ("
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-wide/16 v23, 0x64
+
+    mul-long v23, v23, v17
+
+    div-long v23, v23, v19
+
+    move-object/from16 v0, p0
+
+    move-wide/from16 v1, v23
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V
+
+    const-string v23, "%)"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_36c
+    add-int/lit8 v9, v9, -0x1
+
+    goto/16 :goto_79
+
+    :cond_370
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x8
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_38c
+
+    const-string v23, "svcb "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x8
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_38c
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x7
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_3a8
+
+    const-string v23, "prev "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x7
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_3a8
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x6
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_3c4
+
+    const-string v23, "home "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x6
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_3c4
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x5
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_3e0
+
+    const-string v23, "svc  "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x5
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_3e0
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x4
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_3fc
+
+    const-string v23, "bkup "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x4
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_3fc
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x3
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_418
+
+    const-string v23, "hvy  "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x3
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_418
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x2
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_434
+
+    const-string v23, "prcp "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x2
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_434
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, 0x1
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_450
+
+    const-string v23, "vis  "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x1
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_450
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    if-ltz v23, :cond_466
+
+    const-string v23, "fore "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, 0x0
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_466
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, -0xc
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_482
+
+    const-string v23, "pers "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, -0xc
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_482
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    const/16 v24, -0x10
+
+    move/from16 v0, v23
+
+    move/from16 v1, v24
+
+    if-lt v0, v1, :cond_49e
+
+    const-string v23, "sys  "
+
+    const/16 v24, 0x0
+
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v25, v0
+
+    const/16 v26, -0x10
+
+    invoke-static/range {v23 .. v26}, Lcom/android/server/am/ActivityManagerService;->buildOomTag(Ljava/lang/String;Ljava/lang/String;II)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :cond_49e
+    iget v0, v12, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v23, v0
+
+    invoke-static/range {v23 .. v23}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;
+
+    move-result-object v11
+
+    goto/16 :goto_a1
+
+    :pswitch_4a8
+    const-string v15, "B"
+
+    goto/16 :goto_b0
+
+    :pswitch_4ac
+    const-string v15, "F"
+
+    goto/16 :goto_b0
+
+    :cond_4b0
+    iget-boolean v0, v12, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    move/from16 v23, v0
+
+    if-eqz v23, :cond_4ba
+
+    const-string v8, "S"
+
+    goto/16 :goto_b8
+
+    :cond_4ba
+    const-string v8, " "
+
+    goto/16 :goto_b8
+
+    :cond_4be
+    move-object/from16 v23, p4
+
+    goto/16 :goto_d0
+
+    :cond_4c2
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    if-eqz v23, :cond_4d9
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    invoke-virtual/range {v23 .. v23}, Ljava/lang/Object;->toString()Ljava/lang/String;
+
+    move-result-object v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    goto/16 :goto_160
+
+    :cond_4d9
+    const-string v23, "{null}"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    goto/16 :goto_160
+
+    :cond_4e4
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    if-eqz v23, :cond_4fb
+
+    iget-object v0, v12, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    move-object/from16 v23, v0
+
+    invoke-virtual/range {v23 .. v23}, Ljava/lang/Object;->toString()Ljava/lang/String;
+
+    move-result-object v23
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_198
+
+    :cond_4fb
+    const-string v23, "{null}"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_198
+
+    :catchall_506
+    move-exception v23
+
+    :try_start_507
+    monitor-exit v16
+    :try_end_508
+    .catchall {:try_start_507 .. :try_end_508} :catchall_506
+
+    throw v23
+
+    :cond_509
+    const/16 v23, 0x1
+
+    goto/16 :goto_52
+
+    nop
+
+    :pswitch_data_50e
+    .packed-switch 0x0
+        :pswitch_4ac
+        :pswitch_4a8
+    .end packed-switch
+.end method
+
+.method private dumpService(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ServiceRecord;[Ljava/lang/String;Z)V
+    .registers 12
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "  "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    monitor-enter p0
+
+    :try_start_14
+    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, "SERVICE "
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v3, p4, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, " "
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-static {p4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v3
+
+    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, " pid="
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v3, p4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_8d
+
+    iget-object v3, p4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v3, v3, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(I)V
+
+    :goto_41
+    if-eqz p6, :cond_46
+
+    invoke-virtual {p4, p3, v1}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    :cond_46
+    monitor-exit p0
+    :try_end_47
+    .catchall {:try_start_14 .. :try_end_47} :catchall_93
+
+    iget-object v3, p4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_8c
+
+    iget-object v3, p4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v3, :cond_8c
+
+    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v3, "  Client:"
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual {p3}, Ljava/io/PrintWriter;->flush()V
+
+    :try_start_5c
+    new-instance v2, Lcom/android/server/am/TransferPipe;
+
+    invoke-direct {v2}, Lcom/android/server/am/TransferPipe;-><init>()V
+    :try_end_61
+    .catch Ljava/io/IOException; {:try_start_5c .. :try_end_61} :catch_9b
+    .catch Landroid/os/RemoteException; {:try_start_5c .. :try_end_61} :catch_b7
+
+    :try_start_61
+    iget-object v3, p4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-virtual {v2}, Lcom/android/server/am/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;
+
+    move-result-object v4
+
+    invoke-interface {v3, v4, p4, p5}, Landroid/app/IApplicationThread;->dumpService(Ljava/io/FileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "    "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v2, v3}, Lcom/android/server/am/TransferPipe;->setBufferPrefix(Ljava/lang/String;)V
+
+    invoke-virtual {v2, p2}, Lcom/android/server/am/TransferPipe;->go(Ljava/io/FileDescriptor;)V
+    :try_end_89
+    .catchall {:try_start_61 .. :try_end_89} :catchall_96
+
+    :try_start_89
+    invoke-virtual {v2}, Lcom/android/server/am/TransferPipe;->kill()V
+    :try_end_8c
+    .catch Ljava/io/IOException; {:try_start_89 .. :try_end_8c} :catch_9b
+    .catch Landroid/os/RemoteException; {:try_start_89 .. :try_end_8c} :catch_b7
+
+    :cond_8c
+    :goto_8c
+    return-void
+
+    :cond_8d
+    :try_start_8d
+    const-string v3, "(not running)"
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_41
+
+    :catchall_93
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_95
+    .catchall {:try_start_8d .. :try_end_95} :catchall_93
+
+    throw v3
+
+    :catchall_96
+    move-exception v3
+
+    :try_start_97
+    invoke-virtual {v2}, Lcom/android/server/am/TransferPipe;->kill()V
+
+    throw v3
+    :try_end_9b
+    .catch Ljava/io/IOException; {:try_start_97 .. :try_end_9b} :catch_9b
+    .catch Landroid/os/RemoteException; {:try_start_97 .. :try_end_9b} :catch_b7
+
+    :catch_9b
+    move-exception v0
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "    Failure while dumping the service: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_8c
+
+    :catch_b7
+    move-exception v0
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "    Got a RemoteException while dumping the service"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_8c
+.end method
+
+.method public static dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessStats;Landroid/util/SparseArray;)Ljava/io/File;
+    .registers 13
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(Z",
+            "Ljava/util/ArrayList",
+            "<",
+            "Ljava/lang/Integer;",
+            ">;",
+            "Lcom/android/internal/os/ProcessStats;",
+            "Landroid/util/SparseArray",
+            "<",
+            "Ljava/lang/Boolean;",
+            ">;)",
+            "Ljava/io/File;"
+        }
+    .end annotation
+
+    const/4 v4, 0x0
+
+    const-string v5, "dalvik.vm.stack-trace-file"
+
+    invoke-static {v5, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_f
+
+    invoke-virtual {v3}, Ljava/lang/String;->length()I
+
+    move-result v5
+
+    if-nez v5, :cond_11
+
+    :cond_f
+    move-object v2, v4
+
+    :goto_10
+    return-object v2
+
+    :cond_11
+    new-instance v2, Ljava/io/File;
+
+    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    :try_start_16
+    invoke-virtual {v2}, Ljava/io/File;->getParentFile()Ljava/io/File;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/io/File;->exists()Z
+
+    move-result v5
+
+    if-nez v5, :cond_23
+
+    invoke-virtual {v2}, Ljava/io/File;->mkdirs()Z
+
+    :cond_23
+    invoke-virtual {v1}, Ljava/io/File;->getPath()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/16 v6, 0x1fd
+
+    const/4 v7, -0x1
+
+    const/4 v8, -0x1
+
+    invoke-static {v5, v6, v7, v8}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
+
+    if-eqz p0, :cond_39
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_39
+
+    invoke-virtual {v2}, Ljava/io/File;->delete()Z
+
+    :cond_39
+    invoke-virtual {v2}, Ljava/io/File;->createNewFile()Z
+
+    invoke-virtual {v2}, Ljava/io/File;->getPath()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/16 v6, 0x1b6
+
+    const/4 v7, -0x1
+
+    const/4 v8, -0x1
+
+    invoke-static {v5, v6, v7, v8}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
+    :try_end_47
+    .catch Ljava/io/IOException; {:try_start_16 .. :try_end_47} :catch_4b
+
+    invoke-static {v3, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessStats;Landroid/util/SparseArray;)V
+
+    goto :goto_10
+
+    :catch_4b
+    move-exception v0
+
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Unable to prepare ANR traces file: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    move-object v2, v4
+
+    goto :goto_10
+.end method
+
+.method private static dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessStats;Landroid/util/SparseArray;)V
+    .registers 13
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/lang/String;",
+            "Ljava/util/ArrayList",
+            "<",
+            "Ljava/lang/Integer;",
+            ">;",
+            "Lcom/android/internal/os/ProcessStats;",
+            "Landroid/util/SparseArray",
+            "<",
+            "Ljava/lang/Boolean;",
+            ">;)V"
+        }
+    .end annotation
+
+    new-instance v5, Lcom/android/server/am/ActivityManagerService$4;
+
+    const/16 v7, 0x8
+
+    invoke-direct {v5, p0, v7}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Ljava/lang/String;I)V
+
+    :try_start_7
+    invoke-virtual {v5}, Landroid/os/FileObserver;->startWatching()V
+    :try_end_a
+    .catchall {:try_start_7 .. :try_end_a} :catchall_81
+
+    if-eqz p1, :cond_34
+
+    :try_start_c
+    invoke-virtual {p1}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    const/4 v2, 0x0
+
+    :goto_11
+    if-ge v2, v3, :cond_34
+
+    monitor-enter v5
+    :try_end_14
+    .catchall {:try_start_c .. :try_end_14} :catchall_81
+    .catch Ljava/lang/InterruptedException; {:try_start_c .. :try_end_14} :catch_2e
+
+    :try_start_14
+    invoke-virtual {p1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Ljava/lang/Integer;
+
+    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I
+
+    move-result v7
+
+    const/4 v8, 0x3
+
+    invoke-static {v7, v8}, Landroid/os/Process;->sendSignal(II)V
+
+    const-wide/16 v7, 0xc8
+
+    invoke-virtual {v5, v7, v8}, Ljava/lang/Object;->wait(J)V
+
+    monitor-exit v5
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_11
+
+    :catchall_2b
+    move-exception v7
+
+    monitor-exit v5
+    :try_end_2d
+    .catchall {:try_start_14 .. :try_end_2d} :catchall_2b
+
+    :try_start_2d
+    throw v7
+    :try_end_2e
+    .catchall {:try_start_2d .. :try_end_2e} :catchall_81
+    .catch Ljava/lang/InterruptedException; {:try_start_2d .. :try_end_2e} :catch_2e
+
+    :catch_2e
+    move-exception v1
+
+    :try_start_2f
+    const-string v7, "ActivityManager"
+
+    invoke-static {v7, v1}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    :cond_34
+    if-eqz p2, :cond_86
+
+    invoke-virtual {p2}, Lcom/android/internal/os/ProcessStats;->init()V
+
+    invoke-static {}, Ljava/lang/System;->gc()V
+
+    invoke-virtual {p2}, Lcom/android/internal/os/ProcessStats;->update()V
+    :try_end_3f
+    .catchall {:try_start_2f .. :try_end_3f} :catchall_81
+
+    :try_start_3f
+    monitor-enter p2
+    :try_end_40
+    .catchall {:try_start_3f .. :try_end_40} :catchall_81
+    .catch Ljava/lang/InterruptedException; {:try_start_3f .. :try_end_40} :catch_75
+
+    const-wide/16 v7, 0x1f4
+
+    :try_start_42
+    invoke-virtual {p2, v7, v8}, Ljava/lang/Object;->wait(J)V
+
+    monitor-exit p2
+    :try_end_46
+    .catchall {:try_start_42 .. :try_end_46} :catchall_72
+
+    :goto_46
+    :try_start_46
+    invoke-virtual {p2}, Lcom/android/internal/os/ProcessStats;->update()V
+
+    invoke-virtual {p2}, Lcom/android/internal/os/ProcessStats;->countWorkingStats()I
+
+    move-result v0
+
+    const/4 v4, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_4f
+    if-ge v2, v0, :cond_86
+
+    const/4 v7, 0x5
+
+    if-ge v4, v7, :cond_86
+
+    invoke-virtual {p2, v2}, Lcom/android/internal/os/ProcessStats;->getWorkingStats(I)Lcom/android/internal/os/ProcessStats$Stats;
+
+    move-result-object v6
+
+    iget v7, v6, Lcom/android/internal/os/ProcessStats$Stats;->pid:I
+
+    invoke-virtual {p3, v7}, Landroid/util/SparseArray;->indexOfKey(I)I
+    :try_end_5d
+    .catchall {:try_start_46 .. :try_end_5d} :catchall_81
+
+    move-result v7
+
+    if-ltz v7, :cond_6f
+
+    add-int/lit8 v4, v4, 0x1
+
+    :try_start_62
+    monitor-enter v5
+    :try_end_63
+    .catchall {:try_start_62 .. :try_end_63} :catchall_81
+    .catch Ljava/lang/InterruptedException; {:try_start_62 .. :try_end_63} :catch_7a
+
+    :try_start_63
+    iget v7, v6, Lcom/android/internal/os/ProcessStats$Stats;->pid:I
+
+    const/4 v8, 0x3
+
+    invoke-static {v7, v8}, Landroid/os/Process;->sendSignal(II)V
+
+    const-wide/16 v7, 0xc8
+
+    invoke-virtual {v5, v7, v8}, Ljava/lang/Object;->wait(J)V
+
+    monitor-exit v5
+    :try_end_6f
+    .catchall {:try_start_63 .. :try_end_6f} :catchall_77
+
+    :cond_6f
+    :goto_6f
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_4f
+
+    :catchall_72
+    move-exception v7
+
+    :try_start_73
+    monitor-exit p2
+    :try_end_74
+    .catchall {:try_start_73 .. :try_end_74} :catchall_72
+
+    :try_start_74
+    throw v7
+    :try_end_75
+    .catchall {:try_start_74 .. :try_end_75} :catchall_81
+    .catch Ljava/lang/InterruptedException; {:try_start_74 .. :try_end_75} :catch_75
+
+    :catch_75
+    move-exception v7
+
+    goto :goto_46
+
+    :catchall_77
+    move-exception v7
+
+    :try_start_78
+    monitor-exit v5
+    :try_end_79
+    .catchall {:try_start_78 .. :try_end_79} :catchall_77
+
+    :try_start_79
+    throw v7
+    :try_end_7a
+    .catchall {:try_start_79 .. :try_end_7a} :catchall_81
+    .catch Ljava/lang/InterruptedException; {:try_start_79 .. :try_end_7a} :catch_7a
+
+    :catch_7a
+    move-exception v1
+
+    :try_start_7b
+    const-string v7, "ActivityManager"
+
+    invoke-static {v7, v1}, Landroid/util/Log;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_80
+    .catchall {:try_start_7b .. :try_end_80} :catchall_81
+
+    goto :goto_6f
+
+    :catchall_81
+    move-exception v7
+
+    invoke-virtual {v5}, Landroid/os/FileObserver;->stopWatching()V
+
+    throw v7
+
+    :cond_86
+    invoke-virtual {v5}, Landroid/os/FileObserver;->stopWatching()V
+
+    return-void
+.end method
+
+.method private final findAffinityTaskTopLocked(ILjava/lang/String;)I
+    .registers 10
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v4, v5, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    move-object v2, v4
+
+    add-int/lit8 v1, p1, -0x1
+
+    :goto_f
+    if-ltz v1, :cond_2e
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v5, v2, :cond_2b
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget-object v5, v2, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    invoke-virtual {p2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_2b
+
+    move v5, v1
+
+    :goto_2a
+    return v5
+
+    :cond_2b
+    add-int/lit8 v1, v1, -0x1
+
+    goto :goto_f
+
+    :cond_2e
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    move-object v2, v4
+
+    add-int/lit8 v1, p1, 0x1
+
+    :goto_39
+    if-ge v1, v0, :cond_58
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v5, v2, :cond_55
+
+    iget-object v5, v2, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    invoke-virtual {p2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_53
+
+    move v5, v1
+
+    goto :goto_2a
+
+    :cond_53
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    :cond_55
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_39
+
+    :cond_58
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    add-int/lit8 v6, v0, -0x1
+
+    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    invoke-virtual {p2, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_71
+
+    add-int/lit8 v5, v0, -0x1
+
+    goto :goto_2a
+
+    :cond_71
+    const/4 v5, -0x1
+
+    goto :goto_2a
+.end method
+
+.method private findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+    .registers 12
+
+    const/4 v5, 0x0
+
+    if-nez p1, :cond_5
+
+    move-object v4, v5
+
+    :goto_4
+    return-object v4
+
+    :cond_5
+    monitor-enter p0
+
+    :try_start_6
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v6}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v6
+
+    invoke-interface {v6}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v2
+
+    :cond_14
+    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_41
+
+    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/util/SparseArray;
+
+    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I
+
+    move-result v0
+
+    const/4 v3, 0x0
+
+    :goto_25
+    if-ge v3, v0, :cond_14
+
+    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v6, :cond_3e
+
+    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v6}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v6
+
+    if-ne v6, p1, :cond_3e
+
+    monitor-exit p0
+
+    goto :goto_4
+
+    :catchall_3b
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_3d
+    .catchall {:try_start_6 .. :try_end_3d} :catchall_3b
+
+    throw v5
+
+    :cond_3e
+    add-int/lit8 v3, v3, 0x1
+
+    goto :goto_25
+
+    :cond_41
+    :try_start_41
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Can\'t find mystery application for "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, " from pid="
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v8
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, " uid="
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v8
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, ": "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+    :try_end_80
+    .catchall {:try_start_41 .. :try_end_80} :catchall_3b
+
+    move-object v4, v5
+
+    goto :goto_4
+.end method
+
+.method private findServiceLocked(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+    .registers 16
+
+    const/4 v12, 0x0
+
+    const/4 v9, 0x0
+
+    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_14
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ServiceRecord;
+
+    :cond_14
+    if-nez v9, :cond_23
+
+    new-instance v7, Landroid/content/Intent$FilterComparison;
+
+    invoke-direct {v7, p1}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServicesByIntent:Ljava/util/HashMap;
+
+    invoke-virtual {v1, v7}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ServiceRecord;
+
+    :cond_23
+    if-nez v9, :cond_4d
+
+    :try_start_25
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    const/4 v2, 0x0
+
+    invoke-interface {v1, p1, p2, v2}, Landroid/content/pm/IPackageManager;->resolveService(Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/pm/ResolveInfo;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_36
+
+    iget-object v11, v10, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    :goto_32
+    if-nez v11, :cond_38
+
+    move-object v1, v12
+
+    :goto_35
+    return-object v1
+
+    :cond_36
+    move-object v11, v12
+
+    goto :goto_32
+
+    :cond_38
+    new-instance v8, Landroid/content/ComponentName;
+
+    iget-object v1, v11, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v2, v11, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v8, v1, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v1, v8}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    move-object v0, v1
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord;
+
+    move-object v9, v0
+    :try_end_4d
+    .catch Landroid/os/RemoteException; {:try_start_25 .. :try_end_4d} :catch_111
+
+    :cond_4d
+    :goto_4d
+    if-eqz v9, :cond_10e
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v4
+
+    iget-object v2, v9, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;
+
+    iget-object v1, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-boolean v6, v9, Lcom/android/server/am/ServiceRecord;->exported:Z
+
+    move-object v1, p0
+
+    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v1
+
+    if-eqz v1, :cond_107
+
+    iget-boolean v1, v9, Lcom/android/server/am/ServiceRecord;->exported:Z
+
+    if-nez v1, :cond_c4
+
+    const-string v1, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: Accessing service "
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v5, " from pid="
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v5, " that is not exported from uid "
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "not exported from uid "
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, p0, v12, v2}, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    goto/16 :goto_35
+
+    :cond_c4
+    const-string v1, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: Accessing service "
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v5, " from pid="
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v5, " requires "
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v5, v9, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;
+
+    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    iget-object v2, v9, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;
+
+    invoke-direct {v1, p0, v12, v2}, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    goto/16 :goto_35
+
+    :cond_107
+    new-instance v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    invoke-direct {v1, p0, v9, v12}, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    goto/16 :goto_35
+
+    :cond_10e
+    move-object v1, v12
+
+    goto/16 :goto_35
+
+    :catch_111
+    move-exception v1
+
+    goto/16 :goto_4d
+.end method
+
+.method private final findServiceLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)Lcom/android/server/am/ServiceRecord;
+    .registers 5
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord;
+
+    if-ne v0, p2, :cond_b
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_a
+.end method
+
+.method private final finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+    .registers 14
+
+    const/4 v3, 0x1
+
+    const/4 v2, 0x0
+
+    const/4 v6, 0x0
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v4
+
+    if-nez v4, :cond_15
+
+    if-eqz p6, :cond_14
+
+    const-string v3, "ActivityManager"
+
+    const-string v4, "finishReceiver called but no pending broadcasts"
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_14
+    :goto_14
+    return v2
+
+    :cond_15
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    if-nez v4, :cond_2b
+
+    if-eqz p6, :cond_14
+
+    const-string v3, "ActivityManager"
+
+    const-string v4, "finishReceiver called but none active"
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_14
+
+    :cond_2b
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    if-eq v4, p1, :cond_37
+
+    const-string v3, "ActivityManager"
+
+    const-string v4, "finishReceiver called but active receiver is different"
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_14
+
+    :cond_37
+    iget v1, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    iput v2, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    if-nez v1, :cond_46
+
+    if-eqz p6, :cond_46
+
+    const-string v4, "ActivityManager"
+
+    const-string v5, "finishReceiver called but state is IDLE"
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_46
+    iput-object v6, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v4, v6}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v4, :cond_55
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v6, v4, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    :cond_55
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->curFilter:Lcom/android/server/am/BroadcastFilter;
+
+    if-eqz v4, :cond_5f
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->curFilter:Lcom/android/server/am/BroadcastFilter;
+
+    iget-object v4, v4, Lcom/android/server/am/BroadcastFilter;->receiverList:Lcom/android/server/am/ReceiverList;
+
+    iput-object v6, v4, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    :cond_5f
+    iput-object v6, v0, Lcom/android/server/am/BroadcastRecord;->curFilter:Lcom/android/server/am/BroadcastFilter;
+
+    iput-object v6, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v6, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    iput-object v6, v0, Lcom/android/server/am/BroadcastRecord;->curReceiver:Landroid/content/pm/ActivityInfo;
+
+    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iput p2, v0, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    iput-object p3, v0, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    iput-object p4, v0, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    iput-boolean p5, v0, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    if-eq v1, v3, :cond_76
+
+    const/4 v4, 0x3
+
+    if-ne v1, v4, :cond_14
+
+    :cond_76
+    move v2, v3
+
+    goto :goto_14
+.end method
+
+.method private forceStopPackageLocked(Ljava/lang/String;I)V
+    .registers 18
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    move-object v1, p0
+
+    move-object/from16 v2, p1
+
+    move/from16 v3, p2
+
+    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    new-instance v4, Landroid/content/Intent;
+
+    const-string v1, "android.intent.action.PACKAGE_RESTARTED"
+
+    const-string v2, "package"
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p1
+
+    invoke-static {v2, v0, v3}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;
+
+    move-result-object v2
+
+    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V
+
+    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-nez v1, :cond_25
+
+    const/high16 v1, 0x4000
+
+    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    :cond_25
+    const-string v1, "android.intent.extra.UID"
+
+    move/from16 v0, p2
+
+    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    sget v13, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    const/16 v14, 0x3e8
+
+    move-object v1, p0
+
+    invoke-direct/range {v1 .. v14}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    return-void
+.end method
+
+.method private final forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+    .registers 30
+
+    if-gez p2, :cond_c
+
+    :try_start_2
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    move-object/from16 v0, p1
+
+    invoke-interface {v2, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+    :try_end_b
+    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_b} :catch_1ff
+
+    move-result p2
+
+    :cond_c
+    :goto_c
+    if-eqz p5, :cond_5c
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Force stopping package "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " uid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move/from16 v0, p2
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v14
+
+    :cond_44
+    :goto_44
+    invoke-interface {v14}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_5c
+
+    invoke-interface {v14}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Landroid/util/SparseArray;
+
+    move/from16 v0, p2
+
+    invoke-virtual {v13, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_44
+
+    invoke-interface {v14}, Ljava/util/Iterator;->remove()V
+
+    goto :goto_44
+
+    :cond_5c
+    const/16 v5, -0x64
+
+    const/4 v7, 0x0
+
+    const-string v10, "force stop"
+
+    move-object/from16 v2, p0
+
+    move-object/from16 v3, p1
+
+    move/from16 v4, p2
+
+    move/from16 v6, p3
+
+    move/from16 v8, p5
+
+    move/from16 v9, p6
+
+    invoke-direct/range {v2 .. v10}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIZZZZLjava/lang/String;)Z
+
+    move-result v15
+
+    const/16 v17, 0x0
+
+    const/4 v4, 0x0
+
+    :goto_74
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-ge v4, v2, :cond_ed
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v20
+
+    if-nez v20, :cond_9c
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    move-object/from16 v0, v17
+
+    if-ne v2, v0, :cond_ae
+
+    :cond_9c
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_a8
+
+    if-nez p6, :cond_a8
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v2, :cond_ae
+
+    :cond_a8
+    if-nez p5, :cond_b3
+
+    iget-boolean v2, v3, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-eqz v2, :cond_b1
+
+    :cond_ae
+    :goto_ae
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_74
+
+    :cond_b1
+    const/4 v2, 0x1
+
+    :goto_b2
+    return v2
+
+    :cond_b3
+    const/4 v15, 0x1
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "  Force finishing activity "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    if-eqz v20, :cond_da
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_d7
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v5, 0x1
+
+    iput-boolean v5, v2, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    :cond_d7
+    const/4 v2, 0x0
+
+    iput-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    :cond_da
+    iget-object v0, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    move-object/from16 v17, v0
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const-string v7, "force-stop"
+
+    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_ae
+
+    add-int/lit8 v4, v4, -0x1
+
+    goto :goto_ae
+
+    :cond_ed
+    new-instance v22, Ljava/util/ArrayList;
+
+    invoke-direct/range {v22 .. v22}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v16
+
+    :cond_fe
+    :goto_fe
+    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_15f
+
+    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v21
+
+    check-cast v21, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_fe
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_126
+
+    if-nez p6, :cond_126
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v2, :cond_fe
+
+    :cond_126
+    if-nez p5, :cond_12a
+
+    const/4 v2, 0x1
+
+    goto :goto_b2
+
+    :cond_12a
+    const/4 v15, 0x1
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "  Force stopping service "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_152
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v5, 0x1
+
+    iput-boolean v5, v2, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    :cond_152
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v21
+
+    iput-object v2, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_fe
+
+    :cond_15f
+    invoke-virtual/range {v22 .. v22}, Ljava/util/ArrayList;->size()I
+
+    move-result v11
+
+    const/4 v4, 0x0
+
+    :goto_164
+    if-ge v4, v11, :cond_177
+
+    move-object/from16 v0, v22
+
+    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ServiceRecord;
+
+    const/4 v5, 0x1
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v2, v5}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_164
+
+    :cond_177
+    new-instance v19, Ljava/util/ArrayList;
+
+    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v16
+
+    :cond_188
+    :goto_188
+    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1c0
+
+    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ContentProviderRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_188
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_1b2
+
+    if-nez p6, :cond_1b2
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v2, :cond_188
+
+    :cond_1b2
+    if-nez p5, :cond_1b7
+
+    const/4 v2, 0x1
+
+    goto/16 :goto_b2
+
+    :cond_1b7
+    const/4 v15, 0x1
+
+    move-object/from16 v0, v19
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_188
+
+    :cond_1c0
+    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I
+
+    move-result v11
+
+    const/4 v4, 0x0
+
+    :goto_1c5
+    if-ge v4, v11, :cond_1d8
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ContentProviderRecord;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v5, v2}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)V
+
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_1c5
+
+    :cond_1d8
+    if-eqz p5, :cond_1fc
+
+    if-eqz p4, :cond_1e7
+
+    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;
+
+    move-result-object v12
+
+    if-eqz v12, :cond_1e7
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v12, v0}, Lcom/android/server/AttributeCache;->removePackage(Ljava/lang/String;)V
+
+    :cond_1e7
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
+
+    if-eqz v2, :cond_1fc
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->scheduleIdleLocked()V
+
+    :cond_1fc
+    move v2, v15
+
+    goto/16 :goto_b2
+
+    :catch_1ff
+    move-exception v2
+
+    goto/16 :goto_c
+.end method
+
+.method private final generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
+    .registers 12
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Lcom/android/server/am/ProcessRecord;",
+            ")",
+            "Ljava/util/List",
+            "<",
+            "Landroid/content/pm/ProviderInfo;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    :try_start_1
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v6
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    const/16 v9, 0xc00
+
+    invoke-interface {v6, v7, v8, v9}, Landroid/content/pm/IPackageManager;->queryContentProviders(Ljava/lang/String;II)Ljava/util/List;
+    :try_end_10
+    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_10} :catch_58
+
+    move-result-object v5
+
+    :goto_11
+    if-eqz v5, :cond_57
+
+    invoke-interface {v5}, Ljava/util/List;->size()I
+
+    move-result v0
+
+    const/4 v4, 0x0
+
+    :goto_18
+    if-ge v4, v0, :cond_57
+
+    invoke-interface {v5, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/pm/ProviderInfo;
+
+    new-instance v1, Landroid/content/ComponentName;
+
+    iget-object v6, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    iget-object v7, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v1, v6, v7}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ContentProviderRecord;
+
+    if-nez v3, :cond_3f
+
+    new-instance v3, Lcom/android/server/am/ContentProviderRecord;
+
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    invoke-direct {v3, v2, v6, v1}, Lcom/android/server/am/ContentProviderRecord;-><init>(Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;)V
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v1, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_3f
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    iget-object v7, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v6, v7, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    iget-object v6, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p1, v6}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;)Z
+
+    iget-object v6, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V
+
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_18
+
+    :cond_57
+    return-object v5
+
+    :catch_58
+    move-exception v6
+
+    goto :goto_11
+.end method
+
+.method private generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;
+    .registers 9
+
+    new-instance v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    invoke-direct {v0}, Landroid/app/ActivityManager$ProcessErrorStateInfo;-><init>()V
+
+    iput p2, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->condition:I
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iput-object v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->processName:Ljava/lang/String;
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->pid:I
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->uid:I
+
+    iput-object p3, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;
+
+    iput-object p4, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;
+
+    iput-object p5, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;
+
+    iput-object p6, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->stackTrace:Ljava/lang/String;
+
+    return-object v0
+.end method
+
+.method private static getCalledPreBootReceiversFile()Ljava/io/File;
+    .registers 4
+
+    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;
+
+    move-result-object v0
+
+    new-instance v2, Ljava/io/File;
+
+    const-string v3, "system"
+
+    invoke-direct {v2, v0, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+
+    new-instance v1, Ljava/io/File;
+
+    const-string v3, "called_pre_boots.dat"
+
+    invoke-direct {v1, v2, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+
+    return-object v1
+.end method
+
+.method private getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+    .registers 4
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_a
+
+    const/4 v1, 0x0
+
+    :goto_9
+    return-object v1
+
+    :cond_a
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;
+
+    goto :goto_9
+.end method
+
+.method private getCommonServicesLocked()Ljava/util/HashMap;
+    .registers 4
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/HashMap",
+            "<",
+            "Ljava/lang/String;",
+            "Landroid/os/IBinder;",
+            ">;"
+        }
+    .end annotation
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;
+
+    if-nez v0, :cond_32
+
+    new-instance v0, Ljava/util/HashMap;
+
+    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V
+
+    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;
+
+    const-string v1, "package"
+
+    const-string v2, "package"
+
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v2
+
+    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;
+
+    const-string v1, "window"
+
+    const-string v2, "window"
+
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v2
+
+    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;
+
+    const-string v1, "alarm"
+
+    const-string v2, "alarm"
+
+    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v2
+
+    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_32
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;
+
+    return-object v0
+.end method
+
+.method private getContentProviderExternal(Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+    .registers 3
+
+    const/4 v0, 0x0
+
+    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method private final getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+    .registers 31
+
+    const/4 v14, 0x0
+
+    monitor-enter p0
+
+    const/16 v26, 0x0
+
+    if-eqz p1, :cond_44
+
+    :try_start_6
+    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v26
+
+    if-nez v26, :cond_44
+
+    new-instance v2, Ljava/lang/SecurityException;
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unable to find app for caller "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " (pid="
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ") when getting content provider "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :catchall_41
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_43
+    .catchall {:try_start_6 .. :try_end_43} :catchall_41
+
+    throw v2
+
+    :cond_44
+    :try_start_44
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v2, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v15
+
+    check-cast v15, Lcom/android/server/am/ContentProviderRecord;
+
+    if-eqz v15, :cond_6a
+
+    const/16 v25, 0x1
+
+    :goto_54
+    if-eqz v25, :cond_102
+
+    iget-object v14, v15, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v14, v1}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
+
+    move-result-object v21
+
+    if-eqz v21, :cond_6d
+
+    new-instance v2, Ljava/lang/SecurityException;
+
+    move-object/from16 v0, v21
+
+    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_6a
+    const/16 v25, 0x0
+
+    goto :goto_54
+
+    :cond_6d
+    if-eqz v26, :cond_87
+
+    move-object/from16 v0, v26
+
+    invoke-virtual {v15, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_87
+
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;
+
+    if-eqz v2, :cond_84
+
+    new-instance v16, Lcom/android/server/am/ContentProviderRecord;
+
+    move-object/from16 v0, v16
+
+    invoke-direct {v0, v15}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ContentProviderRecord;)V
+
+    move-object/from16 v15, v16
+
+    :cond_84
+    monitor-exit p0
+
+    move-object v2, v15
+
+    :goto_86
+    return-object v2
+
+    :cond_87
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v22
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-virtual {v0, v1, v15}, Lcom/android/server/am/ActivityManagerService;->incProviderCount(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)Z
+
+    move-result v13
+
+    if-eqz v13, :cond_a9
+
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_a9
+
+    move-object/from16 v0, v26
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    const/4 v3, 0x2
+
+    if-gt v2, v3, :cond_a9
+
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x1
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    :cond_a9
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_ff
+
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v2}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    move-result v27
+
+    if-nez v27, :cond_ff
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Existing provider "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v15, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v4}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " is crashing; detaching "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, v26
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-virtual {v0, v1, v15}, Lcom/android/server/am/ActivityManagerService;->decProviderCount(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)Z
+
+    move-result v20
+
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    iget v3, v3, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget-object v4, v15, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V
+
+    if-nez v20, :cond_fd
+
+    const/4 v2, 0x0
+
+    monitor-exit p0
+
+    goto :goto_86
+
+    :cond_fd
+    const/16 v25, 0x0
+
+    :cond_ff
+    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+    :try_end_102
+    .catchall {:try_start_44 .. :try_end_102} :catchall_41
+
+    :cond_102
+    if-nez v25, :cond_295
+
+    :try_start_104
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    const/16 v3, 0xc00
+
+    move-object/from16 v0, p2
+
+    invoke-interface {v2, v0, v3}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
+    :try_end_10f
+    .catchall {:try_start_104 .. :try_end_10f} :catchall_41
+    .catch Landroid/os/RemoteException; {:try_start_104 .. :try_end_10f} :catch_30f
+
+    move-result-object v14
+
+    :goto_110
+    if-nez v14, :cond_116
+
+    const/4 v2, 0x0
+
+    :try_start_113
+    monitor-exit p0
+
+    goto/16 :goto_86
+
+    :cond_116
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v14, v1}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
+
+    move-result-object v21
+
+    if-eqz v21, :cond_128
+
+    new-instance v2, Ljava/lang/SecurityException;
+
+    move-object/from16 v0, v21
+
+    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_128
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-nez v2, :cond_14c
+
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z
+
+    if-nez v2, :cond_14c
+
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
+
+    if-nez v2, :cond_14c
+
+    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;
+
+    const-string v3, "system"
+
+    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_14c
+
+    new-instance v2, Ljava/lang/IllegalArgumentException;
+
+    const-string v3, "Attempt to launch content provider before system ready"
+
+    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_14c
+    new-instance v12, Landroid/content/ComponentName;
+
+    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    iget-object v3, v14, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v12, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v12}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v15
+
+    check-cast v15, Lcom/android/server/am/ContentProviderRecord;
+    :try_end_15f
+    .catchall {:try_start_113 .. :try_end_15f} :catchall_41
+
+    if-nez v15, :cond_193
+
+    const/16 v18, 0x1
+
+    :goto_163
+    if-eqz v18, :cond_19f
+
+    :try_start_165
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    iget-object v3, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    const/16 v4, 0x400
+
+    invoke-interface {v2, v3, v4}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
+
+    move-result-object v11
+
+    if-nez v11, :cond_196
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "No package info for content provider "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v14, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_18f
+    .catchall {:try_start_165 .. :try_end_18f} :catchall_41
+    .catch Landroid/os/RemoteException; {:try_start_165 .. :try_end_18f} :catch_30c
+
+    const/4 v2, 0x0
+
+    :try_start_190
+    monitor-exit p0
+    :try_end_191
+    .catchall {:try_start_190 .. :try_end_191} :catchall_41
+
+    goto/16 :goto_86
+
+    :cond_193
+    const/16 v18, 0x0
+
+    goto :goto_163
+
+    :cond_196
+    :try_start_196
+    new-instance v16, Lcom/android/server/am/ContentProviderRecord;
+
+    move-object/from16 v0, v16
+
+    invoke-direct {v0, v14, v11, v12}, Lcom/android/server/am/ContentProviderRecord;-><init>(Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;)V
+    :try_end_19d
+    .catchall {:try_start_196 .. :try_end_19d} :catchall_41
+    .catch Landroid/os/RemoteException; {:try_start_196 .. :try_end_19d} :catch_30c
+
+    move-object/from16 v15, v16
+
+    :cond_19f
+    :goto_19f
+    if-eqz v26, :cond_1ad
+
+    :try_start_1a1
+    move-object/from16 v0, v26
+
+    invoke-virtual {v15, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1ad
+
+    monitor-exit p0
+
+    move-object v2, v15
+
+    goto/16 :goto_86
+
+    :cond_1ad
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v10
+
+    const/16 v19, 0x0
+
+    :goto_1b7
+    move/from16 v0, v19
+
+    if-ge v0, v10, :cond_1c7
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    move/from16 v0, v19
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    if-ne v2, v15, :cond_23a
+
+    :cond_1c7
+    move/from16 v0, v19
+
+    if-lt v0, v10, :cond_27c
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+    :try_end_1ce
+    .catchall {:try_start_1a1 .. :try_end_1ce} :catchall_41
+
+    move-result-wide v22
+
+    :try_start_1cf
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    iget-object v3, v15, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;Z)V
+    :try_end_1db
+    .catchall {:try_start_1cf .. :try_end_1db} :catchall_269
+    .catch Landroid/os/RemoteException; {:try_start_1cf .. :try_end_1db} :catch_309
+    .catch Ljava/lang/IllegalArgumentException; {:try_start_1cf .. :try_end_1db} :catch_23e
+
+    :goto_1db
+    :try_start_1db
+    iget-object v3, v14, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;
+
+    iget-object v4, v15, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const-string v7, "content provider"
+
+    new-instance v8, Landroid/content/ComponentName;
+
+    iget-object v2, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v9, v14, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v8, v2, v9}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v9, 0x0
+
+    move-object/from16 v2, p0
+
+    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;Z)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v24
+
+    if-nez v24, :cond_26e
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unable to launch app "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "/"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " for provider "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": process is bad"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_233
+    .catchall {:try_start_1db .. :try_end_233} :catchall_269
+
+    const/4 v2, 0x0
+
+    :try_start_234
+    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_238
+    .catchall {:try_start_234 .. :try_end_238} :catchall_41
+
+    goto/16 :goto_86
+
+    :cond_23a
+    add-int/lit8 v19, v19, 0x1
+
+    goto/16 :goto_1b7
+
+    :catch_23e
+    move-exception v17
+
+    :try_start_23f
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Failed trying to unstop package "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v15, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_267
+    .catchall {:try_start_23f .. :try_end_267} :catchall_269
+
+    goto/16 :goto_1db
+
+    :catchall_269
+    move-exception v2
+
+    :try_start_26a
+    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v2
+    :try_end_26e
+    .catchall {:try_start_26a .. :try_end_26e} :catchall_41
+
+    :cond_26e
+    :try_start_26e
+    move-object/from16 v0, v24
+
+    iput-object v0, v15, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+    :try_end_279
+    .catchall {:try_start_26e .. :try_end_279} :catchall_269
+
+    :try_start_279
+    invoke-static/range {v22 .. v23}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :cond_27c
+    if-eqz v18, :cond_285
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v12, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_285
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v2, v0, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-virtual {v0, v1, v15}, Lcom/android/server/am/ActivityManagerService;->incProviderCount(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)Z
+
+    :cond_295
+    monitor-exit p0
+    :try_end_296
+    .catchall {:try_start_279 .. :try_end_296} :catchall_41
+
+    monitor-enter v15
+
+    :goto_297
+    :try_start_297
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;
+
+    if-nez v2, :cond_305
+
+    iget-object v2, v15, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v2, :cond_2ff
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unable to launch app "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, "/"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " for provider "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": launching app became null"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v2, 0x7554
+
+    const/4 v3, 0x3
+
+    new-array v3, v3, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    iget-object v5, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x1
+
+    iget-object v5, v14, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x2
+
+    aput-object p2, v3, v4
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    const/4 v2, 0x0
+
+    monitor-exit v15
+
+    goto/16 :goto_86
+
+    :catchall_2fc
+    move-exception v2
+
+    monitor-exit v15
+    :try_end_2fe
+    .catchall {:try_start_297 .. :try_end_2fe} :catchall_2fc
+
+    throw v2
+
+    :cond_2ff
+    :try_start_2ff
+    invoke-virtual {v15}, Ljava/lang/Object;->wait()V
+    :try_end_302
+    .catchall {:try_start_2ff .. :try_end_302} :catchall_2fc
+    .catch Ljava/lang/InterruptedException; {:try_start_2ff .. :try_end_302} :catch_303
+
+    goto :goto_297
+
+    :catch_303
+    move-exception v2
+
+    goto :goto_297
+
+    :cond_305
+    :try_start_305
+    monitor-exit v15
+    :try_end_306
+    .catchall {:try_start_305 .. :try_end_306} :catchall_2fc
+
+    move-object v2, v15
+
+    goto/16 :goto_86
+
+    :catch_309
+    move-exception v2
+
+    goto/16 :goto_1db
+
+    :catch_30c
+    move-exception v2
+
+    goto/16 :goto_19f
+
+    :catch_30f
+    move-exception v2
+
+    goto/16 :goto_110
+.end method
+
+.method private final getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I
+    .registers 6
+
+    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v2
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    add-int/lit8 v0, v3, -0x1
+
+    :goto_c
+    if-ltz v0, :cond_26
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v3, :cond_23
+
+    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v3
+
+    if-ne v3, v2, :cond_23
+
+    :goto_22
+    return v0
+
+    :cond_23
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_c
+
+    :cond_26
+    const/4 v0, -0x1
+
+    goto :goto_22
+.end method
+
+.method private final getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;)Ljava/util/List;
+    .registers 12
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v6}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v5
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    invoke-virtual {v6, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Ljava/util/ArrayList;
+
+    if-nez v4, :cond_12
+
+    move-object v1, p3
+
+    :goto_11
+    return-object v1
+
+    :cond_12
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v2, 0x0
+
+    :goto_17
+    if-ge v2, v0, :cond_35
+
+    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Landroid/content/Intent;
+
+    const/4 v6, 0x1
+
+    const-string v7, "ActivityManager"
+
+    invoke-virtual {p2, v5, v3, v6, v7}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I
+
+    move-result v6
+
+    if-ltz v6, :cond_32
+
+    if-nez p3, :cond_2f
+
+    new-instance p3, Ljava/util/ArrayList;
+
+    invoke-direct {p3}, Ljava/util/ArrayList;-><init>()V
+
+    :cond_2f
+    invoke-interface {p3, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+
+    :cond_32
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_17
+
+    :cond_35
+    move-object v1, p3
+
+    goto :goto_11
+.end method
+
+.method private getUiContext()Landroid/content/Context;
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;
+
+    if-nez v0, :cond_11
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
+
+    if-eqz v0, :cond_11
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-static {v0}, Lcom/android/internal/app/ThemeUtils;->createUiContext(Landroid/content/Context;)Landroid/content/Context;
+
+    move-result-object v0
+
+    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;
+
+    :cond_11
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;
+
+    if-eqz v0, :cond_19
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUiContext:Landroid/content/Context;
+
+    :goto_17
+    monitor-exit p0
+
+    return-object v0
+
+    :cond_19
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    goto :goto_17
+
+    :catchall_1c
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_1e
+    .catchall {:try_start_1 .. :try_end_1e} :catchall_1c
+
+    throw v0
+.end method
+
+.method private handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;)Z
+    .registers 19
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v14
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v5, v6}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Ljava/lang/Long;
+
+    if-eqz v11, :cond_156
+
+    invoke-virtual {v11}, Ljava/lang/Long;->longValue()J
+
+    move-result-wide v5
+
+    const-wide/32 v8, 0xea60
+
+    add-long/2addr v5, v8
+
+    cmp-long v2, v14, v5
+
+    if-gez v2, :cond_156
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Process "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, p1
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " has crashed too many times: killing!"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v2, 0x7550
+
+    const/4 v5, 0x2
+
+    new-array v5, v5, [Ljava/lang/Object;
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p1
+
+    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    aput-object v8, v5, v6
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, p1
+
+    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    aput-object v8, v5, v6
+
+    invoke-static {v2, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v4, v2, -0x1
+
+    :goto_76
+    if-ltz v4, :cond_b8
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v2, v0, :cond_b5
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "  Force finishing activity "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const-string v7, "crashed"
+
+    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    :cond_b5
+    add-int/lit8 v4, v4, -0x1
+
+    goto :goto_76
+
+    :cond_b8
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v2, :cond_125
+
+    const/16 v2, 0x753f
+
+    const/4 v5, 0x2
+
+    new-array v5, v5, [Ljava/lang/Object;
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p1
+
+    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    aput-object v8, v5, v6
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, p1
+
+    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    aput-object v8, v5, v6
+
+    invoke-static {v2, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v14, v15}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v8
+
+    invoke-virtual {v2, v5, v6, v8}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->bad:Z
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v5, v6}, Lcom/android/server/ProcessMap;->remove(Ljava/lang/String;I)V
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    const/4 v2, 0x0
+
+    const/4 v5, 0x0
+
+    const-string v6, "crash"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    invoke-direct {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    const/4 v2, 0x0
+
+    :goto_124
+    return v2
+
+    :cond_125
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    :cond_12d
+    :goto_12d
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->size()I
+
+    move-result v2
+
+    if-eqz v2, :cond_1f5
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v13
+
+    :goto_13f
+    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1f5
+
+    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v16
+
+    iget v2, v0, Lcom/android/server/am/ServiceRecord;->crashCount:I
+
+    add-int/lit8 v2, v2, 0x1
+
+    move-object/from16 v0, v16
+
+    iput v2, v0, Lcom/android/server/am/ServiceRecord;->crashCount:I
+
+    goto :goto_13f
+
+    :cond_156
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v2, v5}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v3
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v2, v0, :cond_12d
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "  Force finishing activity "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityStack;->indexOfActivityLocked(Lcom/android/server/am/ActivityRecord;)I
+
+    move-result v7
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const-string v10, "crashed"
+
+    move-object v6, v3
+
+    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    add-int/lit8 v7, v7, -0x1
+
+    if-ltz v7, :cond_12d
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v2, v5, :cond_1bb
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v2, v5, :cond_1bb
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSED:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-ne v2, v5, :cond_12d
+
+    :cond_1bb
+    iget-boolean v2, v3, Lcom/android/server/am/ActivityRecord;->isHomeActivity:Z
+
+    if-eqz v2, :cond_1c7
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eq v2, v5, :cond_12d
+
+    :cond_1c7
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "  Force finishing activity "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const-string v10, "crashed"
+
+    move-object v6, v3
+
+    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    goto/16 :goto_12d
+
+    :cond_1f5
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p1
+
+    if-ne v0, v2, :cond_255
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_255
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v2, v2, 0x1
+
+    if-nez v2, :cond_255
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;
+
+    move-result-object v12
+
+    :cond_21f
+    :goto_21f
+    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_255
+
+    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-boolean v2, v3, Lcom/android/server/am/ActivityRecord;->isHomeActivity:Z
+
+    if-eqz v2, :cond_21f
+
+    const-string v2, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Clearing package preferred activities from "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v2, v5}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :try_start_249
+    invoke-static {}, Landroid/app/ActivityThread;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    invoke-interface {v2, v5}, Landroid/content/pm/IPackageManager;->clearPackagePreferredActivities(Ljava/lang/String;)V
+    :try_end_252
+    .catch Landroid/os/RemoteException; {:try_start_249 .. :try_end_252} :catch_253
+
+    goto :goto_21f
+
+    :catch_253
+    move-exception v2
+
+    goto :goto_21f
+
+    :cond_255
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v14, v15}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v8
+
+    invoke-virtual {v2, v5, v6, v8}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    const/4 v2, 0x1
+
+    goto/16 :goto_124
+.end method
+
+.method private final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+    .registers 16
+
+    const/4 v11, 0x1
+
+    const/4 v10, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v5, -0x1
+
+    invoke-direct {p0, p1, p2, p3, v5}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+
+    if-nez p2, :cond_e
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    :cond_e
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v5, p1, :cond_15
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V
+
+    :cond_15
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v5, :cond_27
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v5, p1, :cond_27
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iput-object v9, v5, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    :cond_27
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mLastPausedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v5, :cond_39
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mLastPausedActivity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v5, p1, :cond_39
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iput-object v9, v5, Lcom/android/server/am/ActivityStack;->mLastPausedActivity:Lcom/android/server/am/ActivityRecord;
+
+    :cond_39
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5, p1}, Lcom/android/server/am/ActivityStack;->removeHistoryRecordsForAppLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    const/4 v0, 0x1
+
+    const/4 v1, 0x0
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    :goto_48
+    if-lez v2, :cond_ca
+
+    add-int/lit8 v2, v2, -0x1
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v5, p1, :cond_b8
+
+    iget-boolean v5, v4, Lcom/android/server/am/ActivityRecord;->haveState:Z
+
+    if-nez v5, :cond_62
+
+    iget-boolean v5, v4, Lcom/android/server/am/ActivityRecord;->stateNotNeeded:Z
+
+    if-eqz v5, :cond_66
+
+    :cond_62
+    iget-boolean v5, v4, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-eqz v5, :cond_ba
+
+    :cond_66
+    iget-boolean v5, v4, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-nez v5, :cond_ae
+
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Force removing "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, ": app died, no saved state"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v5, 0x7531
+
+    const/4 v6, 0x4
+
+    new-array v6, v6, [Ljava/lang/Object;
+
+    invoke-static {v4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v7
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v6, v10
+
+    iget-object v7, v4, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget v7, v7, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v6, v11
+
+    const/4 v7, 0x2
+
+    iget-object v8, v4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    aput-object v8, v6, v7
+
+    const/4 v7, 0x3
+
+    const-string v8, "proc died without state saved"
+
+    aput-object v8, v6, v7
+
+    invoke-static {v5, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    :cond_ae
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5, v4}, Lcom/android/server/am/ActivityStack;->removeActivityFromHistoryLocked(Lcom/android/server/am/ActivityRecord;)V
+
+    :cond_b3
+    :goto_b3
+    iget-object v5, v4, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5, v4, v11, v11}, Lcom/android/server/am/ActivityStack;->cleanUpActivityLocked(Lcom/android/server/am/ActivityRecord;ZZ)V
+
+    :cond_b8
+    const/4 v0, 0x0
+
+    goto :goto_48
+
+    :cond_ba
+    iget-boolean v5, v4, Lcom/android/server/am/ActivityRecord;->visible:Z
+
+    if-eqz v5, :cond_bf
+
+    const/4 v1, 0x1
+
+    :cond_bf
+    iput-object v9, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iput-boolean v10, v4, Lcom/android/server/am/ActivityRecord;->nowVisible:Z
+
+    iget-boolean v5, v4, Lcom/android/server/am/ActivityRecord;->haveState:Z
+
+    if-nez v5, :cond_b3
+
+    iput-object v9, v4, Lcom/android/server/am/ActivityRecord;->icicle:Landroid/os/Bundle;
+
+    goto :goto_b3
+
+    :cond_ca
+    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->clear()V
+
+    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    if-eqz v5, :cond_108
+
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Crash of app "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " running instrumentation "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v3, Landroid/os/Bundle;
+
+    invoke-direct {v3}, Landroid/os/Bundle;-><init>()V
+
+    const-string v5, "shortMsg"
+
+    const-string v6, "Process crashed."
+
+    invoke-virtual {v3, v5, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-virtual {p0, p1, v10, v3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
+
+    :cond_108
+    if-nez p2, :cond_119
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5, v9}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    move-result v5
+
+    if-nez v5, :cond_119
+
+    if-eqz v1, :cond_119
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5, v9, v10}, Lcom/android/server/am/ActivityStack;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V
+
+    :cond_119
+    return-void
+.end method
+
+.method public static final installSystemProviders()V
+    .registers 8
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    monitor-enter v5
+
+    :try_start_3
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    const-string v6, "system"
+
+    const/16 v7, 0x3e8
+
+    invoke-virtual {v4, v6, v7}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    invoke-direct {v4, v0}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_55
+
+    invoke-interface {v3}, Ljava/util/List;->size()I
+
+    move-result v4
+
+    add-int/lit8 v1, v4, -0x1
+
+    :goto_1f
+    if-ltz v1, :cond_55
+
+    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/pm/ProviderInfo;
+
+    iget-object v4, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v4, v4, 0x1
+
+    if-nez v4, :cond_52
+
+    const-string v4, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Not installing system proc provider "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, ": not system .apk"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-interface {v3, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;
+
+    :cond_52
+    add-int/lit8 v1, v1, -0x1
+
+    goto :goto_1f
+
+    :cond_55
+    monitor-exit v5
+    :try_end_56
+    .catchall {:try_start_3 .. :try_end_56} :catchall_70
+
+    if-eqz v3, :cond_5d
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;
+
+    invoke-virtual {v4, v3}, Landroid/app/ActivityThread;->installSystemProviders(Ljava/util/List;)V
+
+    :cond_5d
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    new-instance v5, Lcom/android/server/am/CoreSettingsObserver;
+
+    sget-object v6, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    invoke-direct {v5, v6}, Lcom/android/server/am/CoreSettingsObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    iput-object v5, v4, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+    invoke-virtual {v4}, Lcom/android/server/am/UsageStatsService;->monitorPackages()V
+
+    return-void
+
+    :catchall_70
+    move-exception v4
+
+    :try_start_71
+    monitor-exit v5
+    :try_end_72
+    .catchall {:try_start_71 .. :try_end_72} :catchall_70
+
+    throw v4
+.end method
+
+.method private final killPackageProcessesLocked(Ljava/lang/String;IIZZZZLjava/lang/String;)Z
+    .registers 23
+
+    new-instance v11, Ljava/util/ArrayList;
+
+    invoke-direct {v11}, Ljava/util/ArrayList;-><init>()V
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, ":"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v12}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v12
+
+    invoke-interface {v12}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v8
+
+    :cond_26
+    invoke-interface {v8}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v12
+
+    if-eqz v12, :cond_83
+
+    invoke-interface {v8}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Landroid/util/SparseArray;
+
+    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I
+
+    move-result v4
+
+    const/4 v9, 0x0
+
+    :goto_37
+    if-ge v9, v4, :cond_26
+
+    invoke-virtual {v6, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v12, v5, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v12, :cond_48
+
+    if-nez p7, :cond_48
+
+    :cond_45
+    :goto_45
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_37
+
+    :cond_48
+    iget-boolean v12, v5, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    if-eqz v12, :cond_52
+
+    if-eqz p6, :cond_45
+
+    invoke-virtual {v11, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_45
+
+    :cond_52
+    if-lez p2, :cond_62
+
+    const/16 v12, 0x3e8
+
+    move/from16 v0, p2
+
+    if-eq v0, v12, :cond_62
+
+    iget-object v12, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move/from16 v0, p2
+
+    if-eq v12, v0, :cond_72
+
+    :cond_62
+    iget-object v12, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v12, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v12
+
+    if-nez v12, :cond_72
+
+    iget-object v12, v5, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v12, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z
+
+    move-result v12
+
+    if-eqz v12, :cond_45
+
+    :cond_72
+    iget v12, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v0, p3
+
+    if-lt v12, v0, :cond_45
+
+    if-nez p6, :cond_7c
+
+    const/4 v12, 0x1
+
+    :goto_7b
+    return v12
+
+    :cond_7c
+    const/4 v12, 0x1
+
+    iput-boolean v12, v5, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    invoke-virtual {v11, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_45
+
+    :cond_83
+    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    const/4 v7, 0x0
+
+    :goto_88
+    if-ge v7, v3, :cond_9c
+
+    invoke-virtual {v11, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Lcom/android/server/am/ProcessRecord;
+
+    move/from16 v0, p4
+
+    move/from16 v1, p5
+
+    move-object/from16 v2, p8
+
+    invoke-direct {p0, v12, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
+
+    add-int/lit8 v7, v7, 0x1
+
+    goto :goto_88
+
+    :cond_9c
+    if-lez v3, :cond_a0
+
+    const/4 v12, 0x1
+
+    goto :goto_7b
+
+    :cond_a0
+    const/4 v12, 0x0
+
+    goto :goto_7b
+.end method
+
+.method private final killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V
+    .registers 16
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_1f
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v5
+
+    :goto_e
+    invoke-interface {v5}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_1f
+
+    invoke-interface {v5}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Lcom/android/server/am/ConnectionRecord;
+
+    const/4 v9, 0x0
+
+    invoke-virtual {p0, v7, p1, v9}, Lcom/android/server/am/ActivityManagerService;->removeConnectionLocked(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;)V
+
+    goto :goto_e
+
+    :cond_1f
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->size()I
+
+    move-result v9
+
+    if-eqz v9, :cond_113
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v6
+
+    :cond_32
+    :goto_32
+    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_10c
+
+    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v8
+
+    check-cast v8, Lcom/android/server/am/ServiceRecord;
+
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v10
+
+    monitor-enter v10
+
+    :try_start_45
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->stopLaunchedLocked()V
+
+    monitor-exit v10
+    :try_end_4b
+    .catchall {:try_start_45 .. :try_end_4b} :catchall_85
+
+    const/4 v9, 0x0
+
+    iput-object v9, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v9, 0x0
+
+    iput v9, v8, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    move-result v9
+
+    if-eqz v9, :cond_59
+
+    :cond_59
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_88
+
+    const/4 v3, 0x1
+
+    :goto_62
+    if-eqz v3, :cond_8a
+
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v9}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v9
+
+    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v1
+
+    :goto_6e
+    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_8a
+
+    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/IntentBindRecord;
+
+    const/4 v9, 0x0
+
+    iput-object v9, v0, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, v0, Lcom/android/server/am/IntentBindRecord;->hasBound:Z
+
+    iput-boolean v9, v0, Lcom/android/server/am/IntentBindRecord;->received:Z
+
+    iput-boolean v9, v0, Lcom/android/server/am/IntentBindRecord;->requested:Z
+
+    goto :goto_6e
+
+    :catchall_85
+    move-exception v9
+
+    :try_start_86
+    monitor-exit v10
+    :try_end_87
+    .catchall {:try_start_86 .. :try_end_87} :catchall_85
+
+    throw v9
+
+    :cond_88
+    const/4 v3, 0x0
+
+    goto :goto_62
+
+    :cond_8a
+    iget v9, v8, Lcom/android/server/am/ServiceRecord;->crashCount:I
+
+    const/4 v10, 0x2
+
+    if-lt v9, v10, :cond_e2
+
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    iget-object v9, v9, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v9, v9, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v9, v9, 0x8
+
+    if-nez v9, :cond_e2
+
+    const-string v9, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Service crashed "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    iget v11, v8, Lcom/android/server/am/ServiceRecord;->crashCount:I
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, " times, stopping: "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v9, 0x7552
+
+    const/4 v10, 0x3
+
+    new-array v10, v10, [Ljava/lang/Object;
+
+    const/4 v11, 0x0
+
+    iget v12, v8, Lcom/android/server/am/ServiceRecord;->crashCount:I
+
+    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v12
+
+    aput-object v12, v10, v11
+
+    const/4 v11, 0x1
+
+    iget-object v12, v8, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    aput-object v12, v10, v11
+
+    const/4 v11, 0x2
+
+    iget v12, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v12
+
+    aput-object v12, v10, v11
+
+    invoke-static {v9, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    const/4 v9, 0x1
+
+    invoke-direct {p0, v8, v9}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto/16 :goto_32
+
+    :cond_e2
+    if-nez p2, :cond_ea
+
+    const/4 v9, 0x1
+
+    invoke-direct {p0, v8, v9}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto/16 :goto_32
+
+    :cond_ea
+    const/4 v9, 0x1
+
+    invoke-direct {p0, v8, v9}, Lcom/android/server/am/ActivityManagerService;->scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z
+
+    move-result v2
+
+    iget-boolean v9, v8, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-eqz v9, :cond_32
+
+    iget-boolean v9, v8, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z
+
+    if-nez v9, :cond_f9
+
+    if-eqz v2, :cond_32
+
+    :cond_f9
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I
+
+    move-result v9
+
+    if-nez v9, :cond_32
+
+    const/4 v9, 0x0
+
+    iput-boolean v9, v8, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-nez v3, :cond_32
+
+    const/4 v9, 0x1
+
+    invoke-direct {p0, v8, v9}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto/16 :goto_32
+
+    :cond_10c
+    if-nez p2, :cond_113
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V
+
+    :cond_113
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I
+
+    move-result v4
+
+    :cond_119
+    :goto_119
+    if-lez v4, :cond_12f
+
+    add-int/lit8 v4, v4, -0x1
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v8
+
+    check-cast v8, Lcom/android/server/am/ServiceRecord;
+
+    iget-object v9, v8, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v9, p1, :cond_119
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    goto :goto_119
+
+    :cond_12f
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V
+
+    return-void
+.end method
+
+.method private final logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V
+    .registers 12
+
+    const/4 v9, 0x4
+
+    const/4 v8, 0x3
+
+    const/4 v7, 0x2
+
+    const/4 v6, 0x1
+
+    const/4 v5, 0x0
+
+    iget v2, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    if-lez v2, :cond_74
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    iget v3, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    add-int/lit8 v3, v3, -0x1
+
+    invoke-interface {v2, v3}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    instance-of v2, v1, Lcom/android/server/am/BroadcastFilter;
+
+    if-eqz v2, :cond_48
+
+    move-object v0, v1
+
+    check-cast v0, Lcom/android/server/am/BroadcastFilter;
+
+    const/16 v2, 0x7548
+
+    new-array v3, v9, [Ljava/lang/Object;
+
+    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v5
+
+    iget-object v4, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v4}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v4
+
+    aput-object v4, v3, v6
+
+    iget v4, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    add-int/lit8 v4, v4, -0x1
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v7
+
+    invoke-static {v0}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v8
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    :goto_47
+    return-void
+
+    :cond_48
+    const/16 v2, 0x7549
+
+    new-array v3, v9, [Ljava/lang/Object;
+
+    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v5
+
+    iget-object v4, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v4}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v4
+
+    aput-object v4, v3, v6
+
+    iget v4, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    add-int/lit8 v4, v4, -0x1
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v7
+
+    check-cast v1, Landroid/content/pm/ResolveInfo;
+
+    invoke-virtual {v1}, Landroid/content/pm/ResolveInfo;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    aput-object v4, v3, v8
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    goto :goto_47
+
+    :cond_74
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Discarding broadcast before first receiver is invoked: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v2, 0x7549
+
+    new-array v3, v9, [Ljava/lang/Object;
+
+    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v5
+
+    iget-object v4, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v4}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v4
+
+    aput-object v4, v3, v6
+
+    iget v4, p1, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v3, v7
+
+    const-string v4, "NONE"
+
+    aput-object v4, v3, v8
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    goto :goto_47
+.end method
+
+.method private logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
+    .registers 21
+
+    if-nez p2, :cond_3
+
+    :cond_2
+    :goto_2
+    return-void
+
+    :cond_3
+    if-eqz p1, :cond_f
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit16 v2, v2, 0x81
+
+    if-eqz v2, :cond_118
+
+    :cond_f
+    const/4 v11, 0x1
+
+    :goto_10
+    if-nez p1, :cond_11b
+
+    const-string v14, "unknown"
+
+    :goto_14
+    if-eqz v11, :cond_121
+
+    const-string v7, "system_app_strictmode"
+
+    :goto_18
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    const-string v3, "dropbox"
+
+    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Landroid/os/DropBoxManager;
+
+    if-eqz v6, :cond_2
+
+    invoke-virtual {v6, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_2
+
+    if-eqz v11, :cond_125
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;
+
+    :goto_32
+    monitor-enter v5
+
+    :try_start_33
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I
+
+    move-result v2
+
+    if-nez v2, :cond_12e
+
+    const/4 v9, 0x1
+
+    :goto_3a
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    invoke-direct {v0, v1, v14, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
+
+    const-string v2, "Build: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    sget-object v3, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v2, "System-App: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v2, "Uptime-Millis: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget-wide v3, v0, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J
+
+    invoke-virtual {v2, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p2
+
+    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I
+
+    if-eqz v2, :cond_8d
+
+    const-string v2, "Loop-Violation-Number: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_8d
+    move-object/from16 v0, p2
+
+    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I
+
+    if-eqz v2, :cond_a6
+
+    const-string v2, "Animations-Running: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_a6
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;
+
+    if-eqz v2, :cond_bf
+
+    const-string v2, "Broadcast-Intent-Action: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget-object v3, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_bf
+    move-object/from16 v0, p2
+
+    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I
+
+    const/4 v3, -0x1
+
+    if-eq v2, v3, :cond_d9
+
+    const-string v2, "Duration-Millis: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_d9
+    move-object/from16 v0, p2
+
+    iget-wide v2, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J
+
+    const-wide/16 v16, -0x1
+
+    cmp-long v2, v2, v16
+
+    if-eqz v2, :cond_f6
+
+    const-string v2, "Instance-Count: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget-wide v3, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J
+
+    invoke-virtual {v2, v3, v4}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_f6
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;
+
+    if-eqz v2, :cond_131
+
+    move-object/from16 v0, p2
+
+    iget-object v8, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;
+
+    array-length v12, v8
+
+    const/4 v10, 0x0
+
+    :goto_102
+    if-ge v10, v12, :cond_131
+
+    aget-object v15, v8, v10
+
+    const-string v2, "Span-Tag: "
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+    :try_end_115
+    .catchall {:try_start_33 .. :try_end_115} :catchall_181
+
+    add-int/lit8 v10, v10, 0x1
+
+    goto :goto_102
+
+    :cond_118
+    const/4 v11, 0x0
+
+    goto/16 :goto_10
+
+    :cond_11b
+    move-object/from16 v0, p1
+
+    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    goto/16 :goto_14
+
+    :cond_121
+    const-string v7, "data_app_strictmode"
+
+    goto/16 :goto_18
+
+    :cond_125
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    const/16 v2, 0x400
+
+    invoke-direct {v5, v2}, Ljava/lang/StringBuilder;-><init>(I)V
+
+    goto/16 :goto_32
+
+    :cond_12e
+    const/4 v9, 0x0
+
+    goto/16 :goto_3a
+
+    :cond_131
+    :try_start_131
+    const-string v2, "\n"
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;
+
+    if-eqz v2, :cond_14d
+
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;
+
+    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;
+
+    if-eqz v2, :cond_14d
+
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;
+
+    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_14d
+    const-string v2, "\n"
+
+    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I
+
+    move-result v2
+
+    const/high16 v3, 0x1
+
+    if-le v2, v3, :cond_17f
+
+    const/4 v13, 0x1
+
+    :goto_15b
+    monitor-exit v5
+    :try_end_15c
+    .catchall {:try_start_131 .. :try_end_15c} :catchall_181
+
+    if-eqz v11, :cond_160
+
+    if-eqz v13, :cond_184
+
+    :cond_160
+    new-instance v2, Lcom/android/server/am/ActivityManagerService$10;
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Error dump: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/StringBuilder;Landroid/os/DropBoxManager;Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$10;->start()V
+
+    goto/16 :goto_2
+
+    :cond_17f
+    const/4 v13, 0x0
+
+    goto :goto_15b
+
+    :catchall_181
+    move-exception v2
+
+    :try_start_182
+    monitor-exit v5
+    :try_end_183
+    .catchall {:try_start_182 .. :try_end_183} :catchall_181
+
+    throw v2
+
+    :cond_184
+    if-eqz v9, :cond_2
+
+    new-instance v2, Lcom/android/server/am/ActivityManagerService$11;
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Error dump: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v2, v0, v3, v6, v7}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/os/DropBoxManager;Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$11;->start()V
+
+    goto/16 :goto_2
+.end method
+
+.method public static final main(I)Landroid/content/Context;
+    .registers 8
+
+    const/4 v6, 0x1
+
+    const/4 v5, 0x0
+
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$AThread;
+
+    invoke-direct {v3}, Lcom/android/server/am/ActivityManagerService$AThread;-><init>()V
+
+    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$AThread;->start()V
+
+    monitor-enter v3
+
+    :goto_b
+    :try_start_b
+    iget-object v4, v3, Lcom/android/server/am/ActivityManagerService$AThread;->mService:Lcom/android/server/am/ActivityManagerService;
+    :try_end_d
+    .catchall {:try_start_b .. :try_end_d} :catchall_4b
+
+    if-nez v4, :cond_15
+
+    :try_start_f
+    invoke-virtual {v3}, Ljava/lang/Object;->wait()V
+    :try_end_12
+    .catchall {:try_start_f .. :try_end_12} :catchall_4b
+    .catch Ljava/lang/InterruptedException; {:try_start_f .. :try_end_12} :catch_13
+
+    goto :goto_b
+
+    :catch_13
+    move-exception v4
+
+    goto :goto_b
+
+    :cond_15
+    :try_start_15
+    monitor-exit v3
+    :try_end_16
+    .catchall {:try_start_15 .. :try_end_16} :catchall_4b
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityManagerService$AThread;->mService:Lcom/android/server/am/ActivityManagerService;
+
+    sput-object v2, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    invoke-static {}, Landroid/app/ActivityThread;->systemMain()Landroid/app/ActivityThread;
+
+    move-result-object v0
+
+    sput-object v0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;
+
+    invoke-virtual {v0}, Landroid/app/ActivityThread;->getSystemContext()Landroid/app/ContextImpl;
+
+    move-result-object v1
+
+    const v4, 0x103006b
+
+    invoke-virtual {v1, v4}, Landroid/content/Context;->setTheme(I)V
+
+    iput-object v1, v2, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    iput p0, v2, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    new-instance v4, Lcom/android/server/am/ActivityStack;
+
+    invoke-direct {v4, v2, v1, v6}, Lcom/android/server/am/ActivityStack;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;Z)V
+
+    iput-object v4, v2, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v4, v2, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v4, v1}, Lcom/android/server/am/BatteryStatsService;->publish(Landroid/content/Context;)V
+
+    iget-object v4, v2, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+    invoke-virtual {v4, v1}, Lcom/android/server/am/UsageStatsService;->publish(Landroid/content/Context;)V
+
+    monitor-enter v3
+
+    const/4 v4, 0x1
+
+    :try_start_41
+    iput-boolean v4, v3, Lcom/android/server/am/ActivityManagerService$AThread;->mReady:Z
+
+    invoke-virtual {v3}, Ljava/lang/Object;->notifyAll()V
+
+    monitor-exit v3
+    :try_end_47
+    .catchall {:try_start_41 .. :try_end_47} :catchall_4e
+
+    invoke-virtual {v2, v5, v5, v5, v5}, Lcom/android/server/am/ActivityManagerService;->startRunning(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+
+    return-object v1
+
+    :catchall_4b
+    move-exception v4
+
+    :try_start_4c
+    monitor-exit v3
+    :try_end_4d
+    .catchall {:try_start_4c .. :try_end_4d} :catchall_4b
+
+    throw v4
+
+    :catchall_4e
+    move-exception v4
+
+    :try_start_4f
+    monitor-exit v3
+    :try_end_50
+    .catchall {:try_start_4f .. :try_end_50} :catchall_4e
+
+    throw v4
+.end method
+
+.method private makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
+    .registers 12
+
+    const/4 v2, 0x1
+
+    iput-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    const/4 v3, 0x0
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move-object v4, p2
+
+    move-object v5, p3
+
+    move-object v6, p4
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    move-result-object v0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    move-result v0
+
+    return v0
+.end method
+
+.method private makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+    .registers 12
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    const/4 v2, 0x2
+
+    const/4 v6, 0x0
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move-object v3, p2
+
+    move-object v4, p3
+
+    move-object v5, p4
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    move-result-object v0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V
+
+    return-void
+.end method
+
+.method private final moveTaskBackwardsLocked(I)V
+    .registers 4
+
+    const-string v0, "ActivityManager"
+
+    const-string v1, "moveTaskBackwards not yet implemented!"
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    return-void
+.end method
+
+.method static oomAdjToImportance(ILandroid/app/ActivityManager$RunningAppProcessInfo;)I
+    .registers 5
+
+    const/16 v0, 0x190
+
+    const/16 v1, 0x12c
+
+    sget v2, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt p0, v2, :cond_13
+
+    if-eqz p1, :cond_12
+
+    sget v1, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    sub-int v1, p0, v1
+
+    add-int/lit8 v1, v1, 0x1
+
+    iput v1, p1, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I
+
+    :cond_12
+    :goto_12
+    return v0
+
+    :cond_13
+    const/16 v2, 0x8
+
+    if-lt p0, v2, :cond_19
+
+    move v0, v1
+
+    goto :goto_12
+
+    :cond_19
+    const/4 v2, 0x6
+
+    if-lt p0, v2, :cond_22
+
+    if-eqz p1, :cond_12
+
+    const/4 v1, 0x0
+
+    iput v1, p1, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I
+
+    goto :goto_12
+
+    :cond_22
+    const/4 v0, 0x5
+
+    if-lt p0, v0, :cond_27
+
+    move v0, v1
+
+    goto :goto_12
+
+    :cond_27
+    const/4 v0, 0x3
+
+    if-lt p0, v0, :cond_2d
+
+    const/16 v0, 0xaa
+
+    goto :goto_12
+
+    :cond_2d
+    const/4 v0, 0x2
+
+    if-lt p0, v0, :cond_33
+
+    const/16 v0, 0x82
+
+    goto :goto_12
+
+    :cond_33
+    const/4 v0, 0x1
+
+    if-lt p0, v0, :cond_39
+
+    const/16 v0, 0xc8
+
+    goto :goto_12
+
+    :cond_39
+    const/16 v0, 0x64
+
+    goto :goto_12
+.end method
+
+.method static performReceiveLocked(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZ)V
+    .registers 16
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    if-eqz p0, :cond_13
+
+    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v0, :cond_13
+
+    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move v3, p3
+
+    move-object v4, p4
+
+    move-object v5, p5
+
+    move v6, p6
+
+    move v7, p7
+
+    invoke-interface/range {v0 .. v7}, Landroid/app/IApplicationThread;->scheduleRegisteredReceiver(Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZ)V
+
+    :goto_12
+    return-void
+
+    :cond_13
+    invoke-interface/range {p1 .. p7}, Landroid/content/IIntentReceiver;->performReceive(Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZ)V
+
+    goto :goto_12
+.end method
+
+.method private static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
+    .registers 3
+
+    if-eqz p0, :cond_8
+
+    iget v0, p0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-ne v0, v1, :cond_b
+
+    :cond_8
+    const-string v0, "system_server"
+
+    :goto_a
+    return-object v0
+
+    :cond_b
+    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v0, v0, 0x1
+
+    if-eqz v0, :cond_16
+
+    const-string v0, "system_app"
+
+    goto :goto_a
+
+    :cond_16
+    const-string v0, "data_app"
+
+    goto :goto_a
+.end method
+
+.method private final processCurBroadcastLocked(Lcom/android/server/am/BroadcastRecord;Lcom/android/server/am/ProcessRecord;)V
+    .registers 13
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v1, 0x1
+
+    const/4 v9, 0x0
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v0, :cond_c
+
+    new-instance v0, Landroid/os/RemoteException;
+
+    invoke-direct {v0}, Landroid/os/RemoteException;-><init>()V
+
+    throw v0
+
+    :cond_c
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v0}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    iput-object v0, p1, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iput-object p2, p1, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iput-object p1, p2, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    invoke-virtual {p0, p2, v1, v1}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    iget-object v0, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    iget-object v1, p1, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    const/4 v8, 0x0
+
+    :try_start_23
+    iget-object v0, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v0}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    new-instance v1, Landroid/content/Intent;
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    iget-object v2, p1, Lcom/android/server/am/BroadcastRecord;->curReceiver:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, p1, Lcom/android/server/am/BroadcastRecord;->curReceiver:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v3
+
+    iget v4, p1, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    iget-object v5, p1, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    iget-object v6, p1, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    iget-boolean v7, p1, Lcom/android/server/am/BroadcastRecord;->ordered:Z
+
+    invoke-interface/range {v0 .. v7}, Landroid/app/IApplicationThread;->scheduleReceiver(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Landroid/content/res/CompatibilityInfo;ILjava/lang/String;Landroid/os/Bundle;Z)V
+    :try_end_4e
+    .catchall {:try_start_23 .. :try_end_4e} :catchall_58
+
+    const/4 v8, 0x1
+
+    if-nez v8, :cond_57
+
+    iput-object v9, p1, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iput-object v9, p1, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v9, p2, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    :cond_57
+    return-void
+
+    :catchall_58
+    move-exception v0
+
+    if-nez v8, :cond_61
+
+    iput-object v9, p1, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iput-object v9, p1, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v9, p2, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    :cond_61
+    throw v0
+.end method
+
+.method private final processNextBroadcast(Z)V
+    .registers 34
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V
+
+    if-eqz p1, :cond_b
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastsScheduled:Z
+
+    :cond_b
+    :goto_b
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    if-lez v3, :cond_62
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    move-result-object v26
+
+    check-cast v26, Lcom/android/server/am/BroadcastRecord;
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v5
+
+    move-object/from16 v0, v26
+
+    iput-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->dispatchTime:J
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v5
+
+    move-object/from16 v0, v26
+
+    iput-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->dispatchClockTime:J
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    invoke-interface {v3}, Ljava/util/List;->size()I
+
+    move-result v12
+
+    const/16 v17, 0x0
+
+    :goto_3a
+    move/from16 v0, v17
+
+    if-ge v0, v12, :cond_57
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    move/from16 v0, v17
+
+    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v29
+
+    check-cast v29, Lcom/android/server/am/BroadcastFilter;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    move-object/from16 v2, v29
+
+    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->deliverToRegisteredReceiverLocked(Lcom/android/server/am/BroadcastRecord;Lcom/android/server/am/BroadcastFilter;Z)V
+
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_3a
+
+    :cond_57
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addBroadcastToHistoryLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    goto :goto_b
+
+    :catchall_5f
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_61
+    .catchall {:try_start_1 .. :try_end_61} :catchall_5f
+
+    throw v3
+
+    :cond_62
+    :try_start_62
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v3, :cond_c6
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v5
+    :try_end_6d
+    .catchall {:try_start_62 .. :try_end_6d} :catchall_5f
+
+    :try_start_6d
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move-object/from16 v0, p0
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iget v6, v6, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v3, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    if-nez v3, :cond_86
+
+    const/16 v19, 0x1
+
+    :goto_81
+    monitor-exit v5
+    :try_end_82
+    .catchall {:try_start_6d .. :try_end_82} :catchall_89
+
+    if-nez v19, :cond_8c
+
+    :try_start_84
+    monitor-exit p0
+    :try_end_85
+    .catchall {:try_start_84 .. :try_end_85} :catchall_5f
+
+    :goto_85
+    return-void
+
+    :cond_86
+    const/16 v19, 0x0
+
+    goto :goto_81
+
+    :catchall_89
+    move-exception v3
+
+    :try_start_8a
+    monitor-exit v5
+    :try_end_8b
+    .catchall {:try_start_8a .. :try_end_8b} :catchall_89
+
+    :try_start_8b
+    throw v3
+
+    :cond_8c
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "pending app "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, p0
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " died before responding to broadcast"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    const/4 v5, 0x0
+
+    iput v5, v3, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    move-object/from16 v0, p0
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastRecvIndex:I
+
+    iput v5, v3, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    :cond_c6
+    const/16 v20, 0x0
+
+    :cond_c8
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    if-nez v3, :cond_dc
+
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V
+
+    if-eqz v20, :cond_da
+
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_da
+    monitor-exit p0
+
+    goto :goto_85
+
+    :cond_dc
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v26
+
+    check-cast v26, Lcom/android/server/am/BroadcastRecord;
+
+    const/16 v16, 0x0
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    if-eqz v3, :cond_19d
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    invoke-interface {v3}, Ljava/util/List;->size()I
+
+    move-result v24
+
+    :goto_f7
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-eqz v3, :cond_194
+
+    move-object/from16 v0, v26
+
+    iget-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->dispatchTime:J
+
+    const-wide/16 v7, 0x0
+
+    cmp-long v3, v5, v7
+
+    if-lez v3, :cond_194
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v22
+
+    if-lez v24, :cond_194
+
+    move-object/from16 v0, v26
+
+    iget-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->dispatchTime:J
+
+    move/from16 v0, v24
+
+    mul-int/lit16 v3, v0, 0x4e20
+
+    int-to-long v7, v3
+
+    add-long/2addr v5, v7
+
+    cmp-long v3, v22, v5
+
+    if-lez v3, :cond_194
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Hung broadcast discarded after timeout failure: now="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-wide/from16 v0, v22
+
+    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " dispatchTime="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-wide v6, v0, Lcom/android/server/am/BroadcastRecord;->dispatchTime:J
+
+    invoke-virtual {v5, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " startTime="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-wide v6, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    invoke-virtual {v5, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " intent="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " numReceivers="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move/from16 v0, v24
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " nextReceiver="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " state="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v3}, Lcom/android/server/am/ActivityManagerService;->broadcastTimeoutLocked(Z)V
+
+    const/16 v16, 0x1
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    :cond_194
+    move-object/from16 v0, v26
+
+    iget v3, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    if-eqz v3, :cond_1a1
+
+    monitor-exit p0
+
+    goto/16 :goto_85
+
+    :cond_19d
+    const/16 v24, 0x0
+
+    goto/16 :goto_f7
+
+    :cond_1a1
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    if-eqz v3, :cond_1b7
+
+    move-object/from16 v0, v26
+
+    iget v3, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    move/from16 v0, v24
+
+    if-ge v3, v0, :cond_1b7
+
+    move-object/from16 v0, v26
+
+    iget-boolean v3, v0, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    if-nez v3, :cond_1b7
+
+    if-eqz v16, :cond_1fa
+
+    :cond_1b7
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;
+    :try_end_1bb
+    .catchall {:try_start_8b .. :try_end_1bb} :catchall_5f
+
+    if-eqz v3, :cond_1e4
+
+    :try_start_1bd
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->callerApp:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v26
+
+    iget-object v4, v0, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;
+
+    new-instance v5, Landroid/content/Intent;
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-direct {v5, v6}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    move-object/from16 v0, v26
+
+    iget-object v7, v0, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    move-object/from16 v0, v26
+
+    iget-object v8, v0, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    invoke-static/range {v3 .. v10}, Lcom/android/server/am/ActivityManagerService;->performReceiveLocked(Lcom/android/server/am/ProcessRecord;Landroid/content/IIntentReceiver;Landroid/content/Intent;ILjava/lang/String;Landroid/os/Bundle;ZZ)V
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput-object v3, v0, Lcom/android/server/am/BroadcastRecord;->resultTo:Landroid/content/IIntentReceiver;
+    :try_end_1e4
+    .catchall {:try_start_1bd .. :try_end_1e4} :catchall_5f
+    .catch Landroid/os/RemoteException; {:try_start_1bd .. :try_end_1e4} :catch_26e
+
+    :cond_1e4
+    :goto_1e4
+    :try_start_1e4
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->cancelBroadcastTimeoutLocked()V
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addBroadcastToHistoryLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    const/16 v26, 0x0
+
+    const/16 v20, 0x1
+
+    :cond_1fa
+    if-eqz v26, :cond_c8
+
+    move-object/from16 v0, v26
+
+    iget v0, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    move/from16 v27, v0
+
+    add-int/lit8 v3, v27, 0x1
+
+    move-object/from16 v0, v26
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v5
+
+    move-object/from16 v0, v26
+
+    iput-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    if-nez v27, :cond_222
+
+    move-object/from16 v0, v26
+
+    iget-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    move-object/from16 v0, v26
+
+    iput-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->dispatchTime:J
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v5
+
+    move-object/from16 v0, v26
+
+    iput-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->dispatchClockTime:J
+
+    :cond_222
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastTimeoutMessage:Z
+
+    if-nez v3, :cond_237
+
+    move-object/from16 v0, v26
+
+    iget-wide v5, v0, Lcom/android/server/am/BroadcastRecord;->receiverTime:J
+
+    const-wide/16 v7, 0x2710
+
+    add-long v30, v5, v7
+
+    move-object/from16 v0, p0
+
+    move-wide/from16 v1, v30
+
+    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->setBroadcastTimeoutLocked(J)V
+
+    :cond_237
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receivers:Ljava/util/List;
+
+    move/from16 v0, v27
+
+    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v21
+
+    move-object/from16 v0, v21
+
+    instance-of v3, v0, Lcom/android/server/am/BroadcastFilter;
+
+    if-eqz v3, :cond_28d
+
+    move-object/from16 v0, v21
+
+    check-cast v0, Lcom/android/server/am/BroadcastFilter;
+
+    move-object v15, v0
+
+    move-object/from16 v0, v26
+
+    iget-boolean v3, v0, Lcom/android/server/am/BroadcastRecord;->ordered:Z
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v1, v15, v3}, Lcom/android/server/am/ActivityManagerService;->deliverToRegisteredReceiverLocked(Lcom/android/server/am/BroadcastRecord;Lcom/android/server/am/BroadcastFilter;Z)V
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    if-eqz v3, :cond_263
+
+    move-object/from16 v0, v26
+
+    iget-boolean v3, v0, Lcom/android/server/am/BroadcastRecord;->ordered:Z
+
+    if-nez v3, :cond_26b
+
+    :cond_263
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    :cond_26b
+    monitor-exit p0
+
+    goto/16 :goto_85
+
+    :catch_26e
+    move-exception v14
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Failure sending broadcast result of "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_1e4
+
+    :cond_28d
+    move-object/from16 v0, v21
+
+    check-cast v0, Landroid/content/pm/ResolveInfo;
+
+    move-object/from16 v18, v0
+
+    const/16 v28, 0x0
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v4, v3, Landroid/content/pm/ActivityInfo;->permission:Ljava/lang/String;
+
+    move-object/from16 v0, v26
+
+    iget v5, v0, Lcom/android/server/am/BroadcastRecord;->callingPid:I
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v3, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-boolean v8, v3, Landroid/content/pm/ActivityInfo;->exported:Z
+
+    move-object/from16 v3, p0
+
+    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v25
+
+    if-eqz v25, :cond_345
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-boolean v3, v3, Landroid/content/pm/ActivityInfo;->exported:Z
+
+    if-nez v3, :cond_3f4
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Permission Denial: broadcasting "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v6}, Landroid/content/Intent;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " from "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " (pid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingPid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ", uid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ")"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " is not exported from uid "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " due to receiver "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_343
+    const/16 v28, 0x1
+
+    :cond_345
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    const/16 v5, 0x3e8
+
+    if-eq v3, v5, :cond_3cd
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->requiredPermission:Ljava/lang/String;
+    :try_end_355
+    .catchall {:try_start_1e4 .. :try_end_355} :catchall_5f
+
+    if-eqz v3, :cond_3cd
+
+    :try_start_357
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    move-object/from16 v0, v26
+
+    iget-object v5, v0, Lcom/android/server/am/BroadcastRecord;->requiredPermission:Ljava/lang/String;
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-interface {v3, v5, v6}, Landroid/content/pm/IPackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_36a
+    .catchall {:try_start_357 .. :try_end_36a} :catchall_5f
+    .catch Landroid/os/RemoteException; {:try_start_357 .. :try_end_36a} :catch_476
+
+    move-result v25
+
+    :goto_36b
+    if-eqz v25, :cond_3cd
+
+    :try_start_36d
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Permission Denial: receiving "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " to "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " requires "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->requiredPermission:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " due to sender "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " (uid "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ")"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v28, 0x1
+
+    :cond_3cd
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_3dd
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v3, v3, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-eqz v3, :cond_3dd
+
+    const/16 v28, 0x1
+
+    :cond_3dd
+    if-eqz v28, :cond_47b
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput-object v3, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput-object v3, v0, Lcom/android/server/am/BroadcastRecord;->curFilter:Lcom/android/server/am/BroadcastFilter;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    monitor-exit p0
+
+    goto/16 :goto_85
+
+    :cond_3f4
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Permission Denial: broadcasting "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v6}, Landroid/content/Intent;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " from "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " (pid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingPid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ", uid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget v6, v0, Lcom/android/server/am/BroadcastRecord;->callingUid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ")"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " requires "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->permission:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " due to receiver "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_343
+
+    :catch_476
+    move-exception v14
+
+    const/16 v25, -0x1
+
+    goto/16 :goto_36b
+
+    :cond_47b
+    const/4 v3, 0x1
+
+    move-object/from16 v0, v26
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v4, v3, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;
+
+    new-instance v3, Landroid/content/ComponentName;
+
+    move-object/from16 v0, v18
+
+    iget-object v5, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v3, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, v26
+
+    iput-object v3, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    move-object/from16 v0, v26
+
+    iput-object v3, v0, Lcom/android/server/am/BroadcastRecord;->curReceiver:Landroid/content/pm/ActivityInfo;
+    :try_end_4a5
+    .catchall {:try_start_36d .. :try_end_4a5} :catchall_5f
+
+    :try_start_4a5
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    move-object/from16 v0, v26
+
+    iget-object v5, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v5
+
+    const/4 v6, 0x0
+
+    invoke-interface {v3, v5, v6}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;Z)V
+    :try_end_4b5
+    .catchall {:try_start_4a5 .. :try_end_4b5} :catchall_5f
+    .catch Landroid/os/RemoteException; {:try_start_4a5 .. :try_end_4b5} :catch_5d9
+    .catch Ljava/lang/IllegalArgumentException; {:try_start_4a5 .. :try_end_4b5} :catch_4dc
+
+    :goto_4b5
+    :try_start_4b5
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v4, v3}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v13
+
+    if-eqz v13, :cond_525
+
+    iget-object v3, v13, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+    :try_end_4c7
+    .catchall {:try_start_4b5 .. :try_end_4c7} :catchall_5f
+
+    if-eqz v3, :cond_525
+
+    :try_start_4c9
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v13, v3}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;)Z
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v1, v13}, Lcom/android/server/am/ActivityManagerService;->processCurBroadcastLocked(Lcom/android/server/am/BroadcastRecord;Lcom/android/server/am/ProcessRecord;)V
+    :try_end_4d9
+    .catchall {:try_start_4c9 .. :try_end_4d9} :catchall_5f
+    .catch Landroid/os/RemoteException; {:try_start_4c9 .. :try_end_4d9} :catch_508
+
+    :try_start_4d9
+    monitor-exit p0
+
+    goto/16 :goto_85
+
+    :catch_4dc
+    move-exception v14
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Failed trying to unstop package "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ": "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_4b5
+
+    :catch_508
+    move-exception v14
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Exception when sending broadcast to "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    :cond_525
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v5, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I
+
+    move-result v3
+
+    or-int/lit8 v7, v3, 0x4
+
+    const-string v8, "broadcast"
+
+    move-object/from16 v0, v26
+
+    iget-object v9, v0, Lcom/android/server/am/BroadcastRecord;->curComponent:Landroid/content/ComponentName;
+
+    move-object/from16 v0, v26
+
+    iget-object v3, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I
+
+    move-result v3
+
+    const/high16 v10, 0x800
+
+    and-int/2addr v3, v10
+
+    if-eqz v3, :cond_5c8
+
+    const/4 v10, 0x1
+
+    :goto_54a
+    move-object/from16 v3, p0
+
+    invoke-virtual/range {v3 .. v10}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;Z)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v3
+
+    move-object/from16 v0, v26
+
+    iput-object v3, v0, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v3, :cond_5ca
+
+    const-string v3, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Unable to launch app "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "/"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v18
+
+    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " for broadcast "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ": process is bad"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v26
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    move-object/from16 v0, v26
+
+    iget-object v6, v0, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    move-object/from16 v0, v26
+
+    iget v7, v0, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    move-object/from16 v0, v26
+
+    iget-object v8, v0, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    move-object/from16 v0, v26
+
+    iget-object v9, v0, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    move-object/from16 v0, v26
+
+    iget-boolean v10, v0, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    const/4 v11, 0x1
+
+    move-object/from16 v5, p0
+
+    invoke-direct/range {v5 .. v11}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v26
+
+    iput v3, v0, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    monitor-exit p0
+
+    goto/16 :goto_85
+
+    :cond_5c8
+    const/4 v10, 0x0
+
+    goto :goto_54a
+
+    :cond_5ca
+    move-object/from16 v0, v26
+
+    move-object/from16 v1, p0
+
+    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    move/from16 v0, v27
+
+    move-object/from16 v1, p0
+
+    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastRecvIndex:I
+
+    monitor-exit p0
+    :try_end_5d7
+    .catchall {:try_start_4d9 .. :try_end_5d7} :catchall_5f
+
+    goto/16 :goto_85
+
+    :catch_5d9
+    move-exception v3
+
+    goto/16 :goto_4b5
+.end method
+
+.method private final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
+    .registers 16
+
+    const/4 v13, 0x0
+
+    const/4 v12, 0x3
+
+    const/4 v11, 0x2
+
+    const/4 v10, 0x0
+
+    const/4 v9, 0x1
+
+    iget v4, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    const/4 v1, 0x0
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v7
+
+    :try_start_b
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_1f
+
+    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v6, :cond_1f
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->remove(I)V
+
+    const/4 v1, 0x1
+
+    :cond_1f
+    monitor-exit v7
+    :try_end_20
+    .catchall {:try_start_b .. :try_end_20} :catchall_c0
+
+    if-eqz v1, :cond_12b
+
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Process "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, " failed to attach"
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v6, 0x7555
+
+    new-array v7, v12, [Ljava/lang/Object;
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    aput-object v8, v7, v10
+
+    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    aput-object v8, v7, v9
+
+    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v8, v7, v11
+
+    invoke-static {v6, v7}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v6, v7, v8}, Lcom/android/server/ProcessMap;->remove(Ljava/lang/String;I)V
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v6, p1, :cond_73
+
+    iput-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v7, 0x19
+
+    invoke-virtual {v6, v7}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    :cond_73
+    invoke-virtual {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
+
+    const/4 v2, 0x0
+
+    :goto_77
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    if-ge v2, v6, :cond_c3
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ServiceRecord;
+
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-object v7, v5, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    if-ne v6, v7, :cond_bd
+
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v7, v5, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v6
+
+    if-eqz v6, :cond_bd
+
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Forcing bringing down service: "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v2, v2, -0x1
+
+    invoke-direct {p0, v5, v9}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    :cond_bd
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_77
+
+    :catchall_c0
+    move-exception v6
+
+    :try_start_c1
+    monitor-exit v7
+    :try_end_c2
+    .catchall {:try_start_c1 .. :try_end_c2} :catchall_c0
+
+    throw v6
+
+    :cond_c3
+    const/16 v6, 0x7547
+
+    const/4 v7, 0x4
+
+    new-array v7, v7, [Ljava/lang/Object;
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    aput-object v8, v7, v10
+
+    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v8, v7, v9
+
+    iget v8, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    aput-object v8, v7, v11
+
+    const-string v8, "start timeout"
+
+    aput-object v8, v7, v12
+
+    invoke-static {v6, v7}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    invoke-static {v4}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    if-eqz v6, :cond_108
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v6, v6, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-ne v6, v4, :cond_108
+
+    const-string v6, "ActivityManager"
+
+    const-string v7, "Unattached app died before backup, skipping"
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :try_start_f7
+    const-string v6, "backup"
+
+    invoke-static {v6}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v6
+
+    invoke-static {v6}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;
+
+    move-result-object v0
+
+    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-interface {v0, v6}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
+    :try_end_108
+    .catch Landroid/os/RemoteException; {:try_start_f7 .. :try_end_108} :catch_144
+
+    :cond_108
+    :goto_108
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v6, :cond_12a
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    iget v6, v6, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-ne v6, v4, :cond_12a
+
+    const-string v6, "ActivityManager"
+
+    const-string v7, "Unattached app died before broadcast acknowledged, skipping"
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iput v10, v6, Lcom/android/server/am/BroadcastRecord;->state:I
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastRecvIndex:I
+
+    iput v7, v6, Lcom/android/server/am/BroadcastRecord;->nextReceiver:I
+
+    iput-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    :cond_12a
+    :goto_12a
+    return-void
+
+    :cond_12b
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Spurious process start timeout - pid not known for "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_12a
+
+    :catch_144
+    move-exception v6
+
+    goto :goto_108
+.end method
+
+.method private static readLastDonePreBootReceivers()Ljava/util/ArrayList;
+    .registers 15
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/ArrayList",
+            "<",
+            "Landroid/content/ComponentName;",
+            ">;"
+        }
+    .end annotation
+
+    new-instance v9, Ljava/util/ArrayList;
+
+    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V
+
+    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;
+
+    move-result-object v5
+
+    const/4 v6, 0x0
+
+    :try_start_a
+    new-instance v7, Ljava/io/FileInputStream;
+
+    invoke-direct {v7, v5}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
+    :try_end_f
+    .catchall {:try_start_a .. :try_end_f} :catchall_7f
+    .catch Ljava/io/FileNotFoundException; {:try_start_a .. :try_end_f} :catch_90
+    .catch Ljava/io/IOException; {:try_start_a .. :try_end_f} :catch_6f
+
+    :try_start_f
+    new-instance v3, Ljava/io/DataInputStream;
+
+    new-instance v13, Ljava/io/BufferedInputStream;
+
+    const/16 v14, 0x800
+
+    invoke-direct {v13, v7, v14}, Ljava/io/BufferedInputStream;-><init>(Ljava/io/InputStream;I)V
+
+    invoke-direct {v3, v13}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I
+
+    move-result v8
+
+    const/16 v13, 0x2710
+
+    if-ne v8, v13, :cond_68
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;
+
+    move-result-object v0
+
+    sget-object v13, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;
+
+    invoke-virtual {v13, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v13
+
+    if-eqz v13, :cond_68
+
+    sget-object v13, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;
+
+    invoke-virtual {v13, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v13
+
+    if-eqz v13, :cond_68
+
+    sget-object v13, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;
+
+    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v13
+
+    if-eqz v13, :cond_68
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I
+
+    move-result v10
+
+    :goto_4b
+    if-lez v10, :cond_68
+
+    add-int/lit8 v10, v10, -0x1
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;
+
+    move-result-object v11
+
+    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;
+
+    move-result-object v1
+
+    new-instance v13, Landroid/content/ComponentName;
+
+    invoke-direct {v13, v11, v1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-virtual {v9, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+    :try_end_5f
+    .catchall {:try_start_f .. :try_end_5f} :catchall_8a
+    .catch Ljava/io/FileNotFoundException; {:try_start_f .. :try_end_5f} :catch_60
+    .catch Ljava/io/IOException; {:try_start_f .. :try_end_5f} :catch_8d
+
+    goto :goto_4b
+
+    :catch_60
+    move-exception v13
+
+    move-object v6, v7
+
+    :goto_62
+    if-eqz v6, :cond_67
+
+    :try_start_64
+    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V
+    :try_end_67
+    .catch Ljava/io/IOException; {:try_start_64 .. :try_end_67} :catch_7d
+
+    :cond_67
+    :goto_67
+    return-object v9
+
+    :cond_68
+    if-eqz v7, :cond_6d
+
+    :try_start_6a
+    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
+    :try_end_6d
+    .catch Ljava/io/IOException; {:try_start_6a .. :try_end_6d} :catch_88
+
+    :cond_6d
+    :goto_6d
+    move-object v6, v7
+
+    goto :goto_67
+
+    :catch_6f
+    move-exception v4
+
+    :goto_70
+    :try_start_70
+    const-string v13, "ActivityManager"
+
+    const-string v14, "Failure reading last done pre-boot receivers"
+
+    invoke-static {v13, v14, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_77
+    .catchall {:try_start_70 .. :try_end_77} :catchall_7f
+
+    if-eqz v6, :cond_67
+
+    :try_start_79
+    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V
+    :try_end_7c
+    .catch Ljava/io/IOException; {:try_start_79 .. :try_end_7c} :catch_7d
+
+    goto :goto_67
+
+    :catch_7d
+    move-exception v13
+
+    goto :goto_67
+
+    :catchall_7f
+    move-exception v13
+
+    :goto_80
+    if-eqz v6, :cond_85
+
+    :try_start_82
+    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V
+    :try_end_85
+    .catch Ljava/io/IOException; {:try_start_82 .. :try_end_85} :catch_86
+
+    :cond_85
+    :goto_85
+    throw v13
+
+    :catch_86
+    move-exception v14
+
+    goto :goto_85
+
+    :catch_88
+    move-exception v13
+
+    goto :goto_6d
+
+    :catchall_8a
+    move-exception v13
+
+    move-object v6, v7
+
+    goto :goto_80
+
+    :catch_8d
+    move-exception v4
+
+    move-object v6, v7
+
+    goto :goto_70
+
+    :catch_90
+    move-exception v13
+
+    goto :goto_62
+.end method
+
+.method private final realStartServiceLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/ProcessRecord;)V
+    .registers 12
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/4 v8, 0x1
+
+    const/4 v2, 0x0
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v0, :cond_c
+
+    new-instance v0, Landroid/os/RemoteException;
+
+    invoke-direct {v0}, Landroid/os/RemoteException;-><init>()V
+
+    throw v0
+
+    :cond_c
+    iput-object p2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    iput-wide v0, p1, Lcom/android/server/am/ServiceRecord;->lastActivity:J
+
+    iput-wide v0, p1, Lcom/android/server/am/ServiceRecord;->restartTime:J
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v0, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    const-string v0, "create"
+
+    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    invoke-virtual {p0, p2, v8, v8}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    const/4 v6, 0x0
+
+    :try_start_24
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;
+
+    const/4 v1, 0x0
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->setLength(I)V
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v0}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;
+
+    const/4 v3, 0x1
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x1
+
+    invoke-virtual {v0, v1, v3, v4, v5}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZ)V
+
+    const/16 v0, 0x754e
+
+    const/4 v1, 0x4
+
+    new-array v1, v1, [Ljava/lang/Object;
+
+    const/4 v3, 0x0
+
+    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v4
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v1, v3
+
+    const/4 v3, 0x1
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    aput-object v4, v1, v3
+
+    const/4 v3, 0x2
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    aput-object v4, v1, v3
+
+    const/4 v3, 0x3
+
+    iget-object v4, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v4, v4, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v4
+
+    aput-object v4, v1, v3
+
+    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v1
+
+    monitor-enter v1
+    :try_end_6b
+    .catchall {:try_start_24 .. :try_end_6b} :catchall_c0
+
+    :try_start_6b
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->startLaunchedLocked()V
+
+    monitor-exit v1
+    :try_end_71
+    .catchall {:try_start_6b .. :try_end_71} :catchall_bd
+
+    :try_start_71
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    iget-object v0, v0, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v3
+
+    invoke-interface {v0, p1, v1, v3}, Landroid/app/IApplicationThread;->scheduleCreateService(Landroid/os/IBinder;Landroid/content/pm/ServiceInfo;Landroid/content/res/CompatibilityInfo;)V
+
+    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->postNotification()V
+    :try_end_8a
+    .catchall {:try_start_71 .. :try_end_8a} :catchall_c0
+
+    const/4 v6, 0x1
+
+    if-nez v6, :cond_95
+
+    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v0, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z
+
+    :cond_95
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->requestServiceBindingsLocked(Lcom/android/server/am/ServiceRecord;)V
+
+    iget-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-eqz v0, :cond_b9
+
+    iget-boolean v0, p1, Lcom/android/server/am/ServiceRecord;->callStart:Z
+
+    if-eqz v0, :cond_b9
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-nez v0, :cond_b9
+
+    iget-object v7, p1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    new-instance v0, Lcom/android/server/am/ServiceRecord$StartItem;
+
+    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->makeNextStartId()I
+
+    move-result v3
+
+    const/4 v4, 0x0
+
+    const/4 v5, -0x1
+
+    move-object v1, p1
+
+    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ServiceRecord$StartItem;-><init>(Lcom/android/server/am/ServiceRecord;ZILandroid/content/Intent;I)V
+
+    invoke-virtual {v7, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_b9
+    invoke-direct {p0, p1, v8}, Lcom/android/server/am/ActivityManagerService;->sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    return-void
+
+    :catchall_bd
+    move-exception v0
+
+    :try_start_be
+    monitor-exit v1
+    :try_end_bf
+    .catchall {:try_start_be .. :try_end_bf} :catchall_bd
+
+    :try_start_bf
+    throw v0
+    :try_end_c0
+    .catchall {:try_start_bf .. :try_end_c0} :catchall_c0
+
+    :catchall_c0
+    move-exception v0
+
+    if-nez v6, :cond_cb
+
+    iget-object v1, p2, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v1, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z
+
+    :cond_cb
+    throw v0
+.end method
+
+.method private removeContentProviderExternal(Ljava/lang/String;)V
+    .registers 8
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    invoke-virtual {v3, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ContentProviderRecord;
+
+    if-nez v1, :cond_d
+
+    monitor-exit p0
+
+    :goto_c
+    return-void
+
+    :cond_d
+    new-instance v0, Landroid/content/ComponentName;
+
+    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v0, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v3, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ContentProviderRecord;
+
+    iget v3, v2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    add-int/lit8 v3, v3, -0x1
+
+    iput v3, v2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    iget v3, v2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    if-gez v3, :cond_44
+
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Externals < 0 for content provider "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_44
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    monitor-exit p0
+
+    goto :goto_c
+
+    :catchall_49
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_4b
+    .catchall {:try_start_1 .. :try_end_4b} :catchall_49
+
+    throw v3
+.end method
+
+.method private final removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)V
+    .registers 12
+
+    monitor-enter p2
+
+    const/4 v4, 0x0
+
+    :try_start_2
+    iput-object v4, p2, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {p2}, Ljava/lang/Object;->notifyAll()V
+
+    monitor-exit p2
+    :try_end_8
+    .catchall {:try_start_2 .. :try_end_8} :catchall_27
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    iget-object v5, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v4, v5}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    iget-object v4, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;
+
+    const-string v5, ";"
+
+    invoke-virtual {v4, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
+
+    move-result-object v3
+
+    const/4 v2, 0x0
+
+    :goto_1a
+    array-length v4, v3
+
+    if-ge v2, v4, :cond_2a
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    aget-object v5, v3, v2
+
+    invoke-virtual {v4, v5}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_1a
+
+    :catchall_27
+    move-exception v4
+
+    :try_start_28
+    monitor-exit p2
+    :try_end_29
+    .catchall {:try_start_28 .. :try_end_29} :catchall_27
+
+    throw v4
+
+    :cond_2a
+    iget-object v4, p2, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    invoke-virtual {v4}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v1
+
+    :cond_30
+    :goto_30
+    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_d5
+
+    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-nez v4, :cond_30
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v4, :cond_30
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-eqz v4, :cond_30
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v4, v5, :cond_30
+
+    const-string v5, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Kill "
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v6, " (pid "
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v6, "): provider "
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v6, " in dying process "
+
+    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    if-eqz p1, :cond_d2
+
+    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    :goto_85
+    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v5, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v4, 0x7547
+
+    const/4 v5, 0x4
+
+    new-array v5, v5, [Ljava/lang/Object;
+
+    const/4 v6, 0x0
+
+    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v5, v6
+
+    const/4 v6, 0x1
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v7, v5, v6
+
+    const/4 v6, 0x2
+
+    iget v7, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v5, v6
+
+    const/4 v6, 0x3
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "dying provider "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v8, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v8}, Landroid/content/ComponentName;->toShortString()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    aput-object v7, v5, v6
+
+    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v4}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    goto/16 :goto_30
+
+    :cond_d2
+    const-string v4, "??"
+
+    goto :goto_85
+
+    :cond_d5
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v4, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    return-void
+.end method
+
+.method private final removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
+    .registers 12
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v4, v0, v3}, Lcom/android/server/ProcessMap;->remove(Ljava/lang/String;I)V
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v4, p1, :cond_19
+
+    const/4 v4, 0x0
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v5, 0x19
+
+    invoke-virtual {v4, v5}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    :cond_19
+    const/4 v1, 0x0
+
+    iget v4, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v4, :cond_79
+
+    iget v4, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v4, v5, :cond_79
+
+    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v5
+
+    :try_start_29
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->remove(I)V
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v6, 0x14
+
+    invoke-virtual {v4, v6, p1}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V
+
+    monitor-exit v5
+    :try_end_36
+    .catchall {:try_start_29 .. :try_end_36} :catchall_74
+
+    const-string v4, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Killing proc "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ": "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v4, 0x1
+
+    invoke-direct {p0, p1, v4, p3}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    invoke-static {v2}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v4, :cond_73
+
+    if-nez p2, :cond_77
+
+    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;)Lcom/android/server/am/ProcessRecord;
+
+    :cond_73
+    :goto_73
+    return v1
+
+    :catchall_74
+    move-exception v4
+
+    :try_start_75
+    monitor-exit v5
+    :try_end_76
+    .catchall {:try_start_75 .. :try_end_76} :catchall_74
+
+    throw v4
+
+    :cond_77
+    const/4 v1, 0x1
+
+    goto :goto_73
+
+    :cond_79
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_73
+.end method
+
+.method private reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
+    .registers 8
+
+    const-string v2, "ActivityManager"
+
+    invoke-static {v2, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    if-eqz p1, :cond_1c
+
+    :try_start_7
+    new-instance v1, Landroid/os/Bundle;
+
+    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V
+
+    const-string v2, "id"
+
+    const-string v3, "ActivityManagerService"
+
+    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v2, "Error"
+
+    invoke-virtual {v1, v2, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v2, -0x1
+
+    invoke-interface {p1, p2, v2, v1}, Landroid/app/IInstrumentationWatcher;->instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
+    :try_end_1c
+    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_1c} :catch_1d
+
+    :cond_1c
+    :goto_1c
+    return-void
+
+    :catch_1d
+    move-exception v0
+
+    const-string v2, "ActivityManager"
+
+    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_1c
+.end method
+
+.method private final requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;Z)Z
+    .registers 9
+
+    const/4 v2, 0x1
+
+    const/4 v1, 0x0
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_c
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v3, :cond_d
+
+    :cond_c
+    :goto_c
+    return v1
+
+    :cond_d
+    iget-boolean v3, p2, Lcom/android/server/am/IntentBindRecord;->requested:Z
+
+    if-eqz v3, :cond_13
+
+    if-eqz p3, :cond_38
+
+    :cond_13
+    iget-object v3, p2, Lcom/android/server/am/IntentBindRecord;->apps:Ljava/util/HashMap;
+
+    invoke-virtual {v3}, Ljava/util/HashMap;->size()I
+
+    move-result v3
+
+    if-lez v3, :cond_38
+
+    :try_start_1b
+    const-string v3, "bind"
+
+    invoke-direct {p0, p1, v3}, Lcom/android/server/am/ActivityManagerService;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    iget-object v3, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    iget-object v4, p2, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v4}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v4
+
+    invoke-interface {v3, p1, v4, p3}, Landroid/app/IApplicationThread;->scheduleBindService(Landroid/os/IBinder;Landroid/content/Intent;Z)V
+
+    if-nez p3, :cond_32
+
+    const/4 v3, 0x1
+
+    iput-boolean v3, p2, Lcom/android/server/am/IntentBindRecord;->requested:Z
+
+    :cond_32
+    const/4 v3, 0x1
+
+    iput-boolean v3, p2, Lcom/android/server/am/IntentBindRecord;->hasBound:Z
+
+    const/4 v3, 0x0
+
+    iput-boolean v3, p2, Lcom/android/server/am/IntentBindRecord;->doRebind:Z
+    :try_end_38
+    .catch Landroid/os/RemoteException; {:try_start_1b .. :try_end_38} :catch_3a
+
+    :cond_38
+    move v1, v2
+
+    goto :goto_c
+
+    :catch_3a
+    move-exception v0
+
+    goto :goto_c
+.end method
+
+.method private final requestServiceBindingsLocked(Lcom/android/server/am/ServiceRecord;)V
+    .registers 5
+
+    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v0
+
+    :cond_a
+    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_1d
+
+    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/IntentBindRecord;
+
+    const/4 v2, 0x0
+
+    invoke-direct {p0, p1, v1, v2}, Lcom/android/server/am/ActivityManagerService;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;Z)Z
+
+    move-result v2
+
+    if-nez v2, :cond_a
+
+    :cond_1d
+    return-void
+.end method
+
+.method private final resumedAppLocked()Lcom/android/server/am/ActivityRecord;
+    .registers 4
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v0, :cond_a
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v1, :cond_1b
+
+    :cond_a
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v0, :cond_14
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v1, :cond_1b
+
+    :cond_14
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    :cond_1b
+    return-object v0
+.end method
+
+.method private retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;II)Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+    .registers 27
+
+    const/4 v2, 0x0
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_15
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v9
+
+    invoke-virtual {v3, v9}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ServiceRecord;
+
+    :cond_15
+    new-instance v16, Landroid/content/Intent$FilterComparison;
+
+    move-object/from16 v0, v16
+
+    move-object/from16 v1, p1
+
+    invoke-direct {v0, v1}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServicesByIntent:Ljava/util/HashMap;
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v3, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ServiceRecord;
+
+    if-nez v2, :cond_1e2
+
+    :try_start_2c
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    const/16 v9, 0x400
+
+    move-object/from16 v0, p1
+
+    move-object/from16 v1, p2
+
+    invoke-interface {v3, v0, v1, v9}, Landroid/content/pm/IPackageManager;->resolveService(Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/pm/ResolveInfo;
+
+    move-result-object v20
+
+    if-eqz v20, :cond_66
+
+    move-object/from16 v0, v20
+
+    iget-object v7, v0, Landroid/content/pm/ResolveInfo;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    :goto_40
+    if-nez v7, :cond_68
+
+    const-string v3, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Unable to start service "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, ": not found"
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v3, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v3, 0x0
+
+    move-object/from16 v6, v16
+
+    :goto_65
+    return-object v3
+
+    :cond_66
+    const/4 v7, 0x0
+
+    goto :goto_40
+
+    :cond_68
+    new-instance v5, Landroid/content/ComponentName;
+
+    iget-object v3, v7, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v9, v7, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v5, v3, v9}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v3, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v19
+
+    check-cast v19, Lcom/android/server/am/ServiceRecord;
+    :try_end_7d
+    .catch Landroid/os/RemoteException; {:try_start_2c .. :try_end_7d} :catch_1cd
+
+    if-nez v19, :cond_1dc
+
+    :try_start_7f
+    new-instance v6, Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual/range {p1 .. p1}, Landroid/content/Intent;->cloneFilter()Landroid/content/Intent;
+
+    move-result-object v3
+
+    invoke-direct {v6, v3}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V
+    :try_end_88
+    .catch Landroid/os/RemoteException; {:try_start_7f .. :try_end_88} :catch_1d2
+
+    :try_start_88
+    new-instance v8, Lcom/android/server/am/ActivityManagerService$ServiceRestarter;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v8, v0, v3}, Lcom/android/server/am/ActivityManagerService$ServiceRestarter;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityManagerService$1;)V
+
+    const/4 v4, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v3}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v21
+
+    monitor-enter v21
+    :try_end_9a
+    .catch Landroid/os/RemoteException; {:try_start_88 .. :try_end_9a} :catch_f8
+
+    :try_start_9a
+    iget-object v3, v7, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-object v9, v7, Landroid/content/pm/ServiceInfo;->packageName:Ljava/lang/String;
+
+    iget-object v10, v7, Landroid/content/pm/ServiceInfo;->name:Ljava/lang/String;
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v0, v3, v9, v10}, Lcom/android/internal/os/BatteryStatsImpl;->getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    move-result-object v4
+
+    monitor-exit v21
+    :try_end_a9
+    .catchall {:try_start_9a .. :try_end_a9} :catchall_f5
+
+    :try_start_a9
+    new-instance v2, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ServiceRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;Landroid/content/ComponentName;Landroid/content/Intent$FilterComparison;Landroid/content/pm/ServiceInfo;Ljava/lang/Runnable;)V
+    :try_end_b0
+    .catch Landroid/os/RemoteException; {:try_start_a9 .. :try_end_b0} :catch_f8
+
+    :try_start_b0
+    invoke-virtual {v8, v2}, Lcom/android/server/am/ActivityManagerService$ServiceRestarter;->setService(Lcom/android/server/am/ServiceRecord;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v3, v5, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mServicesByIntent:Ljava/util/HashMap;
+
+    invoke-virtual {v3, v6, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v15
+
+    const/16 v17, 0x0
+
+    :goto_cb
+    move/from16 v0, v17
+
+    if-ge v0, v15, :cond_fb
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move/from16 v0, v17
+
+    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v3, v5}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_f2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move/from16 v0, v17
+
+    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+    :try_end_ee
+    .catch Landroid/os/RemoteException; {:try_start_b0 .. :try_end_ee} :catch_1d9
+
+    add-int/lit8 v17, v17, -0x1
+
+    add-int/lit8 v15, v15, -0x1
+
+    :cond_f2
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_cb
+
+    :catchall_f5
+    move-exception v3
+
+    :try_start_f6
+    monitor-exit v21
+    :try_end_f7
+    .catchall {:try_start_f6 .. :try_end_f7} :catchall_f5
+
+    :try_start_f7
+    throw v3
+    :try_end_f8
+    .catch Landroid/os/RemoteException; {:try_start_f7 .. :try_end_f8} :catch_f8
+
+    :catch_f8
+    move-exception v3
+
+    move-object/from16 v2, v19
+
+    :cond_fb
+    :goto_fb
+    if-eqz v2, :cond_1ca
+
+    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;
+
+    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v13, v3, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-boolean v14, v2, Lcom/android/server/am/ServiceRecord;->exported:Z
+
+    move-object/from16 v9, p0
+
+    move/from16 v11, p3
+
+    move/from16 v12, p4
+
+    invoke-virtual/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v3
+
+    if-eqz v3, :cond_1c0
+
+    iget-boolean v3, v2, Lcom/android/server/am/ServiceRecord;->exported:Z
+
+    if-nez v3, :cond_176
+
+    const-string v3, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Permission Denial: Accessing service "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " from pid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move/from16 v0, p3
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, ", uid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move/from16 v0, p4
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " that is not exported from uid "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v3, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    const/4 v9, 0x0
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "not exported from uid "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    iget-object v11, v2, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v3, v0, v9, v10}, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    goto/16 :goto_65
+
+    :cond_176
+    const-string v3, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Permission Denial: Accessing service "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " from pid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move/from16 v0, p3
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, ", uid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move/from16 v0, p4
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " requires "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v3, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    const/4 v9, 0x0
+
+    iget-object v10, v2, Lcom/android/server/am/ServiceRecord;->permission:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v3, v0, v9, v10}, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    goto/16 :goto_65
+
+    :cond_1c0
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    const/4 v9, 0x0
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v3, v0, v2, v9}, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    goto/16 :goto_65
+
+    :cond_1ca
+    const/4 v3, 0x0
+
+    goto/16 :goto_65
+
+    :catch_1cd
+    move-exception v3
+
+    move-object/from16 v6, v16
+
+    goto/16 :goto_fb
+
+    :catch_1d2
+    move-exception v3
+
+    move-object/from16 v6, v16
+
+    move-object/from16 v2, v19
+
+    goto/16 :goto_fb
+
+    :catch_1d9
+    move-exception v3
+
+    goto/16 :goto_fb
+
+    :cond_1dc
+    move-object/from16 v6, v16
+
+    move-object/from16 v2, v19
+
+    goto/16 :goto_fb
+
+    :cond_1e2
+    move-object/from16 v6, v16
+
+    goto/16 :goto_fb
+.end method
+
+.method private retrieveSettings()V
+    .registers 9
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x0
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v3
+
+    const-string v7, "debug_app"
+
+    invoke-static {v3, v7}, Landroid/provider/Settings$System;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v2
+
+    const-string v7, "wait_for_debugger"
+
+    invoke-static {v3, v7, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+
+    move-result v7
+
+    if-eqz v7, :cond_3b
+
+    move v4, v5
+
+    :goto_17
+    const-string v7, "always_finish_activities"
+
+    invoke-static {v3, v7, v6}, Landroid/provider/Settings$System;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+
+    move-result v7
+
+    if-eqz v7, :cond_3d
+
+    move v0, v5
+
+    :goto_20
+    new-instance v1, Landroid/content/res/Configuration;
+
+    invoke-direct {v1}, Landroid/content/res/Configuration;-><init>()V
+
+    invoke-static {v3, v1}, Landroid/provider/Settings$System;->getConfiguration(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V
+
+    monitor-enter p0
+
+    :try_start_29
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    iput-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z
+
+    iput-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x1
+
+    invoke-virtual {p0, v1, v5, v6, v7}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
+
+    monitor-exit p0
+
+    return-void
+
+    :cond_3b
+    move v4, v6
+
+    goto :goto_17
+
+    :cond_3d
+    move v0, v6
+
+    goto :goto_20
+
+    :catchall_3f
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_41
+    .catchall {:try_start_29 .. :try_end_41} :catchall_3f
+
+    throw v5
+.end method
+
+.method private revokeUriPermissionLocked(ILandroid/net/Uri;I)V
+    .registers 23
+
+    and-int/lit8 p3, p3, 0x3
+
+    if-nez p3, :cond_5
+
+    :cond_4
+    :goto_4
+    return-void
+
+    :cond_5
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    invoke-virtual/range {p2 .. p2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v10
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    invoke-virtual {v1, v10}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Lcom/android/server/am/ContentProviderRecord;
+
+    if-eqz v11, :cond_3b
+
+    iget-object v3, v11, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    :goto_1c
+    if-nez v3, :cond_42
+
+    const-string v1, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "No content provider found for permission revoke: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual/range {p2 .. p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_4
+
+    :cond_3b
+    const/16 v1, 0x800
+
+    :try_start_3d
+    invoke-interface {v2, v10, v1}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
+    :try_end_40
+    .catch Landroid/os/RemoteException; {:try_start_3d .. :try_end_40} :catch_105
+
+    move-result-object v3
+
+    goto :goto_1c
+
+    :cond_42
+    move-object/from16 v1, p0
+
+    move-object/from16 v4, p2
+
+    move/from16 v5, p1
+
+    move/from16 v6, p3
+
+    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Landroid/net/Uri;II)Z
+
+    move-result v1
+
+    if-nez v1, :cond_77
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Uid "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " does not have permission to uri "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-direct {v1, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_77
+    invoke-virtual/range {p2 .. p2}, Landroid/net/Uri;->getPathSegments()Ljava/util/List;
+
+    move-result-object v9
+
+    if-eqz v9, :cond_4
+
+    invoke-interface {v9}, Ljava/util/List;->size()I
+
+    move-result v8
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I
+
+    move-result v7
+
+    const/4 v12, 0x0
+
+    :goto_8a
+    if-ge v12, v7, :cond_4
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v1, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Ljava/util/HashMap;
+
+    invoke-virtual/range {v16 .. v16}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v13
+
+    :cond_9e
+    :goto_9e
+    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_e9
+
+    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v15
+
+    check-cast v15, Lcom/android/server/am/UriPermission;
+
+    iget-object v0, v15, Lcom/android/server/am/UriPermission;->uri:Landroid/net/Uri;
+
+    move-object/from16 v18, v0
+
+    invoke-virtual/range {v18 .. v18}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {v10, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_9e
+
+    invoke-virtual/range {v18 .. v18}, Landroid/net/Uri;->getPathSegments()Ljava/util/List;
+
+    move-result-object v17
+
+    if-eqz v17, :cond_9e
+
+    invoke-interface/range {v17 .. v17}, Ljava/util/List;->size()I
+
+    move-result v1
+
+    if-lt v1, v8, :cond_9e
+
+    const/4 v14, 0x0
+
+    :goto_c5
+    if-ge v14, v8, :cond_dc
+
+    invoke-interface {v9, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/lang/String;
+
+    move-object/from16 v0, v17
+
+    invoke-interface {v0, v14}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_9e
+
+    add-int/lit8 v14, v14, 0x1
+
+    goto :goto_c5
+
+    :cond_dc
+    move/from16 v0, p3
+
+    invoke-virtual {v15, v0}, Lcom/android/server/am/UriPermission;->clearModes(I)V
+
+    iget v1, v15, Lcom/android/server/am/UriPermission;->modeFlags:I
+
+    if-nez v1, :cond_9e
+
+    invoke-interface {v13}, Ljava/util/Iterator;->remove()V
+
+    goto :goto_9e
+
+    :cond_e9
+    invoke-virtual/range {v16 .. v16}, Ljava/util/HashMap;->size()I
+
+    move-result v1
+
+    if-nez v1, :cond_102
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, v12}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v4
+
+    invoke-virtual {v1, v4}, Landroid/util/SparseArray;->remove(I)V
+
+    add-int/lit8 v7, v7, -0x1
+
+    add-int/lit8 v12, v12, -0x1
+
+    :cond_102
+    add-int/lit8 v12, v12, 0x1
+
+    goto :goto_8a
+
+    :catch_105
+    move-exception v1
+
+    goto/16 :goto_1c
+.end method
+
+.method private saveLocaleLocked(Ljava/util/Locale;ZZ)V
+    .registers 6
+
+    if-eqz p2, :cond_14
+
+    const-string v0, "user.language"
+
+    invoke-virtual {p1}, Ljava/util/Locale;->getLanguage()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v0, "user.region"
+
+    invoke-virtual {p1}, Ljava/util/Locale;->getCountry()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    :cond_14
+    if-eqz p3, :cond_31
+
+    const-string v0, "persist.sys.language"
+
+    invoke-virtual {p1}, Ljava/util/Locale;->getLanguage()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v0, "persist.sys.country"
+
+    invoke-virtual {p1}, Ljava/util/Locale;->getCountry()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v0, "persist.sys.localevar"
+
+    invoke-virtual {p1}, Ljava/util/Locale;->getVariant()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    :cond_31
+    return-void
+.end method
+
+.method private saveThemeResourceLocked(Landroid/content/res/CustomTheme;Z)V
+    .registers 5
+
+    if-eqz p2, :cond_14
+
+    const-string v0, "persist.sys.themeId"
+
+    invoke-virtual {p1}, Landroid/content/res/CustomTheme;->getThemeId()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v0, "persist.sys.themePackageName"
+
+    invoke-virtual {p1}, Landroid/content/res/CustomTheme;->getThemePackageName()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    :cond_14
+    return-void
+.end method
+
+.method private static scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
+    .registers 7
+
+    if-eqz p0, :cond_14
+
+    move-object v1, p0
+
+    array-length v3, v1
+
+    const/4 v2, 0x0
+
+    :goto_5
+    if-ge v2, v3, :cond_14
+
+    aget-object v0, v1, v2
+
+    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_11
+
+    const/4 v4, 0x1
+
+    :goto_10
+    return v4
+
+    :cond_11
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_5
+
+    :cond_14
+    const/4 v4, 0x0
+
+    goto :goto_10
+.end method
+
+.method private final scheduleBroadcastsLocked()V
+    .registers 3
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastsScheduled:Z
+
+    if-eqz v0, :cond_5
+
+    :goto_4
+    return-void
+
+    :cond_5
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/4 v1, 0x7
+
+    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastsScheduled:Z
+
+    goto :goto_4
+.end method
+
+.method private final scheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;Z)Z
+    .registers 26
+
+    const/4 v4, 0x0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v10
+
+    const-wide/16 v8, 0x1388
+
+    const-wide/32 v14, 0xea60
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    iget-object v0, v0, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    move/from16 v17, v0
+
+    and-int/lit8 v17, v17, 0x8
+
+    if-eqz v17, :cond_24
+
+    const-wide/16 v17, 0x4
+
+    div-long v8, v8, v17
+
+    :cond_24
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    if-lez v3, :cond_d3
+
+    add-int/lit8 v7, v3, -0x1
+
+    :goto_32
+    if-ltz v7, :cond_ca
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Lcom/android/server/am/ServiceRecord$StartItem;
+
+    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/ServiceRecord$StartItem;->removeUriPermissionsLocked()V
+
+    move-object/from16 v0, v16
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;
+
+    move-object/from16 v17, v0
+
+    if-nez v17, :cond_50
+
+    :cond_4d
+    :goto_4d
+    add-int/lit8 v7, v7, -0x1
+
+    goto :goto_32
+
+    :cond_50
+    if-eqz p2, :cond_6e
+
+    move-object/from16 v0, v16
+
+    iget v0, v0, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I
+
+    move/from16 v17, v0
+
+    const/16 v18, 0x3
+
+    move/from16 v0, v17
+
+    move/from16 v1, v18
+
+    if-ge v0, v1, :cond_9a
+
+    move-object/from16 v0, v16
+
+    iget v0, v0, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I
+
+    move/from16 v17, v0
+
+    const/16 v18, 0x6
+
+    move/from16 v0, v17
+
+    move/from16 v1, v18
+
+    if-ge v0, v1, :cond_9a
+
+    :cond_6e
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    const/16 v18, 0x0
+
+    move-object/from16 v0, v17
+
+    move/from16 v1, v18
+
+    move-object/from16 v2, v16
+
+    invoke-virtual {v0, v1, v2}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v17
+
+    move-object/from16 v0, v16
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord$StartItem;->deliveredTime:J
+
+    move-wide/from16 v19, v0
+
+    sub-long v5, v17, v19
+
+    const-wide/16 v17, 0x2
+
+    mul-long v5, v5, v17
+
+    cmp-long v17, v8, v5
+
+    if-gez v17, :cond_94
+
+    move-wide v8, v5
+
+    :cond_94
+    cmp-long v17, v14, v5
+
+    if-gez v17, :cond_4d
+
+    move-wide v14, v5
+
+    goto :goto_4d
+
+    :cond_9a
+    const-string v17, "ActivityManager"
+
+    new-instance v18, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v19, "Canceling start item "
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    move-object/from16 v0, v16
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;
+
+    move-object/from16 v19, v0
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const-string v19, " in service "
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v19, v0
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v18
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v4, 0x1
+
+    goto :goto_4d
+
+    :cond_ca
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->clear()V
+
+    :cond_d3
+    move-object/from16 v0, p1
+
+    iget v0, v0, Lcom/android/server/am/ServiceRecord;->totalRestartCount:I
+
+    move/from16 v17, v0
+
+    add-int/lit8 v17, v17, 0x1
+
+    move/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    iput v0, v1, Lcom/android/server/am/ServiceRecord;->totalRestartCount:I
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v17, v0
+
+    const-wide/16 v19, 0x0
+
+    cmp-long v17, v17, v19
+
+    if-nez v17, :cond_221
+
+    move-object/from16 v0, p1
+
+    iget v0, v0, Lcom/android/server/am/ServiceRecord;->restartCount:I
+
+    move/from16 v17, v0
+
+    add-int/lit8 v17, v17, 0x1
+
+    move/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    iput v0, v1, Lcom/android/server/am/ServiceRecord;->restartCount:I
+
+    move-object/from16 v0, p1
+
+    iput-wide v8, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    :cond_ff
+    :goto_ff
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v17, v0
+
+    add-long v17, v17, v10
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p1
+
+    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    :cond_10d
+    const/4 v13, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I
+
+    move-result v17
+
+    add-int/lit8 v7, v17, -0x1
+
+    :goto_11a
+    if-ltz v7, :cond_16f
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, p1
+
+    if-eq v12, v0, :cond_285
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v17, v0
+
+    iget-wide v0, v12, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v19, v0
+
+    const-wide/16 v21, 0x2710
+
+    sub-long v19, v19, v21
+
+    cmp-long v17, v17, v19
+
+    if-ltz v17, :cond_285
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v17, v0
+
+    iget-wide v0, v12, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v19, v0
+
+    const-wide/16 v21, 0x2710
+
+    add-long v19, v19, v21
+
+    cmp-long v17, v17, v19
+
+    if-gez v17, :cond_285
+
+    iget-wide v0, v12, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v17, v0
+
+    const-wide/16 v19, 0x2710
+
+    add-long v17, v17, v19
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p1
+
+    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v17, v0
+
+    sub-long v17, v17, v10
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p1
+
+    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    const/4 v13, 0x1
+
+    :cond_16f
+    if-nez v13, :cond_10d
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v17
+
+    if-nez v17, :cond_18e
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_18e
+    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ServiceRecord;->cancelNotification()V
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;
+
+    move-object/from16 v18, v0
+
+    invoke-virtual/range {v17 .. v18}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    move-wide/from16 v19, v0
+
+    invoke-virtual/range {v17 .. v20}, Landroid/os/Handler;->postAtTime(Ljava/lang/Runnable;J)Z
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v17
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v19, v0
+
+    add-long v17, v17, v19
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p1
+
+    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    const-string v17, "ActivityManager"
+
+    new-instance v18, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v19, "Scheduling restart of crashed service "
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    move-object/from16 v19, v0
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const-string v19, " in "
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v19, v0
+
+    invoke-virtual/range {v18 .. v20}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    const-string v19, "ms"
+
+    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v18
+
+    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v18
+
+    invoke-static/range {v17 .. v18}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v17, 0x7553
+
+    const/16 v18, 0x2
+
+    move/from16 v0, v18
+
+    new-array v0, v0, [Ljava/lang/Object;
+
+    move-object/from16 v18, v0
+
+    const/16 v19, 0x0
+
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    move-object/from16 v20, v0
+
+    aput-object v20, v18, v19
+
+    const/16 v19, 0x1
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v20, v0
+
+    invoke-static/range {v20 .. v21}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;
+
+    move-result-object v20
+
+    aput-object v20, v18, v19
+
+    invoke-static/range {v17 .. v18}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    return v4
+
+    :cond_221
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartTime:J
+
+    move-wide/from16 v17, v0
+
+    add-long v17, v17, v14
+
+    cmp-long v17, v10, v17
+
+    if-lez v17, :cond_23b
+
+    const/16 v17, 0x1
+
+    move/from16 v0, v17
+
+    move-object/from16 v1, p1
+
+    iput v0, v1, Lcom/android/server/am/ServiceRecord;->restartCount:I
+
+    move-object/from16 v0, p1
+
+    iput-wide v8, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    goto/16 :goto_ff
+
+    :cond_23b
+    move-object/from16 v0, p1
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->serviceInfo:Landroid/content/pm/ServiceInfo;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    iget-object v0, v0, Landroid/content/pm/ServiceInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v17
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    move/from16 v17, v0
+
+    and-int/lit8 v17, v17, 0x8
+
+    if-eqz v17, :cond_265
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v17, v0
+
+    const-wide/16 v19, 0x2
+
+    div-long v19, v8, v19
+
+    add-long v17, v17, v19
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p1
+
+    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    goto/16 :goto_ff
+
+    :cond_265
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v17, v0
+
+    const-wide/16 v19, 0x4
+
+    mul-long v17, v17, v19
+
+    move-wide/from16 v0, v17
+
+    move-object/from16 v2, p1
+
+    iput-wide v0, v2, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-object/from16 v0, p1
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    move-wide/from16 v17, v0
+
+    cmp-long v17, v17, v8
+
+    if-gez v17, :cond_ff
+
+    move-object/from16 v0, p1
+
+    iput-wide v8, v0, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    goto/16 :goto_ff
+
+    :cond_285
+    add-int/lit8 v7, v7, -0x1
+
+    goto/16 :goto_11a
+.end method
+
+.method public static self()Lcom/android/server/am/ActivityManagerService;
+    .registers 1
+
+    sget-object v0, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    return-object v0
+.end method
+
+.method private final sendPackageBroadcastLocked(I[Ljava/lang/String;)V
+    .registers 6
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v0, v2, -0x1
+
+    :goto_8
+    if-ltz v0, :cond_1e
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v2, :cond_1b
+
+    :try_start_16
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v2, p1, p2}, Landroid/app/IApplicationThread;->dispatchPackageBroadcast(I[Ljava/lang/String;)V
+    :try_end_1b
+    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_1b} :catch_1f
+
+    :cond_1b
+    :goto_1b
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_8
+
+    :cond_1e
+    return-void
+
+    :catch_1f
+    move-exception v2
+
+    goto :goto_1b
+.end method
+
+.method private final sendServiceArgsLocked(Lcom/android/server/am/ServiceRecord;Z)V
+    .registers 12
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    if-nez v6, :cond_9
+
+    :cond_8
+    :goto_8
+    return-void
+
+    :cond_9
+    :goto_9
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-lez v0, :cond_8
+
+    :try_start_11
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    const/4 v1, 0x0
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    move-result-object v8
+
+    check-cast v8, Lcom/android/server/am/ServiceRecord$StartItem;
+
+    iget-object v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;
+
+    if-nez v0, :cond_21
+
+    const/4 v0, 0x1
+
+    if-gt v6, v0, :cond_9
+
+    :cond_21
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    iput-wide v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->deliveredTime:J
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    iget v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I
+
+    add-int/lit8 v0, v0, 0x1
+
+    iput v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I
+
+    iget v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->targetPermissionUid:I
+
+    if-ltz v0, :cond_47
+
+    iget-object v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;
+
+    if-eqz v0, :cond_47
+
+    iget v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->targetPermissionUid:I
+
+    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;
+
+    iget-object v2, v8, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v8}, Lcom/android/server/am/ServiceRecord$StartItem;->getUriPermissionsLocked()Lcom/android/server/am/UriPermissionOwner;
+
+    move-result-object v3
+
+    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;)V
+
+    :cond_47
+    const-string v0, "start"
+
+    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    if-nez p2, :cond_54
+
+    const/4 p2, 0x1
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    :cond_54
+    const/4 v4, 0x0
+
+    iget v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I
+
+    if-lez v0, :cond_5b
+
+    or-int/lit8 v4, v4, 0x2
+
+    :cond_5b
+    iget v0, v8, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I
+
+    if-lez v0, :cond_61
+
+    or-int/lit8 v4, v4, 0x1
+
+    :cond_61
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    iget-boolean v2, v8, Lcom/android/server/am/ServiceRecord$StartItem;->taskRemoved:Z
+
+    iget v3, v8, Lcom/android/server/am/ServiceRecord$StartItem;->id:I
+
+    iget-object v5, v8, Lcom/android/server/am/ServiceRecord$StartItem;->intent:Landroid/content/Intent;
+
+    move-object v1, p1
+
+    invoke-interface/range {v0 .. v5}, Landroid/app/IApplicationThread;->scheduleServiceArgs(Landroid/os/IBinder;ZIILandroid/content/Intent;)V
+    :try_end_6f
+    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_6f} :catch_70
+    .catch Ljava/lang/Exception; {:try_start_11 .. :try_end_6f} :catch_72
+
+    goto :goto_9
+
+    :catch_70
+    move-exception v7
+
+    goto :goto_8
+
+    :catch_72
+    move-exception v7
+
+    const-string v0, "ActivityManager"
+
+    const-string v1, "Unexpected exception"
+
+    invoke-static {v0, v1, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_8
+.end method
+
+.method private final setBroadcastTimeoutLocked(J)V
+    .registers 6
+
+    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastTimeoutMessage:Z
+
+    if-nez v1, :cond_14
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v2, 0x8
+
+    invoke-virtual {v1, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v1, v0, p1, p2}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z
+
+    const/4 v1, 0x1
+
+    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcastTimeoutMessage:Z
+
+    :cond_14
+    return-void
+.end method
+
+.method public static setSystemProcess()V
+    .registers 8
+
+    :try_start_0
+    sget-object v3, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    const-string v4, "activity"
+
+    invoke-static {v4, v3}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V
+
+    const-string v4, "meminfo"
+
+    new-instance v5, Lcom/android/server/am/ActivityManagerService$MemBinder;
+
+    invoke-direct {v5, v3}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    invoke-static {v4, v5}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V
+
+    const-string v4, "gfxinfo"
+
+    new-instance v5, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;
+
+    invoke-direct {v5, v3}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    invoke-static {v4, v5}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V
+
+    const-string v4, "cpuinfo"
+
+    new-instance v5, Lcom/android/server/am/ActivityManagerService$CpuBinder;
+
+    invoke-direct {v5, v3}, Lcom/android/server/am/ActivityManagerService$CpuBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    invoke-static {v4, v5}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V
+
+    const-string v4, "permission"
+
+    new-instance v5, Lcom/android/server/am/ActivityManagerService$PermissionController;
+
+    invoke-direct {v5, v3}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    invoke-static {v4, v5}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v4
+
+    const-string v5, "android"
+
+    const/16 v6, 0x400
+
+    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
+
+    move-result-object v2
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;
+
+    invoke-virtual {v4, v2}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;)V
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    monitor-enter v5
+    :try_end_47
+    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_47} :catch_8b
+
+    :try_start_47
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    sget-object v6, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;
+
+    invoke-virtual {v6}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;
+
+    move-result-object v6
+
+    iget-object v7, v2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    invoke-virtual {v4, v6, v2, v7}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/app/IApplicationThread;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    const/4 v4, 0x1
+
+    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    iput v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    const/16 v4, -0x10
+
+    iput v4, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v4, v6, v7, v0}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v6, v4, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v6
+    :try_end_72
+    .catchall {:try_start_47 .. :try_end_72} :catchall_88
+
+    :try_start_72
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v4, v4, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v4, v7, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
+
+    monitor-exit v6
+    :try_end_7c
+    .catchall {:try_start_72 .. :try_end_7c} :catchall_85
+
+    :try_start_7c
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x1
+
+    invoke-virtual {v4, v0, v6, v7}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    monitor-exit v5
+    :try_end_84
+    .catchall {:try_start_7c .. :try_end_84} :catchall_88
+
+    return-void
+
+    :catchall_85
+    move-exception v4
+
+    :try_start_86
+    monitor-exit v6
+    :try_end_87
+    .catchall {:try_start_86 .. :try_end_87} :catchall_85
+
+    :try_start_87
+    throw v4
+
+    :catchall_88
+    move-exception v4
+
+    monitor-exit v5
+    :try_end_8a
+    .catchall {:try_start_87 .. :try_end_8a} :catchall_88
+
+    :try_start_8a
+    throw v4
+    :try_end_8b
+    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_8a .. :try_end_8b} :catch_8b
+
+    :catch_8b
+    move-exception v1
+
+    new-instance v4, Ljava/lang/RuntimeException;
+
+    const-string v5, "Unable to find android system package"
+
+    invoke-direct {v4, v5, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V
+
+    throw v4
+.end method
+
+.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+    .registers 19
+
+    move-object/from16 v0, p1
+
+    iget v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v1, :cond_29
+
+    move-object/from16 v0, p1
+
+    iget v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v1, v2, :cond_29
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v2
+
+    :try_start_11
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move-object/from16 v0, p1
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v1, v4}, Landroid/util/SparseArray;->remove(I)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v4, 0x14
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v1, v4, v0}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V
+
+    monitor-exit v2
+    :try_end_24
+    .catchall {:try_start_11 .. :try_end_24} :catchall_195
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p1
+
+    iput v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    :cond_29
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcDeaths:[I
+
+    const/4 v2, 0x0
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcDeaths:[I
+
+    const/4 v7, 0x1
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mProcDeaths:[I
+
+    array-length v8, v8
+
+    add-int/lit8 v8, v8, -0x1
+
+    invoke-static {v1, v2, v4, v7, v8}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcDeaths:[I
+
+    const/4 v2, 0x0
+
+    const/4 v4, 0x0
+
+    aput v4, v1, v2
+
+    :try_start_47
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v1, Landroid/content/pm/ApplicationInfo;->uid:I
+    :try_end_4d
+    .catch Ljava/lang/RuntimeException; {:try_start_47 .. :try_end_4d} :catch_1a2
+
+    const/4 v5, 0x0
+
+    :try_start_4e
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v1
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->getPackageGids(Ljava/lang/String;)[I
+    :try_end_5d
+    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_4e .. :try_end_5d} :catch_198
+    .catch Ljava/lang/RuntimeException; {:try_start_4e .. :try_end_5d} :catch_1a2
+
+    move-result-object v5
+
+    :goto_5e
+    :try_start_5e
+    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    if-eqz v1, :cond_8c
+
+    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v2, 0x1
+
+    if-ne v1, v2, :cond_7c
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;
+
+    if-eqz v1, :cond_7c
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v2}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_7c
+
+    const/4 v3, 0x0
+
+    :cond_7c
+    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v2, 0x2
+
+    if-ne v1, v2, :cond_8c
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v1, v1, 0x10
+
+    if-eqz v1, :cond_8c
+
+    const/4 v3, 0x0
+
+    :cond_8c
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v1, v1, 0x2
+
+    if-eqz v1, :cond_9b
+
+    or-int/lit8 v6, v6, 0x1
+
+    or-int/lit8 v6, v6, 0x2
+
+    :cond_9b
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit16 v1, v1, 0x4000
+
+    if-nez v1, :cond_aa
+
+    sget-boolean v1, Ldalvik/system/Zygote;->systemInSafeMode:Z
+
+    const/4 v2, 0x1
+
+    if-ne v1, v2, :cond_ac
+
+    :cond_aa
+    or-int/lit8 v6, v6, 0x8
+
+    :cond_ac
+    const-string v1, "1"
+
+    const-string v2, "debug.checkjni"
+
+    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_bc
+
+    or-int/lit8 v6, v6, 0x2
+
+    :cond_bc
+    const-string v1, "1"
+
+    const-string v2, "debug.jni.logging"
+
+    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_cc
+
+    or-int/lit8 v6, v6, 0x10
+
+    :cond_cc
+    const-string v1, "1"
+
+    const-string v2, "debug.assert"
+
+    invoke-static {v2}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_dc
+
+    or-int/lit8 v6, v6, 0x4
+
+    :cond_dc
+    const-string v1, "android.app.ActivityThread"
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v4, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I
+
+    const/4 v8, 0x0
+
+    move v4, v3
+
+    invoke-static/range {v1 .. v8}, Landroid/os/Process;->start(Ljava/lang/String;Ljava/lang/String;II[III[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;
+
+    move-result-object v14
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
+
+    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v9
+
+    monitor-enter v9
+    :try_end_f7
+    .catch Ljava/lang/RuntimeException; {:try_start_5e .. :try_end_f7} :catch_1a2
+
+    :try_start_f7
+    invoke-virtual {v9}, Lcom/android/internal/os/BatteryStatsImpl;->isOnBattery()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_104
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
+
+    invoke-virtual {v1}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->incStartsLocked()V
+
+    :cond_104
+    monitor-exit v9
+    :try_end_105
+    .catchall {:try_start_f7 .. :try_end_105} :catchall_1c5
+
+    const/16 v2, 0x753e
+
+    const/4 v1, 0x5
+
+    :try_start_108
+    new-array v4, v1, [Ljava/lang/Object;
+
+    const/4 v1, 0x0
+
+    iget v7, v14, Landroid/os/Process$ProcessStartResult;->pid:I
+
+    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v4, v1
+
+    const/4 v1, 0x1
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v7
+
+    aput-object v7, v4, v1
+
+    const/4 v1, 0x2
+
+    move-object/from16 v0, p1
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v7, v4, v1
+
+    const/4 v1, 0x3
+
+    aput-object p2, v4, v1
+
+    const/4 v7, 0x4
+
+    if-eqz p3, :cond_1c8
+
+    move-object/from16 v1, p3
+
+    :goto_129
+    aput-object v1, v4, v7
+
+    invoke-static {v2, v4}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, p1
+
+    iget-boolean v1, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v1, :cond_141
+
+    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;
+
+    move-result-object v1
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget v4, v14, Landroid/os/Process$ProcessStartResult;->pid:I
+
+    invoke-virtual {v1, v2, v4}, Lcom/android/server/Watchdog;->processStarted(Ljava/lang/String;I)V
+
+    :cond_141
+    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;
+
+    const/4 v1, 0x0
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->setLength(I)V
+
+    const-string v1, "Start proc "
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p1
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v1, " for "
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    if-eqz p3, :cond_169
+
+    const-string v1, " "
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_169
+    const-string v1, ": pid="
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    iget v1, v14, Landroid/os/Process$ProcessStartResult;->pid:I
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    const-string v1, " uid="
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    const-string v1, " gids={"
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    if-eqz v5, :cond_1cc
+
+    const/4 v12, 0x0
+
+    :goto_183
+    array-length v1, v5
+
+    if-ge v12, v1, :cond_1cc
+
+    if-eqz v12, :cond_18d
+
+    const-string v1, ", "
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_18d
+    aget v1, v5, v12
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+    :try_end_192
+    .catch Ljava/lang/RuntimeException; {:try_start_108 .. :try_end_192} :catch_1a2
+
+    add-int/lit8 v12, v12, 0x1
+
+    goto :goto_183
+
+    :catchall_195
+    move-exception v1
+
+    :try_start_196
+    monitor-exit v2
+    :try_end_197
+    .catchall {:try_start_196 .. :try_end_197} :catchall_195
+
+    throw v1
+
+    :catch_198
+    move-exception v11
+
+    :try_start_199
+    const-string v1, "ActivityManager"
+
+    const-string v2, "Unable to retrieve gids"
+
+    invoke-static {v1, v2, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_1a0
+    .catch Ljava/lang/RuntimeException; {:try_start_199 .. :try_end_1a0} :catch_1a2
+
+    goto/16 :goto_5e
+
+    :catch_1a2
+    move-exception v11
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p1
+
+    iput v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    const-string v1, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Failure starting process "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p1
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2, v11}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    :goto_1c4
+    return-void
+
+    :catchall_1c5
+    move-exception v1
+
+    :try_start_1c6
+    monitor-exit v9
+    :try_end_1c7
+    .catchall {:try_start_1c6 .. :try_end_1c7} :catchall_1c5
+
+    :try_start_1c7
+    throw v1
+
+    :cond_1c8
+    const-string v1, ""
+
+    goto/16 :goto_129
+
+    :cond_1cc
+    const-string v1, "}"
+
+    invoke-virtual {v10, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v1, "ActivityManager"
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v1, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget v1, v14, Landroid/os/Process$ProcessStartResult;->pid:I
+
+    move-object/from16 v0, p1
+
+    iput v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget-boolean v1, v14, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z
+
+    move-object/from16 v0, p1
+
+    iput-boolean v1, v0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p1
+
+    iput-boolean v1, v0, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v4
+    :try_end_1ee
+    .catch Ljava/lang/RuntimeException; {:try_start_1c7 .. :try_end_1ee} :catch_1a2
+
+    :try_start_1ee
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    iget v2, v14, Landroid/os/Process$ProcessStartResult;->pid:I
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v1, v2, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v2, 0x14
+
+    invoke-virtual {v1, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v13
+
+    move-object/from16 v0, p1
+
+    iput-object v0, v13, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    iget-boolean v1, v14, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z
+
+    if-eqz v1, :cond_214
+
+    const-wide/32 v1, 0x493e0
+
+    :goto_20c
+    invoke-virtual {v7, v13, v1, v2}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z
+
+    monitor-exit v4
+
+    goto :goto_1c4
+
+    :catchall_211
+    move-exception v1
+
+    monitor-exit v4
+    :try_end_213
+    .catchall {:try_start_1ee .. :try_end_213} :catchall_211
+
+    :try_start_213
+    throw v1
+    :try_end_214
+    .catch Ljava/lang/RuntimeException; {:try_start_213 .. :try_end_214} :catch_1a2
+
+    :cond_214
+    const-wide/16 v1, 0x2710
+
+    goto :goto_20c
+.end method
+
+.method private stopProfilerLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)V
+    .registers 8
+
+    if-eqz p1, :cond_6
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    if-ne p1, v1, :cond_f
+
+    :cond_6
+    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    iget-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;
+
+    iget p3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V
+
+    :cond_f
+    if-nez p1, :cond_12
+
+    :goto_11
+    return-void
+
+    :cond_12
+    :try_start_12
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x0
+
+    invoke-interface {v1, v2, p2, v3, p3}, Landroid/app/IApplicationThread;->profilerControl(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;I)V
+    :try_end_19
+    .catch Landroid/os/RemoteException; {:try_start_12 .. :try_end_19} :catch_1a
+
+    goto :goto_11
+
+    :catch_1a
+    move-exception v0
+
+    new-instance v1, Ljava/lang/IllegalStateException;
+
+    const-string v2, "Process disappeared"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+.end method
+
+.method private stopServiceLocked(Lcom/android/server/am/ServiceRecord;)V
+    .registers 5
+
+    const/4 v2, 0x0
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v1
+
+    monitor-enter v1
+
+    :try_start_8
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->stopRunningLocked()V
+
+    monitor-exit v1
+    :try_end_e
+    .catchall {:try_start_8 .. :try_end_e} :catchall_16
+
+    iput-boolean v2, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    iput-boolean v2, p1, Lcom/android/server/am/ServiceRecord;->callStart:Z
+
+    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    return-void
+
+    :catchall_16
+    move-exception v0
+
+    :try_start_17
+    monitor-exit v1
+    :try_end_18
+    .catchall {:try_start_17 .. :try_end_18} :catchall_16
+
+    throw v0
+.end method
+
+.method private taskForIdLocked(I)Lcom/android/server/am/TaskRecord;
+    .registers 6
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    :goto_7
+    if-ge v1, v0, :cond_19
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/TaskRecord;
+
+    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    if-ne v3, p1, :cond_16
+
+    :goto_15
+    return-object v2
+
+    :cond_16
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_7
+
+    :cond_19
+    const/4 v2, 0x0
+
+    goto :goto_15
+.end method
+
+.method private final unscheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)Z
+    .registers 6
+
+    iget-wide v0, p1, Lcom/android/server/am/ServiceRecord;->restartDelay:J
+
+    const-wide/16 v2, 0x0
+
+    cmp-long v0, v0, v2
+
+    if-nez v0, :cond_a
+
+    const/4 v0, 0x0
+
+    :goto_9
+    return v0
+
+    :cond_a
+    invoke-virtual {p1}, Lcom/android/server/am/ServiceRecord;->resetRestartCounter()V
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    iget-object v1, p1, Lcom/android/server/am/ServiceRecord;->restarter:Ljava/lang/Runnable;
+
+    invoke-virtual {v0, v1}, Landroid/os/Handler;->removeCallbacks(Ljava/lang/Runnable;)V
+
+    const/4 v0, 0x1
+
+    goto :goto_9
+.end method
+
+.method private final updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+    .registers 16
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I
+
+    move-result v4
+
+    if-ltz v4, :cond_d
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    :cond_d
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    add-int/lit8 v2, v7, -0x1
+
+    const/4 v6, 0x0
+
+    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    iput v7, p1, Lcom/android/server/am/ProcessRecord;->lruSeq:I
+
+    if-eqz p3, :cond_22
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v7
+
+    iput-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J
+
+    :cond_22
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    if-lez v7, :cond_a0
+
+    iget-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J
+
+    iput-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lruWeight:J
+
+    :goto_2e
+    if-ltz v2, :cond_53
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    if-lez v6, :cond_42
+
+    iget v7, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    sget v8, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt v7, v8, :cond_42
+
+    add-int/lit8 v6, v6, -0x1
+
+    :cond_42
+    iget-wide v7, v5, Lcom/android/server/am/ProcessRecord;->lruWeight:J
+
+    iget-wide v9, p1, Lcom/android/server/am/ProcessRecord;->lruWeight:J
+
+    cmp-long v7, v7, v9
+
+    if-lez v7, :cond_4c
+
+    if-ge v2, p4, :cond_bd
+
+    :cond_4c
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    add-int/lit8 v8, v2, 0x1
+
+    invoke-virtual {v7, v8, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V
+
+    :cond_53
+    if-gez v2, :cond_5b
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    const/4 v8, 0x0
+
+    invoke-virtual {v7, v8, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V
+
+    :cond_5b
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v7}, Ljava/util/HashSet;->size()I
+
+    move-result v7
+
+    if-lez v7, :cond_c1
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v7}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v3
+
+    :cond_69
+    :goto_69
+    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v7
+
+    if-eqz v7, :cond_c1
+
+    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v7, v1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    if-eqz v7, :cond_69
+
+    iget-object v7, v1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    if-eqz v7, :cond_69
+
+    iget-object v7, v1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v7, :cond_69
+
+    iget-object v7, v1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v7, v7, Lcom/android/server/am/ProcessRecord;->lruSeq:I
+
+    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    if-eq v7, v8, :cond_69
+
+    iget-object v7, v1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v7, v7, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v8, 0x0
+
+    add-int/lit8 v9, v2, 0x1
+
+    invoke-direct {p0, v7, v8, p3, v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+
+    goto :goto_69
+
+    :cond_a0
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v7}, Ljava/util/HashMap;->size()I
+
+    move-result v7
+
+    if-lez v7, :cond_b2
+
+    iget-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J
+
+    const-wide/16 v9, 0x3a98
+
+    sub-long/2addr v7, v9
+
+    iput-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lruWeight:J
+
+    const/4 v6, 0x2
+
+    goto/16 :goto_2e
+
+    :cond_b2
+    iget-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J
+
+    const-wide/32 v9, 0x1d4c0
+
+    sub-long/2addr v7, v9
+
+    iput-wide v7, p1, Lcom/android/server/am/ProcessRecord;->lruWeight:J
+
+    const/4 v6, 0x2
+
+    goto/16 :goto_2e
+
+    :cond_bd
+    add-int/lit8 v2, v2, -0x1
+
+    goto/16 :goto_2e
+
+    :cond_c1
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v7}, Ljava/util/HashMap;->size()I
+
+    move-result v7
+
+    if-lez v7, :cond_f4
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v7}, Ljava/util/HashMap;->keySet()Ljava/util/Set;
+
+    move-result-object v7
+
+    invoke-interface {v7}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v3
+
+    :cond_d3
+    :goto_d3
+    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v7
+
+    if-eqz v7, :cond_f4
+
+    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ContentProviderRecord;
+
+    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v7, :cond_d3
+
+    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    iget v7, v7, Lcom/android/server/am/ProcessRecord;->lruSeq:I
+
+    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    if-eq v7, v8, :cond_d3
+
+    iget-object v7, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v8, 0x0
+
+    add-int/lit8 v9, v2, 0x1
+
+    invoke-direct {p0, v7, v8, p3, v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+
+    goto :goto_d3
+
+    :cond_f4
+    if-eqz p2, :cond_f9
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_f9
+    return-void
+.end method
+
+.method private final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+    .registers 13
+
+    const/16 v10, 0xf
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_32
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    :goto_c
+    iget v2, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    sget v8, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt v2, v8, :cond_34
+
+    if-gt v2, v10, :cond_34
+
+    move v5, v6
+
+    :goto_15
+    iget v8, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    add-int/lit8 v8, v8, 0x1
+
+    iput v8, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    iget v8, p1, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    invoke-direct {p0, p1, v8, v1, v7}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;Z)Z
+
+    move-result v4
+
+    iget v8, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    sget v9, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt v8, v9, :cond_36
+
+    iget v8, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    if-gt v8, v10, :cond_36
+
+    move v3, v6
+
+    :goto_2c
+    if-eq v3, v5, :cond_31
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_31
+    return v4
+
+    :cond_32
+    const/4 v1, 0x0
+
+    goto :goto_c
+
+    :cond_34
+    move v5, v7
+
+    goto :goto_15
+
+    :cond_36
+    move v3, v7
+
+    goto :goto_2c
+.end method
+
+.method private final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;Z)Z
+    .registers 17
+
+    iput p2, p1, Lcom/android/server/am/ProcessRecord;->hiddenAdj:I
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v0, :cond_8
+
+    const/4 v10, 0x0
+
+    :cond_7
+    :goto_7
+    return v10
+
+    :cond_8
+    iget-boolean v11, p1, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    const/4 v10, 0x1
+
+    const/4 v4, 0x0
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move v2, p2
+
+    move-object v3, p3
+
+    move/from16 v5, p4
+
+    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZZ)I
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->setRawAdj:I
+
+    if-eq v0, v1, :cond_41
+
+    if-eqz v11, :cond_3d
+
+    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    if-nez v0, :cond_3d
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v9
+
+    monitor-enter v9
+
+    :try_start_28
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J
+
+    move-result-wide v2
+
+    invoke-virtual {v9, v0, v1, v2, v3}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J
+
+    move-result-wide v0
+
+    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J
+
+    monitor-exit v9
+    :try_end_39
+    .catchall {:try_start_28 .. :try_end_39} :catchall_bc
+
+    iget-wide v0, p1, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
+
+    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J
+
+    :cond_3d
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    iput v0, p1, Lcom/android/server/am/ProcessRecord;->setRawAdj:I
+
+    :cond_41
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    if-eq v0, v1, :cond_55
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    invoke-static {v0, v1}, Landroid/os/Process;->setOomAdj(II)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_bf
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    iput v0, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    :cond_55
+    :goto_55
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    if-eq v0, v1, :cond_7
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    iput v0, p1, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;
+
+    if-eqz v0, :cond_e6
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_e6
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Killing "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ": "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v0, 0x7547
+
+    const/4 v1, 0x4
+
+    new-array v1, v1, [Ljava/lang/Object;
+
+    const/4 v2, 0x0
+
+    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    aput-object v3, v1, v2
+
+    const/4 v2, 0x1
+
+    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v3, v1, v2
+
+    const/4 v2, 0x2
+
+    iget v3, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    aput-object v3, v1, v2
+
+    const/4 v2, 0x3
+
+    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;
+
+    aput-object v3, v1, v2
+
+    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v0}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    const/4 v10, 0x0
+
+    goto/16 :goto_7
+
+    :catchall_bc
+    move-exception v0
+
+    :try_start_bd
+    monitor-exit v9
+    :try_end_be
+    .catchall {:try_start_bd .. :try_end_be} :catchall_bc
+
+    throw v0
+
+    :cond_bf
+    const/4 v10, 0x0
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Failed setting oom adj of "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " to "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto/16 :goto_55
+
+    :cond_e6
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v7
+
+    :try_start_ea
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    invoke-static {v0, v1}, Landroid/os/Process;->setProcessGroup(II)V
+    :try_end_f1
+    .catchall {:try_start_ea .. :try_end_f1} :catchall_121
+    .catch Ljava/lang/Exception; {:try_start_ea .. :try_end_f1} :catch_f6
+
+    :goto_f1
+    invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    goto/16 :goto_7
+
+    :catch_f6
+    move-exception v6
+
+    :try_start_f7
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Failed setting process group of "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " to "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v6}, Ljava/lang/Exception;->printStackTrace()V
+    :try_end_120
+    .catchall {:try_start_f7 .. :try_end_120} :catchall_121
+
+    goto :goto_f1
+
+    :catchall_121
+    move-exception v0
+
+    invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v0
+.end method
+
+.method private static writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V
+    .registers 10
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/util/ArrayList",
+            "<",
+            "Landroid/content/ComponentName;",
+            ">;)V"
+        }
+    .end annotation
+
+    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;
+
+    move-result-object v3
+
+    const/4 v4, 0x0
+
+    const/4 v0, 0x0
+
+    :try_start_6
+    const-string v7, "ActivityManager"
+
+    const-string v8, "Writing new set of last done pre-boot receivers..."
+
+    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v5, Ljava/io/FileOutputStream;
+
+    invoke-direct {v5, v3}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
+    :try_end_12
+    .catchall {:try_start_6 .. :try_end_12} :catchall_81
+    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_12} :catch_68
+
+    :try_start_12
+    new-instance v1, Ljava/io/DataOutputStream;
+
+    new-instance v7, Ljava/io/BufferedOutputStream;
+
+    const/16 v8, 0x800
+
+    invoke-direct {v7, v5, v8}, Ljava/io/BufferedOutputStream;-><init>(Ljava/io/OutputStream;I)V
+
+    invoke-direct {v1, v7}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
+    :try_end_1e
+    .catchall {:try_start_12 .. :try_end_1e} :catchall_95
+    .catch Ljava/io/IOException; {:try_start_12 .. :try_end_1e} :catch_9c
+
+    const/16 v7, 0x2710
+
+    :try_start_20
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V
+
+    sget-object v7, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;
+
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
+
+    sget-object v7, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;
+
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
+
+    sget-object v7, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;
+
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
+
+    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V
+
+    const/4 v6, 0x0
+
+    :goto_3a
+    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    if-ge v6, v7, :cond_5d
+
+    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Landroid/content/ComponentName;
+
+    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
+
+    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Landroid/content/ComponentName;
+
+    invoke-virtual {v7}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
+    :try_end_5a
+    .catchall {:try_start_20 .. :try_end_5a} :catchall_98
+    .catch Ljava/io/IOException; {:try_start_20 .. :try_end_5a} :catch_9f
+
+    add-int/lit8 v6, v6, 0x1
+
+    goto :goto_3a
+
+    :cond_5d
+    invoke-static {v5}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z
+
+    if-eqz v1, :cond_65
+
+    :try_start_62
+    invoke-virtual {v1}, Ljava/io/DataOutputStream;->close()V
+    :try_end_65
+    .catch Ljava/io/IOException; {:try_start_62 .. :try_end_65} :catch_90
+
+    :cond_65
+    :goto_65
+    move-object v0, v1
+
+    move-object v4, v5
+
+    :cond_67
+    :goto_67
+    return-void
+
+    :catch_68
+    move-exception v2
+
+    :goto_69
+    :try_start_69
+    const-string v7, "ActivityManager"
+
+    const-string v8, "Failure writing last done pre-boot receivers"
+
+    invoke-static {v7, v8, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    invoke-virtual {v3}, Ljava/io/File;->delete()Z
+    :try_end_73
+    .catchall {:try_start_69 .. :try_end_73} :catchall_81
+
+    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z
+
+    if-eqz v0, :cond_67
+
+    :try_start_78
+    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
+    :try_end_7b
+    .catch Ljava/io/IOException; {:try_start_78 .. :try_end_7b} :catch_7c
+
+    goto :goto_67
+
+    :catch_7c
+    move-exception v2
+
+    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V
+
+    goto :goto_67
+
+    :catchall_81
+    move-exception v7
+
+    :goto_82
+    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z
+
+    if-eqz v0, :cond_8a
+
+    :try_start_87
+    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
+    :try_end_8a
+    .catch Ljava/io/IOException; {:try_start_87 .. :try_end_8a} :catch_8b
+
+    :cond_8a
+    :goto_8a
+    throw v7
+
+    :catch_8b
+    move-exception v2
+
+    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V
+
+    goto :goto_8a
+
+    :catch_90
+    move-exception v2
+
+    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V
+
+    goto :goto_65
+
+    :catchall_95
+    move-exception v7
+
+    move-object v4, v5
+
+    goto :goto_82
+
+    :catchall_98
+    move-exception v7
+
+    move-object v0, v1
+
+    move-object v4, v5
+
+    goto :goto_82
+
+    :catch_9c
+    move-exception v2
+
+    move-object v4, v5
+
+    goto :goto_69
+
+    :catch_9f
+    move-exception v2
+
+    move-object v0, v1
+
+    move-object v4, v5
+
+    goto :goto_69
+.end method
+
+
+# virtual methods
+.method public final activityDestroyed(Landroid/os/IBinder;)V
+    .registers 3
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->activityDestroyed(Landroid/os/IBinder;)V
+
+    return-void
+.end method
+
+.method public final activityIdle(Landroid/os/IBinder;Landroid/content/res/Configuration;Z)V
+    .registers 9
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v3, p1, v4, p2}, Lcom/android/server/am/ActivityStack;->activityIdleInternal(Landroid/os/IBinder;ZLandroid/content/res/Configuration;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v2
+
+    if-eqz p3, :cond_21
+
+    monitor-enter p0
+
+    :try_start_e
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v3, v4, :cond_20
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+    :try_end_16
+    .catchall {:try_start_e .. :try_end_16} :catchall_25
+
+    if-eqz v3, :cond_20
+
+    :try_start_18
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    invoke-virtual {v3}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_1d
+    .catchall {:try_start_18 .. :try_end_1d} :catchall_25
+    .catch Ljava/io/IOException; {:try_start_18 .. :try_end_1d} :catch_28
+
+    :goto_1d
+    :try_start_1d
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V
+
+    :cond_20
+    monitor-exit p0
+    :try_end_21
+    .catchall {:try_start_1d .. :try_end_21} :catchall_25
+
+    :cond_21
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :catchall_25
+    move-exception v3
+
+    :try_start_26
+    monitor-exit p0
+    :try_end_27
+    .catchall {:try_start_26 .. :try_end_27} :catchall_25
+
+    throw v3
+
+    :catch_28
+    move-exception v3
+
+    goto :goto_1d
+.end method
+
+.method public final activityPaused(Landroid/os/IBinder;)V
+    .registers 6
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->activityPaused(Landroid/os/IBinder;Z)V
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+.end method
+
+.method public final activitySlept(Landroid/os/IBinder;)V
+    .registers 6
+
+    const/4 v2, 0x0
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    monitor-enter p0
+
+    :try_start_6
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_13
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityStack;->activitySleptLocked(Lcom/android/server/am/ActivityRecord;)V
+
+    :cond_13
+    monitor-exit p0
+    :try_end_14
+    .catchall {:try_start_6 .. :try_end_14} :catchall_18
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :catchall_18
+    move-exception v3
+
+    :try_start_19
+    monitor-exit p0
+    :try_end_1a
+    .catchall {:try_start_19 .. :try_end_1a} :catchall_18
+
+    throw v3
+.end method
+
+.method public final activityStopped(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
+    .registers 13
+
+    const/4 v2, 0x0
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_11
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "File descriptors passed in Bundle"
+
+    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_11
+    const/4 v1, 0x0
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v6
+
+    monitor-enter p0
+
+    :try_start_17
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_24
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v0, v1, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->activityStoppedLocked(Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
+
+    :cond_24
+    monitor-exit p0
+    :try_end_25
+    .catchall {:try_start_17 .. :try_end_25} :catchall_35
+
+    if-eqz v1, :cond_2e
+
+    const/4 v5, 0x0
+
+    move-object v0, p0
+
+    move-object v3, v2
+
+    move-object v4, v2
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->sendPendingThumbnail(Lcom/android/server/am/ActivityRecord;Landroid/os/IBinder;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;Z)V
+
+    :cond_2e
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
+
+    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :catchall_35
+    move-exception v0
+
+    :try_start_36
+    monitor-exit p0
+    :try_end_37
+    .catchall {:try_start_36 .. :try_end_37} :catchall_35
+
+    throw v0
+.end method
+
+.method final addAppLocked(Landroid/content/pm/ApplicationInfo;)Lcom/android/server/am/ProcessRecord;
+    .registers 8
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x1
+
+    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    iget v3, p1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_1c
+
+    invoke-virtual {p0, v4, p1, v4}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/app/IApplicationThread;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    iget v4, p1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v3, v4, v0}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    invoke-virtual {p0, v0, v5, v5}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    :cond_1c
+    :try_start_1c
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    const/4 v4, 0x0
+
+    invoke-interface {v2, v3, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;Z)V
+    :try_end_26
+    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_26} :catch_73
+    .catch Ljava/lang/IllegalArgumentException; {:try_start_1c .. :try_end_26} :catch_4d
+
+    :goto_26
+    iget v2, p1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v2, v2, 0x9
+
+    const/16 v3, 0x9
+
+    if-ne v2, v3, :cond_34
+
+    iput-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    const/16 v2, -0xc
+
+    iput v2, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I
+
+    :cond_34
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v2, :cond_4c
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I
+
+    move-result v2
+
+    if-gez v2, :cond_4c
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    const-string v2, "added application"
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-direct {p0, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+
+    :cond_4c
+    return-object v0
+
+    :catch_4d
+    move-exception v1
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Failed trying to unstop package "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_26
+
+    :catch_73
+    move-exception v2
+
+    goto :goto_26
+.end method
+
+.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+    .registers 19
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-static {p2}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "_"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    const-string v2, "dropbox"
+
+    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v8
+
+    check-cast v8, Landroid/os/DropBoxManager;
+
+    if-eqz v8, :cond_2d
+
+    invoke-virtual {v8, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_2e
+
+    :cond_2d
+    :goto_2d
+    return-void
+
+    :cond_2e
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    const/16 v1, 0x400
+
+    invoke-direct {v4, v1}, Ljava/lang/StringBuilder;-><init>(I)V
+
+    invoke-direct {p0, p2, p3, v4}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
+
+    if-eqz p4, :cond_4b
+
+    const-string v1, "Activity: "
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "\n"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_4b
+    if-eqz p5, :cond_6c
+
+    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v1, :cond_6c
+
+    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iget v2, p2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-eq v1, v2, :cond_6c
+
+    const-string v1, "Parent-Process: "
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "\n"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_6c
+    if-eqz p5, :cond_81
+
+    if-eq p5, p4, :cond_81
+
+    const-string v1, "Parent-Activity: "
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "\n"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_81
+    if-eqz p6, :cond_92
+
+    const-string v1, "Subject: "
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "\n"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_92
+    const-string v1, "Build: "
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    sget-object v2, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "\n"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_ae
+
+    const-string v1, "Debugger: Connected\n"
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_ae
+    const-string v1, "\n"
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    new-instance v0, Lcom/android/server/am/ActivityManagerService$12;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Error dump: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object v1, p0
+
+    move-object/from16 v3, p7
+
+    move-object/from16 v5, p8
+
+    move-object/from16 v6, p9
+
+    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/String;Landroid/os/DropBoxManager;)V
+
+    if-eqz p2, :cond_da
+
+    iget v1, p2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-ne v1, v2, :cond_df
+
+    :cond_da
+    invoke-virtual {v0}, Ljava/lang/Thread;->run()V
+
+    goto/16 :goto_2d
+
+    :cond_df
+    invoke-virtual {v0}, Ljava/lang/Thread;->start()V
+
+    goto/16 :goto_2d
+.end method
+
+.method final addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
+    .registers 8
+
+    const/4 v0, 0x0
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v1, v2, -0x1
+
+    :goto_9
+    if-ltz v1, :cond_23
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ProcessRecord;
+
+    iget-wide v2, v2, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    cmp-long v2, v2, v4
+
+    if-gez v2, :cond_2c
+
+    const/4 v0, 0x1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    add-int/lit8 v3, v1, 0x1
+
+    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V
+
+    :cond_23
+    if-nez v0, :cond_2b
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V
+
+    :cond_2b
+    return-void
+
+    :cond_2c
+    add-int/lit8 v1, v1, -0x1
+
+    goto :goto_9
+.end method
+
+.method final addRecentTaskLocked(Lcom/android/server/am/TaskRecord;)V
+    .registers 8
+
+    const/4 v5, 0x0
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-lez v0, :cond_12
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    if-ne v3, p1, :cond_12
+
+    :goto_11
+    return-void
+
+    :cond_12
+    const/4 v1, 0x0
+
+    :goto_13
+    if-ge v1, v0, :cond_4a
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/TaskRecord;
+
+    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    if-eqz v3, :cond_2b
+
+    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    iget-object v4, v2, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_39
+
+    :cond_2b
+    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    if-eqz v3, :cond_47
+
+    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    iget-object v4, v2, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v3, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_47
+
+    :cond_39
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v1, v1, -0x1
+
+    add-int/lit8 v0, v0, -0x1
+
+    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    if-nez v3, :cond_47
+
+    move-object p1, v2
+
+    :cond_47
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_13
+
+    :cond_4a
+    const/16 v3, 0x14
+
+    if-lt v0, v3, :cond_55
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    add-int/lit8 v4, v0, -0x1
+
+    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    :cond_55
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v5, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V
+
+    goto :goto_11
+.end method
+
+.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V
+    .registers 15
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcDeaths:[I
+
+    const/4 v8, 0x0
+
+    aget v9, v7, v8
+
+    add-int/lit8 v9, v9, 0x1
+
+    aput v9, v7, v8
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v7}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v6
+
+    monitor-enter v6
+
+    :try_start_10
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v6, v7, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteProcessDiedLocked(II)V
+
+    monitor-exit v6
+    :try_end_18
+    .catchall {:try_start_10 .. :try_end_18} :catchall_e6
+
+    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-ne v7, p2, :cond_fe
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v7, :cond_fe
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v7}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v7
+
+    invoke-interface {p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v8
+
+    if-ne v7, v8, :cond_fe
+
+    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->killedBackground:Z
+
+    if-nez v7, :cond_5a
+
+    const-string v7, "ActivityManager"
+
+    new-instance v8, Ljava/lang/StringBuilder;
+
+    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Process "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, " (pid "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, ") has died."
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_5a
+    const/16 v7, 0x753b
+
+    const/4 v8, 0x2
+
+    new-array v8, v8, [Ljava/lang/Object;
+
+    const/4 v9, 0x0
+
+    iget v10, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    const/4 v9, 0x1
+
+    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v10, v8, v9
+
+    invoke-static {v7, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    if-nez v7, :cond_e9
+
+    const/4 v0, 0x1
+
+    :goto_75
+    const/4 v7, 0x0
+
+    const/4 v8, 0x1
+
+    invoke-direct {p0, p1, v7, v8}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    if-eqz v0, :cond_fd
+
+    const/4 v1, 0x0
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    add-int/lit8 v2, v7, -0x1
+
+    :goto_85
+    if-ltz v2, :cond_9a
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v7, :cond_eb
+
+    iget v7, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    sget v8, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt v7, v8, :cond_eb
+
+    const/4 v1, 0x1
+
+    :cond_9a
+    if-nez v1, :cond_fd
+
+    const/16 v7, 0x7541
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I
+
+    move-result v8
+
+    invoke-static {v7, v8}, Landroid/util/EventLog;->writeEvent(II)I
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v3
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    add-int/lit8 v2, v7, -0x1
+
+    :goto_b3
+    if-ltz v2, :cond_f3
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    if-eq v5, p1, :cond_e3
+
+    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v7, :cond_e3
+
+    iget-wide v7, v5, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J
+
+    const-wide/32 v9, 0xea60
+
+    add-long/2addr v7, v9
+
+    cmp-long v7, v7, v3
+
+    if-gtz v7, :cond_e3
+
+    iget v7, v5, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    const/4 v8, 0x3
+
+    if-gt v7, v8, :cond_ee
+
+    const-wide/16 v7, 0x0
+
+    iput-wide v7, v5, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    :goto_d6
+    const/4 v7, 0x1
+
+    iput-boolean v7, v5, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z
+
+    iput-wide v3, v5, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    :cond_e3
+    add-int/lit8 v2, v2, -0x1
+
+    goto :goto_b3
+
+    :catchall_e6
+    move-exception v7
+
+    :try_start_e7
+    monitor-exit v6
+    :try_end_e8
+    .catchall {:try_start_e7 .. :try_end_e8} :catchall_e6
+
+    throw v7
+
+    :cond_e9
+    const/4 v0, 0x0
+
+    goto :goto_75
+
+    :cond_eb
+    add-int/lit8 v2, v2, -0x1
+
+    goto :goto_85
+
+    :cond_ee
+    iget-wide v7, v5, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J
+
+    iput-wide v7, v5, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    goto :goto_d6
+
+    :cond_f3
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v8, 0x21
+
+    invoke-virtual {v7, v8}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V
+
+    :cond_fd
+    :goto_fd
+    return-void
+
+    :cond_fe
+    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-eq v7, p2, :cond_fd
+
+    const-string v7, "ActivityManager"
+
+    new-instance v8, Ljava/lang/StringBuilder;
+
+    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Process "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, " (pid "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, ") has died and restarted (pid "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    iget v9, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, ")."
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-static {v7, v8}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v7, 0x753b
+
+    const/4 v8, 0x2
+
+    new-array v8, v8, [Ljava/lang/Object;
+
+    const/4 v9, 0x0
+
+    iget v10, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v10
+
+    aput-object v10, v8, v9
+
+    const/4 v9, 0x1
+
+    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v10, v8, v9
+
+    invoke-static {v7, v8}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    goto :goto_fd
+.end method
+
+.method final appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
+    .registers 32
+
+    new-instance v15, Ljava/util/ArrayList;
+
+    const/4 v2, 0x5
+
+    invoke-direct {v15, v2}, Ljava/util/ArrayList;-><init>(I)V
+
+    new-instance v18, Landroid/util/SparseArray;
+
+    const/16 v2, 0x14
+
+    move-object/from16 v0, v18
+
+    invoke-direct {v0, v2}, Landroid/util/SparseArray;-><init>(I)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    if-eqz v2, :cond_38
+
+    :try_start_15
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    move-object/from16 v0, p1
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move-object/from16 v0, p4
+
+    invoke-interface {v2, v3, v4, v0}, Landroid/app/IActivityController;->appEarlyNotResponding(Ljava/lang/String;ILjava/lang/String;)I
+
+    move-result v25
+
+    if-gez v25, :cond_38
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v2, v3, :cond_38
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v2}, Landroid/os/Process;->killProcess(I)V
+    :try_end_38
+    .catch Landroid/os/RemoteException; {:try_start_15 .. :try_end_38} :catch_6e
+
+    :cond_38
+    :goto_38
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v12
+
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V
+
+    monitor-enter p0
+
+    :try_start_40
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z
+
+    if-eqz v2, :cond_75
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "During shutdown skipping ANR: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+    :try_end_6d
+    .catchall {:try_start_40 .. :try_end_6d} :catchall_a3
+
+    :cond_6d
+    :goto_6d
+    return-void
+
+    :catch_6e
+    move-exception v14
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    goto :goto_38
+
+    :cond_75
+    :try_start_75
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    if-eqz v2, :cond_a6
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Skipping duplicate ANR: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    goto :goto_6d
+
+    :catchall_a3
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_a5
+    .catchall {:try_start_75 .. :try_end_a5} :catchall_a3
+
+    throw v2
+
+    :cond_a6
+    :try_start_a6
+    move-object/from16 v0, p1
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-eqz v2, :cond_d4
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Crashing app skipping ANR: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    goto :goto_6d
+
+    :cond_d4
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p1
+
+    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    const/16 v2, 0x7538
+
+    const/4 v3, 0x4
+
+    new-array v3, v3, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    move-object/from16 v0, p1
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x1
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x2
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x3
+
+    aput-object p4, v3, v4
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    move-object/from16 v0, p1
+
+    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v21, v0
+
+    if-eqz p3, :cond_12c
+
+    move-object/from16 v0, p3
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_12c
+
+    move-object/from16 v0, p3
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v2, v2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v2, :cond_12c
+
+    move-object/from16 v0, p3
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v21, v0
+
+    :cond_12c
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v0, v21
+
+    if-eq v0, v2, :cond_13b
+
+    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_13b
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    move-object/from16 v0, p1
+
+    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-eq v2, v3, :cond_152
+
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    move/from16 v0, v21
+
+    if-eq v2, v0, :cond_152
+
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_152
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v16, v2, -0x1
+
+    :goto_15c
+    if-ltz v16, :cond_1a8
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    move/from16 v0, v16
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v24
+
+    check-cast v24, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v24, :cond_19b
+
+    move-object/from16 v0, v24
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v2, :cond_19b
+
+    move-object/from16 v0, v24
+
+    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v22, v0
+
+    if-lez v22, :cond_19b
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v0, v22
+
+    if-eq v0, v2, :cond_19b
+
+    move/from16 v0, v22
+
+    move/from16 v1, v21
+
+    if-eq v0, v1, :cond_19b
+
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    move/from16 v0, v22
+
+    if-eq v0, v2, :cond_19b
+
+    move-object/from16 v0, v24
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v2, :cond_19e
+
+    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v2
+
+    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_19b
+    :goto_19b
+    add-int/lit8 v16, v16, -0x1
+
+    goto :goto_15c
+
+    :cond_19e
+    sget-object v2, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;
+
+    move-object/from16 v0, v18
+
+    move/from16 v1, v22
+
+    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
+
+    goto :goto_19b
+
+    :cond_1a8
+    monitor-exit p0
+    :try_end_1a9
+    .catchall {:try_start_a6 .. :try_end_1a9} :catchall_a3
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;
+
+    move-object/from16 v17, v0
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->setLength(I)V
+
+    const-string v2, "ANR in "
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p1
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    if-eqz p2, :cond_1e1
+
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    if-eqz v2, :cond_1e1
+
+    const-string v2, " ("
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, ")"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_1e1
+    const-string v2, "\n"
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    if-eqz p4, :cond_1fd
+
+    const-string v2, "Reason: "
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_1fd
+    if-eqz p3, :cond_21a
+
+    move-object/from16 v0, p3
+
+    move-object/from16 v1, p2
+
+    if-eq v0, v1, :cond_21a
+
+    const-string v2, "Parent: "
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p3
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "\n"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_21a
+    new-instance v23, Lcom/android/internal/os/ProcessStats;
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, v23
+
+    invoke-direct {v0, v2}, Lcom/android/internal/os/ProcessStats;-><init>(Z)V
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, v23
+
+    move-object/from16 v1, v18
+
+    invoke-static {v2, v15, v0, v1}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessStats;Landroid/util/SparseArray;)Ljava/io/File;
+
+    move-result-object v10
+
+    const/4 v9, 0x0
+
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsThread:Ljava/lang/Thread;
+
+    monitor-enter v3
+
+    :try_start_234
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    invoke-virtual {v2, v12, v13}, Lcom/android/internal/os/ProcessStats;->printCurrentState(J)Ljava/lang/String;
+
+    move-result-object v9
+
+    monitor-exit v3
+    :try_end_23d
+    .catchall {:try_start_234 .. :try_end_23d} :catchall_32d
+
+    invoke-virtual/range {v23 .. v23}, Lcom/android/internal/os/ProcessStats;->printCurrentLoad()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, v23
+
+    invoke-virtual {v0, v12, v13}, Lcom/android/internal/os/ProcessStats;->printCurrentState(J)Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v2, "ActivityManager"
+
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    if-nez v10, :cond_269
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    const/4 v3, 0x3
+
+    invoke-static {v2, v3}, Landroid/os/Process;->sendSignal(II)V
+
+    :cond_269
+    const-string v3, "anr"
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    const/4 v11, 0x0
+
+    move-object/from16 v2, p0
+
+    move-object/from16 v4, p1
+
+    move-object/from16 v6, p2
+
+    move-object/from16 v7, p3
+
+    move-object/from16 v8, p4
+
+    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    if-eqz v2, :cond_2b2
+
+    :try_start_283
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    move-object/from16 v0, p1
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object/from16 v0, p1
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-interface {v2, v3, v4, v5}, Landroid/app/IActivityController;->appNotResponding(Ljava/lang/String;ILjava/lang/String;)I
+
+    move-result v25
+
+    if-eqz v25, :cond_2b2
+
+    if-gez v25, :cond_6d
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v2, v3, :cond_6d
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v2}, Landroid/os/Process;->killProcess(I)V
+    :try_end_2aa
+    .catch Landroid/os/RemoteException; {:try_start_283 .. :try_end_2aa} :catch_2ac
+
+    goto/16 :goto_6d
+
+    :catch_2ac
+    move-exception v14
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    :cond_2b2
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v2
+
+    const-string v3, "anr_show_background"
+
+    const/4 v4, 0x0
+
+    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+
+    move-result v2
+
+    if-eqz v2, :cond_330
+
+    const/16 v26, 0x1
+
+    :goto_2c5
+    monitor-enter p0
+
+    if-nez v26, :cond_333
+
+    :try_start_2c8
+    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z
+
+    move-result v2
+
+    if-nez v2, :cond_333
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v2, v3, :cond_333
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Killing "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ": background ANR"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v2, 0x7547
+
+    const/4 v3, 0x4
+
+    new-array v3, v3, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    move-object/from16 v0, p1
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x1
+
+    move-object/from16 v0, p1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x2
+
+    move-object/from16 v0, p1
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x3
+
+    const-string v5, "background ANR"
+
+    aput-object v5, v3, v4
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, p1
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v2}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    monitor-exit p0
+
+    goto/16 :goto_6d
+
+    :catchall_32a
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_32c
+    .catchall {:try_start_2c8 .. :try_end_32c} :catchall_32a
+
+    throw v2
+
+    :catchall_32d
+    move-exception v2
+
+    :try_start_32e
+    monitor-exit v3
+    :try_end_32f
+    .catchall {:try_start_32e .. :try_end_32f} :catchall_32d
+
+    throw v2
+
+    :cond_330
+    const/16 v26, 0x0
+
+    goto :goto_2c5
+
+    :cond_333
+    if-eqz p2, :cond_390
+
+    :try_start_335
+    move-object/from16 v0, p2
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;
+
+    move-object v3, v2
+
+    :goto_33a
+    if-eqz p4, :cond_393
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "ANR "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    :goto_351
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    invoke-direct {v0, v1, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;
+
+    move-result-object v20
+
+    new-instance v19, Ljava/util/HashMap;
+
+    invoke-direct/range {v19 .. v19}, Ljava/util/HashMap;-><init>()V
+
+    const/4 v2, 0x2
+
+    move-object/from16 v0, v20
+
+    iput v2, v0, Landroid/os/Message;->what:I
+
+    move-object/from16 v0, v19
+
+    move-object/from16 v1, v20
+
+    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    const-string v2, "app"
+
+    move-object/from16 v0, v19
+
+    move-object/from16 v1, p1
+
+    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    if-eqz p2, :cond_384
+
+    const-string v2, "activity"
+
+    move-object/from16 v0, v19
+
+    move-object/from16 v1, p2
+
+    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_384
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v0, v20
+
+    invoke-virtual {v2, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_6d
+
+    :cond_390
+    const/4 v2, 0x0
+
+    move-object v3, v2
+
+    goto :goto_33a
+
+    :cond_393
+    const-string v2, "ANR"
+    :try_end_395
+    .catchall {:try_start_335 .. :try_end_395} :catchall_32a
+
+    goto :goto_351
+.end method
+
+.method public final attachApplication(Landroid/app/IApplicationThread;)V
+    .registers 6
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v0
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v1
+
+    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;I)Z
+
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_11
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_13
+    .catchall {:try_start_1 .. :try_end_13} :catchall_11
+
+    throw v3
+.end method
+
+.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;)V
+    .registers 10
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    invoke-virtual {p1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-nez v4, :cond_29
+
+    const-string v4, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Backup agent created for "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " but not requested!"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    :goto_28
+    return-void
+
+    :cond_29
+    monitor-exit p0
+    :try_end_2a
+    .catchall {:try_start_1 .. :try_end_2a} :catchall_3f
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v2
+
+    :try_start_2e
+    const-string v4, "backup"
+
+    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v4
+
+    invoke-static {v4}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;
+
+    move-result-object v0
+
+    invoke-interface {v0, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnected(Ljava/lang/String;Landroid/os/IBinder;)V
+    :try_end_3b
+    .catchall {:try_start_2e .. :try_end_3b} :catchall_4e
+    .catch Landroid/os/RemoteException; {:try_start_2e .. :try_end_3b} :catch_53
+    .catch Ljava/lang/Exception; {:try_start_2e .. :try_end_3b} :catch_42
+
+    :goto_3b
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    goto :goto_28
+
+    :catchall_3f
+    move-exception v4
+
+    :try_start_40
+    monitor-exit p0
+    :try_end_41
+    .catchall {:try_start_40 .. :try_end_41} :catchall_3f
+
+    throw v4
+
+    :catch_42
+    move-exception v1
+
+    :try_start_43
+    const-string v4, "ActivityManager"
+
+    const-string v5, "Exception trying to deliver BackupAgent binding: "
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V
+    :try_end_4d
+    .catchall {:try_start_43 .. :try_end_4d} :catchall_4e
+
+    goto :goto_3b
+
+    :catchall_4e
+    move-exception v4
+
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v4
+
+    :catch_53
+    move-exception v4
+
+    goto :goto_3b
+.end method
+
+.method public batteryNeedsCpuUpdate()V
+    .registers 1
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V
+
+    return-void
+.end method
+
+.method public batteryPowerChanged(Z)V
+    .registers 4
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V
+
+    monitor-enter p0
+
+    :try_start_4
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v1
+    :try_end_7
+    .catchall {:try_start_4 .. :try_end_7} :catchall_f
+
+    :try_start_7
+    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z
+
+    monitor-exit v1
+    :try_end_a
+    .catchall {:try_start_7 .. :try_end_a} :catchall_c
+
+    :try_start_a
+    monitor-exit p0
+    :try_end_b
+    .catchall {:try_start_a .. :try_end_b} :catchall_f
+
+    return-void
+
+    :catchall_c
+    move-exception v0
+
+    :try_start_d
+    monitor-exit v1
+    :try_end_e
+    .catchall {:try_start_d .. :try_end_e} :catchall_c
+
+    :try_start_e
+    throw v0
+
+    :catchall_f
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_11
+    .catchall {:try_start_e .. :try_end_11} :catchall_f
+
+    throw v0
+.end method
+
+.method public bindBackupAgent(Landroid/content/pm/ApplicationInfo;I)Z
+    .registers 16
+
+    const-string v0, "android.permission.BACKUP"
+
+    const-string v1, "startBackupAgent"
+
+    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    const/4 v11, 0x0
+
+    :try_start_9
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v12
+
+    monitor-enter v12
+    :try_end_10
+    .catchall {:try_start_9 .. :try_end_10} :catchall_62
+
+    :try_start_10
+    iget v0, p1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v12, v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl;->getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    move-result-object v11
+
+    monitor-exit v12
+    :try_end_1b
+    .catchall {:try_start_10 .. :try_end_1b} :catchall_5f
+
+    :try_start_1b
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v0
+
+    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    const/4 v2, 0x0
+
+    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;Z)V
+    :try_end_25
+    .catchall {:try_start_1b .. :try_end_25} :catchall_62
+    .catch Landroid/os/RemoteException; {:try_start_1b .. :try_end_25} :catch_b2
+    .catch Ljava/lang/IllegalArgumentException; {:try_start_1b .. :try_end_25} :catch_65
+
+    :goto_25
+    :try_start_25
+    new-instance v10, Lcom/android/server/am/BackupRecord;
+
+    invoke-direct {v10, v11, p1, p2}, Lcom/android/server/am/BackupRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;Landroid/content/pm/ApplicationInfo;I)V
+
+    if-nez p2, :cond_8b
+
+    new-instance v6, Landroid/content/ComponentName;
+
+    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;
+
+    invoke-direct {v6, v0, v1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    :goto_35
+    iget-object v1, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v5, "backup"
+
+    const/4 v7, 0x0
+
+    move-object v0, p0
+
+    move-object v2, p1
+
+    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;Z)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v9
+
+    if-nez v9, :cond_95
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Unable to start backup agent process "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v0, 0x0
+
+    monitor-exit p0
+    :try_end_5e
+    .catchall {:try_start_25 .. :try_end_5e} :catchall_62
+
+    :goto_5e
+    return v0
+
+    :catchall_5f
+    move-exception v0
+
+    :try_start_60
+    monitor-exit v12
+    :try_end_61
+    .catchall {:try_start_60 .. :try_end_61} :catchall_5f
+
+    :try_start_61
+    throw v0
+
+    :catchall_62
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_64
+    .catchall {:try_start_61 .. :try_end_64} :catchall_62
+
+    throw v0
+
+    :catch_65
+    move-exception v8
+
+    :try_start_66
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Failed trying to unstop package "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ": "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_25
+
+    :cond_8b
+    new-instance v6, Landroid/content/ComponentName;
+
+    const-string v0, "android"
+
+    const-string v1, "FullBackupAgent"
+
+    invoke-direct {v6, v0, v1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    goto :goto_35
+
+    :cond_95
+    iput-object v9, v10, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    invoke-direct {p0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+    :try_end_a2
+    .catchall {:try_start_66 .. :try_end_a2} :catchall_62
+
+    if-eqz v0, :cond_ad
+
+    :try_start_a4
+    iget-object v0, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v1
+
+    invoke-interface {v0, p1, v1, p2}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
+    :try_end_ad
+    .catchall {:try_start_a4 .. :try_end_ad} :catchall_62
+    .catch Landroid/os/RemoteException; {:try_start_a4 .. :try_end_ad} :catch_b0
+
+    :cond_ad
+    :goto_ad
+    :try_start_ad
+    monitor-exit p0
+    :try_end_ae
+    .catchall {:try_start_ad .. :try_end_ae} :catchall_62
+
+    const/4 v0, 0x1
+
+    goto :goto_5e
+
+    :catch_b0
+    move-exception v0
+
+    goto :goto_ad
+
+    :catch_b2
+    move-exception v0
+
+    goto/16 :goto_25
+.end method
+
+.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;I)I
+    .registers 26
+
+    if-eqz p3, :cond_11
+
+    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ne v6, v7, :cond_11
+
+    new-instance v6, Ljava/lang/IllegalArgumentException;
+
+    const-string v7, "File descriptors passed in Intent"
+
+    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v11
+
+    if-nez v11, :cond_58
+
+    new-instance v6, Ljava/lang/SecurityException;
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v18, "Unable to find app for caller "
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v18, " (pid="
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v18
+
+    move/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v18, ") when binding service "
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :catchall_55
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_57
+    .catchall {:try_start_12 .. :try_end_57} :catchall_55
+
+    throw v6
+
+    :cond_58
+    const/4 v5, 0x0
+
+    if-eqz p2, :cond_86
+
+    :try_start_5b
+    move-object/from16 v0, p0
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v6, v0}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v5
+
+    if-nez v5, :cond_86
+
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v18, "Binding with unknown activity: "
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v6, 0x0
+
+    monitor-exit p0
+
+    :goto_85
+    return v6
+
+    :cond_86
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    iget-object v6, v11, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I
+    :try_end_8c
+    .catchall {:try_start_5b .. :try_end_8c} :catchall_55
+
+    const/16 v7, 0x3e8
+
+    if-ne v6, v7, :cond_ad
+
+    :try_start_90
+    const-string v6, "android.intent.extra.client_intent"
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v0, v6}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;
+
+    move-result-object v6
+
+    move-object v0, v6
+
+    check-cast v0, Landroid/app/PendingIntent;
+
+    move-object v9, v0
+    :try_end_9c
+    .catchall {:try_start_90 .. :try_end_9c} :catchall_55
+    .catch Ljava/lang/RuntimeException; {:try_start_90 .. :try_end_9c} :catch_238
+
+    :goto_9c
+    if-eqz v9, :cond_ad
+
+    :try_start_9e
+    const-string v6, "android.intent.extra.client_label"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v0, v6, v7}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I
+
+    move-result v8
+
+    if-eqz v8, :cond_ad
+
+    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->cloneFilter()Landroid/content/Intent;
+
+    move-result-object p3
+
+    :cond_ad
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v6
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v7
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    move-object/from16 v2, p4
+
+    invoke-direct {v0, v1, v2, v6, v7}, Lcom/android/server/am/ActivityManagerService;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;II)Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    move-result-object v16
+
+    if-nez v16, :cond_c4
+
+    const/4 v6, 0x0
+
+    monitor-exit p0
+
+    goto :goto_85
+
+    :cond_c4
+    move-object/from16 v0, v16
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    if-nez v6, :cond_cd
+
+    const/4 v6, -0x1
+
+    monitor-exit p0
+
+    goto :goto_85
+
+    :cond_cd
+    move-object/from16 v0, v16
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v17, v0
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v14
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v17
+
+    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->unscheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)Z
+
+    move-result v6
+
+    if-eqz v6, :cond_e1
+
+    :cond_e1
+    move-object/from16 v0, v17
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1, v11}, Lcom/android/server/am/ServiceRecord;->retrieveAppBindingLocked(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/AppBindRecord;
+
+    move-result-object v4
+
+    new-instance v3, Lcom/android/server/am/ConnectionRecord;
+
+    move-object/from16 v6, p5
+
+    move/from16 v7, p6
+
+    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ConnectionRecord;-><init>(Lcom/android/server/am/AppBindRecord;Lcom/android/server/am/ActivityRecord;Landroid/app/IServiceConnection;IILandroid/app/PendingIntent;)V
+
+    invoke-interface/range {p5 .. p5}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v10
+
+    move-object/from16 v0, v17
+
+    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v10}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Ljava/util/ArrayList;
+
+    if-nez v12, :cond_10e
+
+    new-instance v12, Ljava/util/ArrayList;
+
+    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, v17
+
+    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v10, v12}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_10e
+    invoke-virtual {v12, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v6, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    if-eqz v5, :cond_128
+
+    iget-object v6, v5, Lcom/android/server/am/ActivityRecord;->connections:Ljava/util/HashSet;
+
+    if-nez v6, :cond_123
+
+    new-instance v6, Ljava/util/HashSet;
+
+    invoke-direct {v6}, Ljava/util/HashSet;-><init>()V
+
+    iput-object v6, v5, Lcom/android/server/am/ActivityRecord;->connections:Ljava/util/HashSet;
+
+    :cond_123
+    iget-object v6, v5, Lcom/android/server/am/ActivityRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v6, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    :cond_128
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v6, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    iget v6, v3, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v6, v6, 0x8
+
+    if-eqz v6, :cond_13a
+
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v7, 0x1
+
+    iput-boolean v7, v6, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z
+
+    :cond_13a
+    move-object/from16 v0, p0
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v10}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Ljava/util/ArrayList;
+
+    if-nez v12, :cond_152
+
+    new-instance v12, Ljava/util/ArrayList;
+
+    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v10, v12}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_152
+    invoke-virtual {v12, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    and-int/lit8 v6, p6, 0x1
+
+    if-eqz v6, :cond_174
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v6
+
+    move-object/from16 v0, v17
+
+    iput-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J
+
+    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getFlags()I
+
+    move-result v6
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v17
+
+    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZ)Z
+
+    move-result v6
+
+    if-nez v6, :cond_174
+
+    const/4 v6, 0x0
+
+    monitor-exit p0
+
+    goto/16 :goto_85
+
+    :cond_174
+    move-object/from16 v0, v17
+
+    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v6, :cond_183
+
+    move-object/from16 v0, v17
+
+    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v6}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    :cond_183
+    move-object/from16 v0, v17
+
+    iget-object v6, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v6, :cond_227
+
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-boolean v6, v6, Lcom/android/server/am/IntentBindRecord;->received:Z
+    :try_end_18d
+    .catchall {:try_start_9e .. :try_end_18d} :catchall_55
+
+    if-eqz v6, :cond_227
+
+    :try_start_18f
+    iget-object v6, v3, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    move-object/from16 v0, v17
+
+    iget-object v7, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    iget-object v0, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    invoke-interface {v6, v7, v0}, Landroid/app/IServiceConnection;->connected(Landroid/content/ComponentName;Landroid/os/IBinder;)V
+    :try_end_1a4
+    .catchall {:try_start_18f .. :try_end_1a4} :catchall_55
+    .catch Ljava/lang/Exception; {:try_start_18f .. :try_end_1a4} :catch_1c6
+
+    :goto_1a4
+    :try_start_1a4
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/IntentBindRecord;->apps:Ljava/util/HashMap;
+
+    invoke-virtual {v6}, Ljava/util/HashMap;->size()I
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ne v6, v7, :cond_1bf
+
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-boolean v6, v6, Lcom/android/server/am/IntentBindRecord;->doRebind:Z
+
+    if-eqz v6, :cond_1bf
+
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    const/4 v7, 0x1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v17
+
+    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;Z)Z
+
+    :cond_1bf
+    :goto_1bf
+    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    const/4 v6, 0x1
+
+    goto/16 :goto_85
+
+    :catch_1c6
+    move-exception v13
+
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v18, "Failure sending service "
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, v17
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v18, " to connection "
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v0, v3, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    move-object/from16 v18, v0
+
+    invoke-interface/range {v18 .. v18}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v18
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v18, " (in "
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v0, v3, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v18, ")"
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7, v13}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto/16 :goto_1a4
+
+    :cond_227
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-boolean v6, v6, Lcom/android/server/am/IntentBindRecord;->requested:Z
+
+    if-nez v6, :cond_1bf
+
+    iget-object v6, v4, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v17
+
+    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;Z)Z
+    :try_end_237
+    .catchall {:try_start_1a4 .. :try_end_237} :catchall_55
+
+    goto :goto_1bf
+
+    :catch_238
+    move-exception v6
+
+    goto/16 :goto_9c
+.end method
+
+.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZ)I
+    .registers 30
+
+    monitor-enter p0
+
+    :try_start_1
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p2
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
+
+    move-result-object p2
+
+    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v14
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v15
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v16
+
+    if-eqz v3, :cond_3c
+
+    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v4, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    :goto_1f
+    move-object/from16 v2, p0
+
+    move-object/from16 v5, p2
+
+    move-object/from16 v6, p3
+
+    move-object/from16 v7, p4
+
+    move/from16 v8, p5
+
+    move-object/from16 v9, p6
+
+    move-object/from16 v10, p7
+
+    move-object/from16 v11, p8
+
+    move/from16 v12, p9
+
+    move/from16 v13, p10
+
+    invoke-direct/range {v2 .. v15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    move-result v18
+
+    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return v18
+
+    :cond_3c
+    const/4 v4, 0x0
+
+    goto :goto_1f
+
+    :catchall_3e
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_40
+    .catchall {:try_start_1 .. :try_end_40} :catchall_3e
+
+    throw v2
+.end method
+
+.method broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZ)I
+    .registers 31
+
+    monitor-enter p0
+
+    :try_start_1
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
+
+    move-result-object p3
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v16
+
+    const/4 v3, 0x0
+
+    const/4 v14, -0x1
+
+    move-object/from16 v2, p0
+
+    move-object/from16 v4, p1
+
+    move-object/from16 v5, p3
+
+    move-object/from16 v6, p4
+
+    move-object/from16 v7, p5
+
+    move/from16 v8, p6
+
+    move-object/from16 v9, p7
+
+    move-object/from16 v10, p8
+
+    move-object/from16 v11, p9
+
+    move/from16 v12, p10
+
+    move/from16 v13, p11
+
+    move/from16 v15, p2
+
+    invoke-direct/range {v2 .. v15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    move-result v18
+
+    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return v18
+
+    :catchall_30
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_32
+    .catchall {:try_start_1 .. :try_end_32} :catchall_30
+
+    throw v2
+.end method
+
+.method public cancelIntentSender(Landroid/content/IIntentSender;)V
+    .registers 9
+
+    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;
+
+    if-nez v5, :cond_5
+
+    :goto_4
+    return-void
+
+    :cond_5
+    monitor-enter p0
+
+    :try_start_6
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/PendingIntentRecord;
+
+    move-object v3, v0
+    :try_end_a
+    .catchall {:try_start_6 .. :try_end_a} :catchall_61
+
+    :try_start_a
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
+
+    invoke-interface {v5, v6}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+
+    move-result v4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v5
+
+    if-eq v4, v5, :cond_64
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Permission Denial: cancelIntentSender() from pid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ", uid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " is not allowed to cancel packges "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    const-string v5, "ActivityManager"
+
+    invoke-static {v5, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v5, Ljava/lang/SecurityException;
+
+    invoke-direct {v5, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v5
+    :try_end_5a
+    .catchall {:try_start_a .. :try_end_5a} :catchall_61
+    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_5a} :catch_5a
+
+    :catch_5a
+    move-exception v1
+
+    :try_start_5b
+    new-instance v5, Ljava/lang/SecurityException;
+
+    invoke-direct {v5, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V
+
+    throw v5
+
+    :catchall_61
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_63
+    .catchall {:try_start_5b .. :try_end_63} :catchall_61
+
+    throw v5
+
+    :cond_64
+    const/4 v5, 0x1
+
+    :try_start_65
+    invoke-virtual {p0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
+
+    monitor-exit p0
+    :try_end_69
+    .catchall {:try_start_65 .. :try_end_69} :catchall_61
+
+    goto :goto_4
+.end method
+
+.method cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
+    .registers 5
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p1, Lcom/android/server/am/PendingIntentRecord;->canceled:Z
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    if-eqz p2, :cond_1d
+
+    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v0, :cond_1d
+
+    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;
+
+    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;
+
+    invoke-virtual {v0, v1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    :cond_1d
+    return-void
+.end method
+
+.method checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
+    .registers 8
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_8
+    if-ge v2, v0, :cond_2a
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ContentProviderRecord;
+
+    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v4, p1, :cond_1d
+
+    if-nez p2, :cond_20
+
+    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->bad:Z
+
+    if-nez v4, :cond_20
+
+    const/4 v3, 0x1
+
+    :cond_1d
+    :goto_1d
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_8
+
+    :cond_20
+    invoke-direct {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)V
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    goto :goto_1d
+
+    :cond_2a
+    return v3
+.end method
+
+.method checkAppSwitchAllowedLocked(IILjava/lang/String;)Z
+    .registers 11
+
+    const/4 v5, 0x1
+
+    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v2
+
+    cmp-long v0, v0, v2
+
+    if-gez v0, :cond_c
+
+    :cond_b
+    :goto_b
+    return v5
+
+    :cond_c
+    const-string v1, "android.permission.STOP_APP_SWITCHES"
+
+    const/4 v4, -0x1
+
+    move-object v0, p0
+
+    move v2, p1
+
+    move v3, p2
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v6
+
+    if-eqz v6, :cond_b
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " request from "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " stopped"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v5, 0x0
+
+    goto :goto_b
+.end method
+
+.method checkCallingPermission(Ljava/lang/String;)I
+    .registers 4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I
+
+    move-result v0
+
+    return v0
+.end method
+
+.method checkComponentPermission(Ljava/lang/String;IIIZ)I
+    .registers 13
+
+    const/4 v3, -0x1
+
+    const/4 v2, 0x0
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    invoke-virtual {v4}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityManagerService$Identity;
+
+    if-eqz v1, :cond_3c
+
+    const-string v4, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "checkComponentPermission() adjusting {pid,uid} to {"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget v6, v1, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ","
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget v6, v1, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "}"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget p3, v1, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I
+
+    iget p2, v1, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I
+
+    :cond_3c
+    if-eqz p3, :cond_46
+
+    const/16 v4, 0x3e8
+
+    if-eq p3, v4, :cond_46
+
+    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-ne p2, v4, :cond_47
+
+    :cond_46
+    :goto_46
+    return v2
+
+    :cond_47
+    if-ltz p4, :cond_4b
+
+    if-eq p3, p4, :cond_46
+
+    :cond_4b
+    if-nez p5, :cond_67
+
+    const-string v2, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission denied: checkComponentPermission() owningUid="
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    move v2, v3
+
+    goto :goto_46
+
+    :cond_67
+    if-eqz p1, :cond_46
+
+    :try_start_69
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    invoke-interface {v2, p1, p3}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
+    :try_end_70
+    .catch Landroid/os/RemoteException; {:try_start_69 .. :try_end_70} :catch_72
+
+    move-result v2
+
+    goto :goto_46
+
+    :catch_72
+    move-exception v0
+
+    const-string v2, "ActivityManager"
+
+    const-string v4, "PackageManager is dead?!?"
+
+    invoke-static {v2, v4, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    move v2, v3
+
+    goto :goto_46
+.end method
+
+.method final checkExcessivePowerUsageLocked(Z)V
+    .registers 29
+
+    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v3
+
+    move/from16 v23, p1
+
+    move/from16 v22, p1
+
+    move-object/from16 v0, p0
+
+    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J
+
+    const-wide/16 v10, 0x0
+
+    cmp-long v4, v4, v10
+
+    if-nez v4, :cond_1b
+
+    const/16 v23, 0x0
+
+    :cond_1b
+    move-object/from16 v0, p0
+
+    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J
+
+    const-wide/16 v10, 0x0
+
+    cmp-long v4, v4, v10
+
+    if-nez v4, :cond_27
+
+    const/16 v22, 0x0
+
+    :cond_27
+    invoke-virtual {v3}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_2f
+
+    const/16 v23, 0x0
+
+    :cond_2f
+    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J
+
+    move-result-wide v18
+
+    move-object/from16 v0, p0
+
+    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J
+
+    sub-long v6, v18, v4
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v20
+
+    move-object/from16 v0, p0
+
+    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J
+
+    sub-long v13, v20, v4
+
+    move-wide/from16 v0, v18
+
+    move-object/from16 v2, p0
+
+    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J
+
+    move-wide/from16 v0, v20
+
+    move-object/from16 v2, p0
+
+    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J
+
+    const-wide/32 v4, 0x493e0
+
+    cmp-long v4, v6, v4
+
+    if-gez v4, :cond_58
+
+    const/16 v23, 0x0
+
+    :cond_58
+    const-wide/32 v4, 0x493e0
+
+    cmp-long v4, v13, v4
+
+    if-gez v4, :cond_61
+
+    const/16 v22, 0x0
+
+    :cond_61
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v24
+
+    :cond_69
+    :goto_69
+    if-lez v24, :cond_1e0
+
+    add-int/lit8 v24, v24, -0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    move/from16 v0, v24
+
+    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v17
+
+    check-cast v17, Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v17
+
+    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->keeping:Z
+
+    if-nez v4, :cond_69
+
+    monitor-enter v3
+
+    :try_start_80
+    move-object/from16 v0, v17
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v17
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move-wide/from16 v0, v18
+
+    invoke-virtual {v3, v4, v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J
+
+    move-result-wide v25
+
+    monitor-exit v3
+    :try_end_91
+    .catchall {:try_start_80 .. :try_end_91} :catchall_133
+
+    move-object/from16 v0, v17
+
+    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J
+
+    sub-long v8, v25, v4
+
+    move-object/from16 v0, v17
+
+    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
+
+    move-object/from16 v0, v17
+
+    iget-wide v10, v0, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J
+
+    sub-long v15, v4, v10
+
+    if-eqz v23, :cond_139
+
+    const-wide/16 v4, 0x0
+
+    cmp-long v4, v6, v4
+
+    if-lez v4, :cond_139
+
+    const-wide/16 v4, 0x64
+
+    mul-long/2addr v4, v8
+
+    div-long/2addr v4, v6
+
+    const-wide/16 v10, 0x32
+
+    cmp-long v4, v4, v10
+
+    if-ltz v4, :cond_139
+
+    monitor-enter v3
+
+    :try_start_b4
+    move-object/from16 v0, v17
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v17
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual/range {v3 .. v9}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveWakeLocked(ILjava/lang/String;JJ)V
+
+    monitor-exit v3
+    :try_end_c2
+    .catchall {:try_start_b4 .. :try_end_c2} :catchall_136
+
+    const-string v4, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Excessive wake lock in "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v17
+
+    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v10, " (pid "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v17
+
+    iget v10, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v10, "): held "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v10, " during "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v4, 0x7547
+
+    const/4 v5, 0x4
+
+    new-array v5, v5, [Ljava/lang/Object;
+
+    const/4 v10, 0x0
+
+    move-object/from16 v0, v17
+
+    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v11
+
+    aput-object v11, v5, v10
+
+    const/4 v10, 0x1
+
+    move-object/from16 v0, v17
+
+    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v11, v5, v10
+
+    const/4 v10, 0x2
+
+    move-object/from16 v0, v17
+
+    iget v11, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v11
+
+    aput-object v11, v5, v10
+
+    const/4 v10, 0x3
+
+    const-string v11, "excessive wake lock"
+
+    aput-object v11, v5, v10
+
+    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, v17
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v4}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    goto/16 :goto_69
+
+    :catchall_133
+    move-exception v4
+
+    :try_start_134
+    monitor-exit v3
+    :try_end_135
+    .catchall {:try_start_134 .. :try_end_135} :catchall_133
+
+    throw v4
+
+    :catchall_136
+    move-exception v4
+
+    :try_start_137
+    monitor-exit v3
+    :try_end_138
+    .catchall {:try_start_137 .. :try_end_138} :catchall_136
+
+    throw v4
+
+    :cond_139
+    if-eqz v22, :cond_1d0
+
+    const-wide/16 v4, 0x0
+
+    cmp-long v4, v13, v4
+
+    if-lez v4, :cond_1d0
+
+    const-wide/16 v4, 0x64
+
+    mul-long/2addr v4, v15
+
+    div-long/2addr v4, v13
+
+    const-wide/16 v10, 0x32
+
+    cmp-long v4, v4, v10
+
+    if-ltz v4, :cond_1d0
+
+    monitor-enter v3
+
+    :try_start_14c
+    move-object/from16 v0, v17
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, v17
+
+    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object v10, v3
+
+    invoke-virtual/range {v10 .. v16}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveCpuLocked(ILjava/lang/String;JJ)V
+
+    monitor-exit v3
+    :try_end_15b
+    .catchall {:try_start_14c .. :try_end_15b} :catchall_1cd
+
+    const-string v4, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Excessive CPU in "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v17
+
+    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v10, " (pid "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v17
+
+    iget v10, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v10, "): used "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-wide v0, v15
+
+    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v10, " during "
+
+    invoke-virtual {v5, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v13, v14}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v4, 0x7547
+
+    const/4 v5, 0x4
+
+    new-array v5, v5, [Ljava/lang/Object;
+
+    const/4 v10, 0x0
+
+    move-object/from16 v0, v17
+
+    iget v11, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v11
+
+    aput-object v11, v5, v10
+
+    const/4 v10, 0x1
+
+    move-object/from16 v0, v17
+
+    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v11, v5, v10
+
+    const/4 v10, 0x2
+
+    move-object/from16 v0, v17
+
+    iget v11, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v11
+
+    aput-object v11, v5, v10
+
+    const/4 v10, 0x3
+
+    const-string v11, "excessive cpu"
+
+    aput-object v11, v5, v10
+
+    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    move-object/from16 v0, v17
+
+    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v4}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    goto/16 :goto_69
+
+    :catchall_1cd
+    move-exception v4
+
+    :try_start_1ce
+    monitor-exit v3
+    :try_end_1cf
+    .catchall {:try_start_1ce .. :try_end_1cf} :catchall_1cd
+
+    throw v4
+
+    :cond_1d0
+    move-wide/from16 v0, v25
+
+    move-object/from16 v2, v17
+
+    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J
+
+    move-object/from16 v0, v17
+
+    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
+
+    move-object/from16 v0, v17
+
+    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J
+
+    goto/16 :goto_69
+
+    :cond_1e0
+    return-void
+.end method
+
+.method public checkGrantUriPermission(ILjava/lang/String;Landroid/net/Uri;I)I
+    .registers 6
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;I)I
+
+    move-result v0
+
+    monitor-exit p0
+
+    return v0
+
+    :catchall_7
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_9
+    .catchall {:try_start_1 .. :try_end_9} :catchall_7
+
+    throw v0
+.end method
+
+.method checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;)I
+    .registers 7
+
+    const/4 v1, -0x1
+
+    if-nez p2, :cond_b
+
+    new-instance v1, Ljava/lang/NullPointerException;
+
+    const-string v2, "targetPkg"
+
+    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_b
+    if-nez p3, :cond_e
+
+    :cond_d
+    :goto_d
+    return v1
+
+    :cond_e
+    invoke-virtual {p3}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_d
+
+    invoke-virtual {p3}, Landroid/content/Intent;->getFlags()I
+
+    move-result v1
+
+    invoke-virtual {p0, p1, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;I)I
+
+    move-result v1
+
+    goto :goto_d
+.end method
+
+.method checkGrantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;I)I
+    .registers 26
+
+    and-int/lit8 p4, p4, 0x3
+
+    if-nez p4, :cond_6
+
+    const/4 v8, -0x1
+
+    :cond_5
+    :goto_5
+    return v8
+
+    :cond_6
+    if-eqz p2, :cond_8
+
+    :cond_8
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v5
+
+    const-string v4, "content"
+
+    invoke-virtual/range {p3 .. p3}, Landroid/net/Uri;->getScheme()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-nez v4, :cond_1a
+
+    const/4 v8, -0x1
+
+    goto :goto_5
+
+    :cond_1a
+    invoke-virtual/range {p3 .. p3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v20
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    move-object/from16 v0, v20
+
+    invoke-virtual {v4, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v17
+
+    check-cast v17, Lcom/android/server/am/ContentProviderRecord;
+
+    if-eqz v17, :cond_51
+
+    move-object/from16 v0, v17
+
+    iget-object v6, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    :goto_31
+    if-nez v6, :cond_5a
+
+    const-string v4, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "No content provider found for permission check: "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual/range {p3 .. p3}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v8, -0x1
+
+    goto :goto_5
+
+    :cond_51
+    const/16 v4, 0x800
+
+    :try_start_53
+    move-object/from16 v0, v20
+
+    invoke-interface {v5, v0, v4}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
+    :try_end_58
+    .catch Landroid/os/RemoteException; {:try_start_53 .. :try_end_58} :catch_17e
+
+    move-result-object v6
+
+    goto :goto_31
+
+    :cond_5a
+    if-eqz p2, :cond_69
+
+    :try_start_5c
+    move-object/from16 v0, p2
+
+    invoke-interface {v5, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+    :try_end_61
+    .catch Landroid/os/RemoteException; {:try_start_5c .. :try_end_61} :catch_66
+
+    move-result v8
+
+    if-gez v8, :cond_6a
+
+    const/4 v8, -0x1
+
+    goto :goto_5
+
+    :catch_66
+    move-exception v18
+
+    const/4 v8, -0x1
+
+    goto :goto_5
+
+    :cond_69
+    const/4 v8, -0x1
+
+    :cond_6a
+    if-ltz v8, :cond_7a
+
+    move-object/from16 v4, p0
+
+    move-object/from16 v7, p3
+
+    move/from16 v9, p4
+
+    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Landroid/net/Uri;II)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_97
+
+    const/4 v8, -0x1
+
+    goto :goto_5
+
+    :cond_7a
+    iget-boolean v0, v6, Landroid/content/pm/ProviderInfo;->exported:Z
+
+    move/from16 v16, v0
+
+    and-int/lit8 v4, p4, 0x1
+
+    if-eqz v4, :cond_88
+
+    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;
+
+    if-eqz v4, :cond_88
+
+    const/16 v16, 0x0
+
+    :cond_88
+    and-int/lit8 v4, p4, 0x2
+
+    if-eqz v4, :cond_92
+
+    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;
+
+    if-eqz v4, :cond_92
+
+    const/16 v16, 0x0
+
+    :cond_92
+    if-eqz v16, :cond_97
+
+    const/4 v8, -0x1
+
+    goto/16 :goto_5
+
+    :cond_97
+    iget-boolean v4, v6, Landroid/content/pm/ProviderInfo;->grantUriPermissions:Z
+
+    if-nez v4, :cond_d4
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Provider "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v9, "/"
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v9, " does not allow granting of Uri permissions (uri "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v9, ")"
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_d4
+    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;
+
+    if-eqz v4, :cond_131
+
+    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;
+
+    array-length v15, v4
+
+    const/16 v16, 0x0
+
+    const/16 v19, 0x0
+
+    :goto_df
+    move/from16 v0, v19
+
+    if-ge v0, v15, :cond_f9
+
+    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;
+
+    aget-object v4, v4, v19
+
+    if-eqz v4, :cond_12e
+
+    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;
+
+    aget-object v4, v4, v19
+
+    invoke-virtual/range {p3 .. p3}, Landroid/net/Uri;->getPath()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-virtual {v4, v7}, Landroid/os/PatternMatcher;->match(Ljava/lang/String;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_12e
+
+    const/16 v16, 0x1
+
+    :cond_f9
+    if-nez v16, :cond_131
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Provider "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v9, "/"
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v9, " does not allow granting of permission to path of Uri "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_12e
+    add-int/lit8 v19, v19, 0x1
+
+    goto :goto_df
+
+    :cond_131
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v4
+
+    move/from16 v0, p1
+
+    if-eq v0, v4, :cond_5
+
+    move-object/from16 v9, p0
+
+    move-object v10, v5
+
+    move-object v11, v6
+
+    move-object/from16 v12, p3
+
+    move/from16 v13, p1
+
+    move/from16 v14, p4
+
+    invoke-direct/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Landroid/net/Uri;II)Z
+
+    move-result v4
+
+    if-nez v4, :cond_5
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p3
+
+    move/from16 v2, p1
+
+    move/from16 v3, p4
+
+    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Landroid/net/Uri;II)Z
+
+    move-result v4
+
+    if-nez v4, :cond_5
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Uid "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move/from16 v0, p1
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v9, " does not have permission to uri "
+
+    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :catch_17e
+    move-exception v4
+
+    goto/16 :goto_31
+.end method
+
+.method public checkPermission(Ljava/lang/String;II)I
+    .registers 10
+
+    const/4 v4, -0x1
+
+    if-nez p1, :cond_4
+
+    :goto_3
+    return v4
+
+    :cond_4
+    const/4 v5, 0x1
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move v2, p2
+
+    move v3, p3
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v4
+
+    goto :goto_3
+.end method
+
+.method public checkUriPermission(Landroid/net/Uri;III)I
+    .registers 8
+
+    const/4 v1, 0x0
+
+    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    invoke-virtual {v2}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ActivityManagerService$Identity;
+
+    if-eqz v0, :cond_f
+
+    iget p3, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I
+
+    iget p2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I
+
+    :cond_f
+    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-ne p2, v2, :cond_14
+
+    :goto_13
+    return v1
+
+    :cond_14
+    monitor-enter p0
+
+    :try_start_15
+    invoke-direct {p0, p1, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Landroid/net/Uri;II)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_20
+
+    :goto_1b
+    monitor-exit p0
+
+    goto :goto_13
+
+    :catchall_1d
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_1f
+    .catchall {:try_start_15 .. :try_end_1f} :catchall_1d
+
+    throw v1
+
+    :cond_20
+    const/4 v1, -0x1
+
+    goto :goto_1b
+.end method
+
+.method public clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;)Z
+    .registers 26
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v6
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v5
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v19
+
+    :try_start_c
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v22
+
+    const/16 v21, -0x1
+
+    monitor-enter p0
+    :try_end_13
+    .catchall {:try_start_c .. :try_end_13} :catchall_c7
+
+    :try_start_13
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, p1
+
+    invoke-interface {v0, v1}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+    :try_end_1a
+    .catchall {:try_start_13 .. :try_end_1a} :catchall_c4
+    .catch Landroid/os/RemoteException; {:try_start_13 .. :try_end_1a} :catch_cc
+
+    move-result v21
+
+    :goto_1b
+    const/4 v3, -0x1
+
+    move/from16 v0, v21
+
+    if-ne v0, v3, :cond_40
+
+    :try_start_20
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Invalid packageName:"
+
+    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v3, 0x0
+
+    monitor-exit p0
+    :try_end_3c
+    .catchall {:try_start_20 .. :try_end_3c} :catchall_c4
+
+    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :goto_3f
+    return v3
+
+    :cond_40
+    move/from16 v0, v21
+
+    if-eq v6, v0, :cond_50
+
+    :try_start_44
+    const-string v4, "android.permission.CLEAR_APP_USER_DATA"
+
+    const/4 v7, -0x1
+
+    const/4 v8, 0x1
+
+    move-object/from16 v3, p0
+
+    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I
+
+    move-result v3
+
+    if-nez v3, :cond_93
+
+    :cond_50
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p1
+
+    move/from16 v2, v21
+
+    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;I)V
+
+    monitor-exit p0
+    :try_end_5a
+    .catchall {:try_start_44 .. :try_end_5a} :catchall_c4
+
+    :try_start_5a
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, p1
+
+    move-object/from16 v2, p2
+
+    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;)V
+
+    new-instance v10, Landroid/content/Intent;
+
+    const-string v3, "android.intent.action.PACKAGE_DATA_CLEARED"
+
+    const-string v4, "package"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, p1
+
+    invoke-static {v4, v0, v7}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;
+
+    move-result-object v4
+
+    invoke-direct {v10, v3, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V
+
+    const-string v3, "android.intent.extra.UID"
+
+    move/from16 v0, v21
+
+    invoke-virtual {v10, v3, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;
+
+    const-string v8, "android"
+
+    const/16 v9, 0x3e8
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    const/16 v17, 0x0
+
+    const/16 v18, 0x0
+
+    move-object/from16 v7, p0
+
+    invoke-virtual/range {v7 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZ)I
+    :try_end_8e
+    .catchall {:try_start_5a .. :try_end_8e} :catchall_c7
+    .catch Landroid/os/RemoteException; {:try_start_5a .. :try_end_8e} :catch_cf
+
+    :goto_8e
+    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    const/4 v3, 0x1
+
+    goto :goto_3f
+
+    :cond_93
+    :try_start_93
+    new-instance v3, Ljava/lang/SecurityException;
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v7, " does not have permission:"
+
+    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v7, "android.permission.CLEAR_APP_USER_DATA"
+
+    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v7, " to clear data"
+
+    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v7, "for process:"
+
+    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :catchall_c4
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_c6
+    .catchall {:try_start_93 .. :try_end_c6} :catchall_c4
+
+    :try_start_c6
+    throw v3
+    :try_end_c7
+    .catchall {:try_start_c6 .. :try_end_c7} :catchall_c7
+
+    :catchall_c7
+    move-exception v3
+
+    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v3
+
+    :catch_cc
+    move-exception v3
+
+    goto/16 :goto_1b
+
+    :catch_cf
+    move-exception v3
+
+    goto :goto_8e
+.end method
+
+.method public closeSystemDialogs(Ljava/lang/String;)V
+    .registers 24
+
+    new-instance v8, Landroid/content/Intent;
+
+    const-string v2, "android.intent.action.CLOSE_SYSTEM_DIALOGS"
+
+    invoke-direct {v8, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    const/high16 v2, 0x4000
+
+    invoke-virtual {v8, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    if-eqz p1, :cond_15
+
+    const-string v2, "reason"
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v8, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    :cond_15
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v18
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v19
+
+    monitor-enter p0
+
+    :try_start_1e
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I
+
+    move-result v4
+
+    :cond_26
+    :goto_26
+    if-lez v4, :cond_40
+
+    add-int/lit8 v4, v4, -0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2, v4}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;
+
+    move-result-object v21
+
+    check-cast v21, Landroid/app/IActivityWatcher;
+    :try_end_34
+    .catchall {:try_start_1e .. :try_end_34} :catchall_95
+
+    if-eqz v21, :cond_26
+
+    :try_start_36
+    move-object/from16 v0, v21
+
+    move-object/from16 v1, p1
+
+    invoke-interface {v0, v1}, Landroid/app/IActivityWatcher;->closingSystemDialogs(Ljava/lang/String;)V
+    :try_end_3d
+    .catchall {:try_start_36 .. :try_end_3d} :catchall_95
+    .catch Landroid/os/RemoteException; {:try_start_36 .. :try_end_3d} :catch_3e
+
+    goto :goto_26
+
+    :catch_3e
+    move-exception v2
+
+    goto :goto_26
+
+    :cond_40
+    :try_start_40
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v2, v0}, Lcom/android/server/wm/WindowManagerService;->closeSystemDialogs(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v4, v2, -0x1
+
+    :goto_5c
+    if-ltz v4, :cond_7e
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;
+
+    iget v2, v2, Landroid/content/pm/ActivityInfo;->flags:I
+
+    and-int/lit16 v2, v2, 0x100
+
+    if-eqz v2, :cond_7b
+
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const-string v7, "close-sys"
+
+    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    :cond_7b
+    add-int/lit8 v4, v4, -0x1
+
+    goto :goto_5c
+
+    :cond_7e
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    const/16 v17, -0x1
+
+    move-object/from16 v5, p0
+
+    invoke-direct/range {v5 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    monitor-exit p0
+    :try_end_91
+    .catchall {:try_start_40 .. :try_end_91} :catchall_95
+
+    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :catchall_95
+    move-exception v2
+
+    :try_start_96
+    monitor-exit p0
+    :try_end_97
+    .catchall {:try_start_96 .. :try_end_97} :catchall_95
+
+    throw v2
+.end method
+
+.method collectProcesses(Ljava/io/PrintWriter;I[Ljava/lang/String;)Ljava/util/ArrayList;
+    .registers 10
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Ljava/io/PrintWriter;",
+            "I[",
+            "Ljava/lang/String;",
+            ")",
+            "Ljava/util/ArrayList",
+            "<",
+            "Lcom/android/server/am/ProcessRecord;",
+            ">;"
+        }
+    .end annotation
+
+    monitor-enter p0
+
+    if-eqz p3, :cond_6b
+
+    :try_start_3
+    array-length v4, p3
+
+    if-le v4, p2, :cond_6b
+
+    aget-object v4, p3, p2
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v4, v5}, Ljava/lang/String;->charAt(I)C
+
+    move-result v4
+
+    const/16 v5, 0x2d
+
+    if-eq v4, v5, :cond_6b
+
+    new-instance v3, Ljava/util/ArrayList;
+
+    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V
+    :try_end_16
+    .catchall {:try_start_3 .. :try_end_16} :catchall_47
+
+    const/4 v1, -0x1
+
+    :try_start_17
+    aget-object v4, p3, p2
+
+    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+    :try_end_1c
+    .catchall {:try_start_17 .. :try_end_1c} :catchall_47
+    .catch Ljava/lang/NumberFormatException; {:try_start_17 .. :try_end_1c} :catch_75
+
+    move-result v1
+
+    :goto_1d
+    :try_start_1d
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v4
+
+    add-int/lit8 v0, v4, -0x1
+
+    :goto_25
+    if-ltz v0, :cond_4a
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ProcessRecord;
+
+    iget v4, v2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-ne v4, v1, :cond_39
+
+    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_36
+    :goto_36
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_25
+
+    :cond_39
+    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aget-object v5, p3, p2
+
+    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_36
+
+    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_36
+
+    :catchall_47
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_49
+    .catchall {:try_start_1d .. :try_end_49} :catchall_47
+
+    throw v4
+
+    :cond_4a
+    :try_start_4a
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v4
+
+    if-gtz v4, :cond_72
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "No process found for: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    aget-object v5, p3, p2
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {p1, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/4 v4, 0x0
+
+    monitor-exit p0
+
+    :goto_6a
+    return-object v4
+
+    :cond_6b
+    new-instance v3, Ljava/util/ArrayList;
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V
+
+    :cond_72
+    monitor-exit p0
+    :try_end_73
+    .catchall {:try_start_4a .. :try_end_73} :catchall_47
+
+    move-object v4, v3
+
+    goto :goto_6a
+
+    :catch_75
+    move-exception v4
+
+    goto :goto_1d
+.end method
+
+.method compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+    .registers 3
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
+.method public crashApplication(IILjava/lang/String;Ljava/lang/String;)V
+    .registers 16
+
+    const-string v8, "android.permission.FORCE_STOP_PACKAGES"
+
+    invoke-virtual {p0, v8}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v8
+
+    if-eqz v8, :cond_44
+
+    new-instance v8, Ljava/lang/StringBuilder;
+
+    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Permission Denial: crashApplication() from pid="
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v9
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, ", uid="
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v9
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, " requires "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, "android.permission.FORCE_STOP_PACKAGES"
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    const-string v8, "ActivityManager"
+
+    invoke-static {v8, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v8, Ljava/lang/SecurityException;
+
+    invoke-direct {v8, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v8
+
+    :cond_44
+    monitor-enter p0
+
+    const/4 v6, 0x0
+
+    :try_start_46
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v9
+    :try_end_49
+    .catchall {:try_start_46 .. :try_end_49} :catchall_b6
+
+    const/4 v0, 0x0
+
+    :goto_4a
+    :try_start_4a
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v8}, Landroid/util/SparseArray;->size()I
+
+    move-result v8
+
+    if-ge v0, v8, :cond_68
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v8, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v8, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v8, v8, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    if-eq v8, p1, :cond_63
+
+    :cond_60
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_4a
+
+    :cond_63
+    iget v8, v5, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-ne v8, p2, :cond_99
+
+    move-object v6, v5
+
+    :cond_68
+    monitor-exit v9
+    :try_end_69
+    .catchall {:try_start_4a .. :try_end_69} :catchall_b3
+
+    if-nez v6, :cond_b9
+
+    :try_start_6b
+    const-string v8, "ActivityManager"
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "crashApplication: nothing for uid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " initialPid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " packageName="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-static {v8, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+    :try_end_98
+    .catchall {:try_start_6b .. :try_end_98} :catchall_b6
+
+    :goto_98
+    return-void
+
+    :cond_99
+    :try_start_99
+    iget-object v8, v5, Lcom/android/server/am/ProcessRecord;->pkgList:Ljava/util/HashSet;
+
+    invoke-virtual {v8}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v1
+
+    :cond_9f
+    :goto_9f
+    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v8
+
+    if-eqz v8, :cond_60
+
+    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Ljava/lang/String;
+
+    invoke-virtual {v7, p3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v8
+
+    if-eqz v8, :cond_9f
+
+    move-object v6, v5
+
+    goto :goto_9f
+
+    :catchall_b3
+    move-exception v8
+
+    monitor-exit v9
+    :try_end_b5
+    .catchall {:try_start_99 .. :try_end_b5} :catchall_b3
+
+    :try_start_b5
+    throw v8
+
+    :catchall_b6
+    move-exception v8
+
+    monitor-exit p0
+    :try_end_b8
+    .catchall {:try_start_b5 .. :try_end_b8} :catchall_b6
+
+    throw v8
+
+    :cond_b9
+    :try_start_b9
+    iget-object v8, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v8, :cond_da
+
+    iget v8, v6, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {}, Landroid/os/Process;->myPid()I
+
+    move-result v9
+
+    if-ne v8, v9, :cond_ce
+
+    const-string v8, "ActivityManager"
+
+    const-string v9, "crashApplication: trying to crash self!"
+
+    invoke-static {v8, v9}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    goto :goto_98
+
+    :cond_ce
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+    :try_end_d1
+    .catchall {:try_start_b9 .. :try_end_d1} :catchall_b6
+
+    move-result-wide v2
+
+    :try_start_d2
+    iget-object v8, v6, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v8, p4}, Landroid/app/IApplicationThread;->scheduleCrash(Ljava/lang/String;)V
+    :try_end_d7
+    .catchall {:try_start_d2 .. :try_end_d7} :catchall_b6
+    .catch Landroid/os/RemoteException; {:try_start_d2 .. :try_end_d7} :catch_dc
+
+    :goto_d7
+    :try_start_d7
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :cond_da
+    monitor-exit p0
+    :try_end_db
+    .catchall {:try_start_d7 .. :try_end_db} :catchall_b6
+
+    goto :goto_98
+
+    :catch_dc
+    move-exception v8
+
+    goto :goto_d7
+.end method
+
+.method createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;
+    .registers 8
+
+    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;
+
+    move-result-object v0
+
+    if-nez v0, :cond_8
+
+    const/4 v1, 0x0
+
+    :goto_7
+    return-object v1
+
+    :cond_8
+    new-instance v1, Landroid/content/Intent;
+
+    const-string v2, "android.intent.action.APP_ERROR"
+
+    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;
+
+    invoke-virtual {v1, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    const-string v2, "android.intent.extra.BUG_REPORT"
+
+    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;
+
+    const/high16 v2, 0x1000
+
+    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    goto :goto_7
+.end method
+
+.method decProviderCount(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)Z
+    .registers 7
+
+    const/4 v1, 0x1
+
+    if-eqz p1, :cond_30
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Ljava/lang/Integer;
+
+    if-eqz v0, :cond_13
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v2
+
+    if-gt v2, v1, :cond_1e
+
+    :cond_13
+    iget-object v2, p2, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    invoke-virtual {v2, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v2, p2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    :goto_1d
+    return v1
+
+    :cond_1e
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    add-int/lit8 v3, v3, -0x1
+
+    invoke-direct {v2, v3}, Ljava/lang/Integer;-><init>(I)V
+
+    invoke-virtual {v1, p2, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :goto_2e
+    const/4 v1, 0x0
+
+    goto :goto_1d
+
+    :cond_30
+    iget v1, p2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    add-int/lit8 v1, v1, 0x1
+
+    iput v1, p2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    goto :goto_2e
+.end method
+
+.method public dismissKeyguardOnNextActivity()V
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->dismissKeyguardOnNextActivityLocked()V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_8
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_a
+    .catchall {:try_start_1 .. :try_end_a} :catchall_8
+
+    throw v0
+.end method
+
+.method final doPendingActivityLaunchesLocked(Z)V
+    .registers 12
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingActivityLaunches:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    if-gtz v7, :cond_9
+
+    :goto_8
+    return-void
+
+    :cond_9
+    const/4 v8, 0x0
+
+    :goto_a
+    if-ge v8, v7, :cond_2f
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingActivityLaunches:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v9, Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;->r:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v2, v9, Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;->sourceRecord:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v3, v9, Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;->grantedUriPermissions:[Landroid/net/Uri;
+
+    iget v4, v9, Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;->grantedMode:I
+
+    iget-boolean v5, v9, Lcom/android/server/am/ActivityManagerService$PendingActivityLaunch;->onlyIfNeeded:Z
+
+    if-eqz p1, :cond_2d
+
+    add-int/lit8 v6, v7, -0x1
+
+    if-ne v8, v6, :cond_2d
+
+    const/4 v6, 0x1
+
+    :goto_27
+    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityStack;->startActivityUncheckedLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;[Landroid/net/Uri;IZZ)I
+
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_a
+
+    :cond_2d
+    const/4 v6, 0x0
+
+    goto :goto_27
+
+    :cond_2f
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingActivityLaunches:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V
+
+    goto :goto_8
+.end method
+
+.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
+    .registers 35
+
+    const-string v1, "android.permission.DUMP"
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v1
+
+    if-eqz v1, :cond_41
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Permission Denial: can\'t dump ActivityManager from from pid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " without permission "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "android.permission.DUMP"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_40
+    :goto_40
+    return-void
+
+    :cond_41
+    const/16 v17, 0x0
+
+    const/4 v7, 0x0
+
+    const/16 v28, 0x0
+
+    const/4 v5, 0x0
+
+    :goto_47
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-ge v5, v1, :cond_61
+
+    aget-object v30, p3, v5
+
+    if-eqz v30, :cond_61
+
+    invoke-virtual/range {v30 .. v30}, Ljava/lang/String;->length()I
+
+    move-result v1
+
+    if-lez v1, :cond_61
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, v30
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->charAt(I)C
+
+    move-result v1
+
+    const/16 v2, 0x2d
+
+    if-eq v1, v2, :cond_91
+
+    :cond_61
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-ge v5, v1, :cond_332
+
+    aget-object v21, p3, v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    const-string v1, "activities"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_7e
+
+    const-string v1, "a"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_166
+
+    :cond_7e
+    monitor-enter p0
+
+    const/4 v6, 0x1
+
+    const/4 v8, 0x0
+
+    move-object/from16 v1, p0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v4, p3
+
+    :try_start_89
+    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto :goto_40
+
+    :catchall_8e
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_90
+    .catchall {:try_start_89 .. :try_end_90} :catchall_8e
+
+    throw v1
+
+    :cond_91
+    add-int/lit8 v5, v5, 0x1
+
+    const-string v1, "-a"
+
+    move-object/from16 v0, v30
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_a0
+
+    const/16 v17, 0x1
+
+    goto :goto_47
+
+    :cond_a0
+    const-string v1, "-c"
+
+    move-object/from16 v0, v30
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_ac
+
+    const/4 v7, 0x1
+
+    goto :goto_47
+
+    :cond_ac
+    const-string v1, "-h"
+
+    move-object/from16 v0, v30
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_144
+
+    const-string v1, "Activity manager dump options:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  [-a] [-c] [-h] [cmd] ..."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  cmd may be one of:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    a[ctivities]: activity stack state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    b[roadcasts] [PACKAGE_NAME]: broadcast state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    i[ntents] [PACKAGE_NAME]: pending intent state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    p[rocesses] [PACKAGE_NAME]: process state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    o[om]: out of memory management"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    prov[iders] [COMP_SPEC ...]: content provider state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    s[ervices] [COMP_SPEC ...]: service state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    service [COMP_SPEC]: service client-side state"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    package [PACKAGE_NAME]: all state related to given package"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    all: dump all activities"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    top: dump the top activity"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  cmd may also be a COMP_SPEC to dump activities."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  COMP_SPEC may be a component name (com.foo/.myApp),"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    a partial substring in a component name, a"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "    hex object identifier."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  -a: include all available server state."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  -c: include client state."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_40
+
+    :cond_144
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Unknown argument: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    move-object/from16 v0, v30
+
+    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "; use -h for help"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_47
+
+    :cond_166
+    const-string v1, "broadcasts"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_17a
+
+    const-string v1, "b"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1b1
+
+    :cond_17a
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-lt v5, v1, :cond_196
+
+    const/4 v14, 0x0
+
+    sget-object v15, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;
+
+    :cond_182
+    :goto_182
+    monitor-enter p0
+
+    const/4 v13, 0x1
+
+    move-object/from16 v8, p0
+
+    move-object/from16 v9, p1
+
+    move-object/from16 v10, p2
+
+    move-object/from16 v11, p3
+
+    move v12, v5
+
+    :try_start_18d
+    invoke-virtual/range {v8 .. v14}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_193
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_195
+    .catchall {:try_start_18d .. :try_end_195} :catchall_193
+
+    throw v1
+
+    :cond_196
+    aget-object v14, p3, v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    sub-int/2addr v1, v5
+
+    new-array v15, v1, [Ljava/lang/String;
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    const/4 v2, 0x2
+
+    if-le v1, v2, :cond_182
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    array-length v2, v0
+
+    sub-int/2addr v2, v5
+
+    move-object/from16 v0, p3
+
+    invoke-static {v0, v5, v15, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    goto :goto_182
+
+    :cond_1b1
+    const-string v1, "intents"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_1c5
+
+    const-string v1, "i"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1fc
+
+    :cond_1c5
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-lt v5, v1, :cond_1e1
+
+    const/4 v14, 0x0
+
+    sget-object v15, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;
+
+    :cond_1cd
+    :goto_1cd
+    monitor-enter p0
+
+    const/4 v13, 0x1
+
+    move-object/from16 v8, p0
+
+    move-object/from16 v9, p1
+
+    move-object/from16 v10, p2
+
+    move-object/from16 v11, p3
+
+    move v12, v5
+
+    :try_start_1d8
+    invoke-virtual/range {v8 .. v14}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_1de
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_1e0
+    .catchall {:try_start_1d8 .. :try_end_1e0} :catchall_1de
+
+    throw v1
+
+    :cond_1e1
+    aget-object v14, p3, v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    sub-int/2addr v1, v5
+
+    new-array v15, v1, [Ljava/lang/String;
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    const/4 v2, 0x2
+
+    if-le v1, v2, :cond_1cd
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    array-length v2, v0
+
+    sub-int/2addr v2, v5
+
+    move-object/from16 v0, p3
+
+    invoke-static {v0, v5, v15, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    goto :goto_1cd
+
+    :cond_1fc
+    const-string v1, "processes"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_210
+
+    const-string v1, "p"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_247
+
+    :cond_210
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-lt v5, v1, :cond_22c
+
+    const/4 v14, 0x0
+
+    sget-object v15, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;
+
+    :cond_218
+    :goto_218
+    monitor-enter p0
+
+    const/4 v13, 0x1
+
+    move-object/from16 v8, p0
+
+    move-object/from16 v9, p1
+
+    move-object/from16 v10, p2
+
+    move-object/from16 v11, p3
+
+    move v12, v5
+
+    :try_start_223
+    invoke-virtual/range {v8 .. v14}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_229
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_22b
+    .catchall {:try_start_223 .. :try_end_22b} :catchall_229
+
+    throw v1
+
+    :cond_22c
+    aget-object v14, p3, v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    sub-int/2addr v1, v5
+
+    new-array v15, v1, [Ljava/lang/String;
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    const/4 v2, 0x2
+
+    if-le v1, v2, :cond_218
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    array-length v2, v0
+
+    sub-int/2addr v2, v5
+
+    move-object/from16 v0, p3
+
+    invoke-static {v0, v5, v15, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    goto :goto_218
+
+    :cond_247
+    const-string v1, "oom"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_25b
+
+    const-string v1, "o"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_26e
+
+    :cond_25b
+    monitor-enter p0
+
+    const/4 v6, 0x1
+
+    move-object/from16 v1, p0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v4, p3
+
+    :try_start_265
+    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_26b
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_26d
+    .catchall {:try_start_265 .. :try_end_26d} :catchall_26b
+
+    throw v1
+
+    :cond_26e
+    const-string v1, "providers"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_282
+
+    const-string v1, "prov"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_29a
+
+    :cond_282
+    monitor-enter p0
+
+    const/16 v20, 0x1
+
+    const/16 v21, 0x0
+
+    move-object/from16 v15, p0
+
+    move-object/from16 v16, p1
+
+    move-object/from16 v17, p2
+
+    move-object/from16 v18, p3
+
+    move/from16 v19, v5
+
+    :try_start_291
+    invoke-virtual/range {v15 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_297
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_299
+    .catchall {:try_start_291 .. :try_end_299} :catchall_297
+
+    throw v1
+
+    :cond_29a
+    const-string v1, "service"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_2f6
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-lt v5, v1, :cond_2db
+
+    const/4 v14, 0x0
+
+    sget-object v15, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;
+
+    :cond_2ac
+    :goto_2ac
+    const/16 v16, 0x0
+
+    move-object/from16 v11, p0
+
+    move-object/from16 v12, p1
+
+    move-object/from16 v13, p2
+
+    invoke-virtual/range {v11 .. v17}, Lcom/android/server/am/ActivityManagerService;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
+
+    move-result v1
+
+    if-nez v1, :cond_40
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "No services match: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "Use -h for help."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_40
+
+    :cond_2db
+    aget-object v14, p3, v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    sub-int/2addr v1, v5
+
+    new-array v15, v1, [Ljava/lang/String;
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    const/4 v2, 0x2
+
+    if-le v1, v2, :cond_2ac
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    array-length v2, v0
+
+    sub-int/2addr v2, v5
+
+    move-object/from16 v0, p3
+
+    invoke-static {v0, v5, v15, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    goto :goto_2ac
+
+    :cond_2f6
+    const-string v1, "package"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_3f2
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    if-lt v5, v1, :cond_315
+
+    const-string v1, "package: no package name specified"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "Use -h for help."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_40
+
+    :cond_315
+    aget-object v28, p3, v5
+
+    add-int/lit8 v5, v5, 0x1
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    sub-int/2addr v1, v5
+
+    new-array v15, v1, [Ljava/lang/String;
+
+    move-object/from16 v0, p3
+
+    array-length v1, v0
+
+    const/4 v2, 0x2
+
+    if-le v1, v2, :cond_32f
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    array-length v2, v0
+
+    sub-int/2addr v2, v5
+
+    move-object/from16 v0, p3
+
+    invoke-static {v0, v5, v15, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    :cond_32f
+    move-object/from16 p3, v15
+
+    const/4 v5, 0x0
+
+    :cond_332
+    monitor-enter p0
+
+    move-object/from16 v22, p0
+
+    move-object/from16 v23, p1
+
+    move-object/from16 v24, p2
+
+    move-object/from16 v25, p3
+
+    move/from16 v26, v5
+
+    move/from16 v27, v17
+
+    :try_start_33f
+    invoke-virtual/range {v22 .. v28}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    move-result v29
+
+    if-eqz v29, :cond_34c
+
+    const-string v1, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_34c
+    if-eqz v17, :cond_355
+
+    const-string v1, "-------------------------------------------------------------------------------"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_355
+    move-object/from16 v22, p0
+
+    move-object/from16 v23, p1
+
+    move-object/from16 v24, p2
+
+    move-object/from16 v25, p3
+
+    move/from16 v26, v5
+
+    move/from16 v27, v17
+
+    invoke-virtual/range {v22 .. v28}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    move-result v29
+
+    if-eqz v29, :cond_36e
+
+    const-string v1, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_36e
+    if-eqz v17, :cond_377
+
+    const-string v1, "-------------------------------------------------------------------------------"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_377
+    move-object/from16 v22, p0
+
+    move-object/from16 v23, p1
+
+    move-object/from16 v24, p2
+
+    move-object/from16 v25, p3
+
+    move/from16 v26, v5
+
+    move/from16 v27, v17
+
+    invoke-virtual/range {v22 .. v28}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    move-result v29
+
+    if-eqz v29, :cond_390
+
+    const-string v1, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_390
+    if-eqz v17, :cond_399
+
+    const-string v1, "-------------------------------------------------------------------------------"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_399
+    move-object/from16 v1, p0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v4, p3
+
+    move/from16 v6, v17
+
+    move-object/from16 v8, v28
+
+    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+
+    move-result v29
+
+    if-eqz v29, :cond_3b2
+
+    const-string v1, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_3b2
+    if-eqz v17, :cond_3bb
+
+    const-string v1, "-------------------------------------------------------------------------------"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_3bb
+    move-object/from16 v1, p0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v4, p3
+
+    move/from16 v6, v17
+
+    move-object/from16 v8, v28
+
+    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+
+    move-result v29
+
+    if-eqz v29, :cond_3d4
+
+    const-string v1, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_3d4
+    if-eqz v17, :cond_3dd
+
+    const-string v1, "-------------------------------------------------------------------------------"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_3dd
+    move-object/from16 v22, p0
+
+    move-object/from16 v23, p1
+
+    move-object/from16 v24, p2
+
+    move-object/from16 v25, p3
+
+    move/from16 v26, v5
+
+    move/from16 v27, v17
+
+    invoke-virtual/range {v22 .. v28}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_3ef
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_3f1
+    .catchall {:try_start_33f .. :try_end_3f1} :catchall_3ef
+
+    throw v1
+
+    :cond_3f2
+    const-string v1, "services"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_406
+
+    const-string v1, "s"
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_41a
+
+    :cond_406
+    monitor-enter p0
+
+    const/4 v6, 0x1
+
+    const/4 v8, 0x0
+
+    move-object/from16 v1, p0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v4, p3
+
+    :try_start_411
+    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_40
+
+    :catchall_417
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_419
+    .catchall {:try_start_411 .. :try_end_419} :catchall_417
+
+    throw v1
+
+    :cond_41a
+    move-object/from16 v18, p0
+
+    move-object/from16 v19, p1
+
+    move-object/from16 v20, p2
+
+    move-object/from16 v22, p3
+
+    move/from16 v23, v5
+
+    move/from16 v24, v17
+
+    invoke-virtual/range {v18 .. v24}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
+
+    move-result v1
+
+    if-nez v1, :cond_40
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Bad activity command, or no activities match: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "Use -h for help."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_40
+.end method
+
+.method dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+    .registers 21
+
+    const-string v1, "ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  Main stack:"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    const-string v4, "  "
+
+    const-string v5, "Hist"
+
+    const/4 v6, 0x1
+
+    if-nez p5, :cond_1b8
+
+    const/4 v7, 0x1
+
+    :goto_16
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move/from16 v8, p6
+
+    move-object/from16 v9, p7
+
+    invoke-static/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  Running activities (most recent first):"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityStack;->mLRUActivities:Ljava/util/ArrayList;
+
+    const-string v4, "  "
+
+    const-string v5, "Run"
+
+    const/4 v6, 0x0
+
+    if-nez p5, :cond_1bb
+
+    const/4 v7, 0x1
+
+    :goto_35
+    const/4 v8, 0x0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object/from16 v9, p7
+
+    invoke-static/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mWaitingVisibleActivities:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-lez v1, :cond_65
+
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  Activities waiting for another to become visible:"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityStack;->mWaitingVisibleActivities:Ljava/util/ArrayList;
+
+    const-string v4, "  "
+
+    const-string v5, "Wait"
+
+    const/4 v6, 0x0
+
+    if-nez p5, :cond_1be
+
+    const/4 v7, 0x1
+
+    :goto_5d
+    const/4 v8, 0x0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object/from16 v9, p7
+
+    invoke-static/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+
+    :cond_65
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mStoppingActivities:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-lez v1, :cond_8d
+
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  Activities waiting to stop:"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityStack;->mStoppingActivities:Ljava/util/ArrayList;
+
+    const-string v4, "  "
+
+    const-string v5, "Stop"
+
+    const/4 v6, 0x0
+
+    if-nez p5, :cond_1c1
+
+    const/4 v7, 0x1
+
+    :goto_85
+    const/4 v8, 0x0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object/from16 v9, p7
+
+    invoke-static/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+
+    :cond_8d
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mGoingToSleepActivities:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-lez v1, :cond_b5
+
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  Activities waiting to sleep:"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityStack;->mGoingToSleepActivities:Ljava/util/ArrayList;
+
+    const-string v4, "  "
+
+    const-string v5, "Sleep"
+
+    const/4 v6, 0x0
+
+    if-nez p5, :cond_1c4
+
+    const/4 v7, 0x1
+
+    :goto_ad
+    const/4 v8, 0x0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object/from16 v9, p7
+
+    invoke-static/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+
+    :cond_b5
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mFinishingActivities:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-lez v1, :cond_dd
+
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v1, "  Activities waiting to finish:"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityStack;->mFinishingActivities:Ljava/util/ArrayList;
+
+    const-string v4, "  "
+
+    const-string v5, "Fin"
+
+    const/4 v6, 0x0
+
+    if-nez p5, :cond_1c7
+
+    const/4 v7, 0x1
+
+    :goto_d5
+    const/4 v8, 0x0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object/from16 v9, p7
+
+    invoke-static/range {v1 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpHistoryList(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;ZZZLjava/lang/String;)V
+
+    :cond_dd
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v1, :cond_102
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mPausingActivity: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_102
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mResumedActivity: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mFocusedActivity: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_184
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mLastPausedActivity: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mLastPausedActivity:Lcom/android/server/am/ActivityRecord;
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mSleepTimeout: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-boolean v2, v2, Lcom/android/server/am/ActivityStack;->mSleepTimeout:Z
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mDismissKeyguardOnNextActivity: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-boolean v2, v2, Lcom/android/server/am/ActivityStack;->mDismissKeyguardOnNextActivity:Z
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_184
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-lez v1, :cond_1ea
+
+    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V
+
+    const-string v1, "  Recent tasks:"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v10
+
+    const/4 v11, 0x0
+
+    :goto_19b
+    if-ge v11, v10, :cond_1ea
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v1, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Lcom/android/server/am/TaskRecord;
+
+    if-eqz p7, :cond_1ca
+
+    iget-object v1, v12, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;
+
+    if-eqz v1, :cond_1b5
+
+    iget-object v1, v12, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;
+
+    move-object/from16 v0, p7
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_1ca
+
+    :cond_1b5
+    :goto_1b5
+    add-int/lit8 v11, v11, 0x1
+
+    goto :goto_19b
+
+    :cond_1b8
+    const/4 v7, 0x0
+
+    goto/16 :goto_16
+
+    :cond_1bb
+    const/4 v7, 0x0
+
+    goto/16 :goto_35
+
+    :cond_1be
+    const/4 v7, 0x0
+
+    goto/16 :goto_5d
+
+    :cond_1c1
+    const/4 v7, 0x0
+
+    goto/16 :goto_85
+
+    :cond_1c4
+    const/4 v7, 0x0
+
+    goto/16 :goto_ad
+
+    :cond_1c7
+    const/4 v7, 0x0
+
+    goto/16 :goto_d5
+
+    :cond_1ca
+    const-string v1, "  * Recent #"
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p2, v11}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v1, ": "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p2, v12}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    if-eqz p5, :cond_1b5
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v1, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/TaskRecord;
+
+    const-string v2, "    "
+
+    invoke-virtual {v1, p2, v2}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_1b5
+
+    :cond_1ea
+    if-eqz p5, :cond_209
+
+    const-string v1, " "
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "  mCurTask: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurTask:I
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_209
+    const/4 v1, 0x1
+
+    return v1
+.end method
+
+.method protected dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
+    .registers 25
+
+    new-instance v10, Ljava/util/ArrayList;
+
+    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V
+
+    const-string v2, "all"
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_38
+
+    monitor-enter p0
+
+    :try_start_10
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;
+
+    move-result-object v12
+
+    :goto_1a
+    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_2f
+
+    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v17
+
+    check-cast v17, Lcom/android/server/am/ActivityRecord;
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_1a
+
+    :catchall_2c
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_2e
+    .catchall {:try_start_10 .. :try_end_2e} :catchall_2c
+
+    throw v2
+
+    :cond_2f
+    :try_start_2f
+    monitor-exit p0
+    :try_end_30
+    .catchall {:try_start_2f .. :try_end_30} :catchall_2c
+
+    :goto_30
+    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-gtz v2, :cond_a1
+
+    const/4 v2, 0x0
+
+    :goto_37
+    return v2
+
+    :cond_38
+    const-string v2, "top"
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_65
+
+    monitor-enter p0
+
+    :try_start_43
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v9
+
+    if-lez v9, :cond_60
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    add-int/lit8 v3, v9, -0x1
+
+    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ActivityRecord;
+
+    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_60
+    monitor-exit p0
+
+    goto :goto_30
+
+    :catchall_62
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_64
+    .catchall {:try_start_43 .. :try_end_64} :catchall_62
+
+    throw v2
+
+    :cond_65
+    new-instance v14, Lcom/android/server/am/ActivityManagerService$ItemMatcher;
+
+    invoke-direct {v14}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v14, v0}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build(Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    :try_start_70
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;
+
+    move-result-object v12
+
+    :cond_7a
+    :goto_7a
+    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_9f
+
+    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v17
+
+    check-cast v17, Lcom/android/server/am/ActivityRecord;
+
+    move-object/from16 v0, v17
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v2
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v14, v0, v2}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_7a
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_7a
+
+    :catchall_9c
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_9e
+    .catchall {:try_start_70 .. :try_end_9e} :catchall_9c
+
+    throw v2
+
+    :cond_9f
+    :try_start_9f
+    monitor-exit p0
+    :try_end_a0
+    .catchall {:try_start_9f .. :try_end_a0} :catchall_9c
+
+    goto :goto_30
+
+    :cond_a1
+    move-object/from16 v0, p4
+
+    array-length v2, v0
+
+    sub-int v2, v2, p5
+
+    new-array v7, v2, [Ljava/lang/String;
+
+    move-object/from16 v0, p4
+
+    array-length v2, v0
+
+    const/4 v3, 0x2
+
+    if-le v2, v3, :cond_bb
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, p4
+
+    array-length v3, v0
+
+    sub-int v3, v3, p5
+
+    move-object/from16 v0, p4
+
+    move/from16 v1, p5
+
+    invoke-static {v0, v1, v7, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    :cond_bb
+    const/4 v13, 0x0
+
+    const/4 v15, 0x0
+
+    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v11, v2, -0x1
+
+    :goto_c3
+    if-ltz v11, :cond_11b
+
+    invoke-virtual {v10, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v15, :cond_d0
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_d0
+    const/4 v15, 0x1
+
+    monitor-enter p0
+
+    :try_start_d2
+    move-object/from16 v0, v16
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v13, v2, :cond_101
+
+    move-object/from16 v0, v16
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    const-string v2, "TASK "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v2, v13, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v2, " id="
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget v2, v13, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(I)V
+
+    if-eqz p6, :cond_101
+
+    const-string v2, "  "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v13, v0, v2}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    :cond_101
+    monitor-exit p0
+    :try_end_102
+    .catchall {:try_start_d2 .. :try_end_102} :catchall_118
+
+    const-string v3, "  "
+
+    invoke-virtual {v10, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Lcom/android/server/am/ActivityRecord;
+
+    move-object/from16 v2, p0
+
+    move-object/from16 v4, p1
+
+    move-object/from16 v5, p2
+
+    move/from16 v8, p6
+
+    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V
+
+    add-int/lit8 v11, v11, -0x1
+
+    goto :goto_c3
+
+    :catchall_118
+    move-exception v2
+
+    :try_start_119
+    monitor-exit p0
+    :try_end_11a
+    .catchall {:try_start_119 .. :try_end_11a} :catchall_118
+
+    throw v2
+
+    :cond_11b
+    const/4 v2, 0x1
+
+    goto/16 :goto_37
+.end method
+
+.method final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;Ljava/lang/StringBuilder;Ljava/lang/StringBuilder;)V
+    .registers 75
+
+    const/16 v37, 0x0
+
+    const/16 v51, 0x0
+
+    const/16 v55, 0x0
+
+    :goto_6
+    move-object/from16 v0, p4
+
+    array-length v5, v0
+
+    move/from16 v0, v55
+
+    if-ge v0, v5, :cond_22
+
+    aget-object v54, p4, v55
+
+    if-eqz v54, :cond_22
+
+    invoke-virtual/range {v54 .. v54}, Ljava/lang/String;->length()I
+
+    move-result v5
+
+    if-lez v5, :cond_22
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v54
+
+    invoke-virtual {v0, v5}, Ljava/lang/String;->charAt(I)C
+
+    move-result v5
+
+    const/16 v6, 0x2d
+
+    if-eq v5, v6, :cond_31
+
+    :cond_22
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p2
+
+    move/from16 v2, v55
+
+    move-object/from16 v3, p4
+
+    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;I[Ljava/lang/String;)Ljava/util/ArrayList;
+
+    move-result-object v58
+
+    if-nez v58, :cond_9d
+
+    :cond_30
+    :goto_30
+    return-void
+
+    :cond_31
+    add-int/lit8 v55, v55, 0x1
+
+    const-string v5, "-a"
+
+    move-object/from16 v0, v54
+
+    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_40
+
+    const/16 v37, 0x1
+
+    goto :goto_6
+
+    :cond_40
+    const-string v5, "--oom"
+
+    move-object/from16 v0, v54
+
+    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_4d
+
+    const/16 v51, 0x1
+
+    goto :goto_6
+
+    :cond_4d
+    const-string v5, "-h"
+
+    move-object/from16 v0, v54
+
+    invoke-virtual {v5, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_7b
+
+    const-string v5, "meminfo dump options: [-a] [--oom] [process]"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "  -a: include all available information for each process."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "  --oom: only show processes organized by oom adj."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "If [process] is specified it can be the name or "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "pid of a specific process to dump."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_30
+
+    :cond_7b
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Unknown argument: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v54
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "; use -h for help"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_6
+
+    :cond_9d
+    const-string v5, "--checkin"
+
+    move-object/from16 v0, p4
+
+    invoke-static {v0, v5}, Lcom/android/server/am/ActivityManagerService;->scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
+
+    move-result v42
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v64
+
+    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J
+
+    move-result-wide v60
+
+    invoke-virtual/range {v58 .. v58}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    const/4 v6, 0x1
+
+    if-eq v5, v6, :cond_b6
+
+    if-eqz v42, :cond_b8
+
+    :cond_b6
+    const/16 v37, 0x1
+
+    :cond_b8
+    if-eqz v42, :cond_1ec
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    move-wide/from16 v0, v64
+
+    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ","
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-wide/from16 v0, v60
+
+    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V
+
+    :goto_dd
+    move-object/from16 v0, p4
+
+    array-length v5, v0
+
+    sub-int v5, v5, v55
+
+    new-array v0, v5, [Ljava/lang/String;
+
+    move-object/from16 v41, v0
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, p4
+
+    array-length v6, v0
+
+    sub-int v6, v6, v55
+
+    move-object/from16 v0, p4
+
+    move/from16 v1, v55
+
+    move-object/from16 v2, v41
+
+    invoke-static {v0, v1, v2, v5, v6}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V
+
+    new-instance v57, Ljava/util/ArrayList;
+
+    invoke-direct/range {v57 .. v57}, Ljava/util/ArrayList;-><init>()V
+
+    const-wide/16 v12, 0x0
+
+    const-wide/16 v17, 0x0
+
+    const-wide/16 v22, 0x0
+
+    const/16 v5, 0x9
+
+    new-array v0, v5, [J
+
+    move-object/from16 v48, v0
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;
+
+    array-length v5, v5
+
+    new-array v0, v5, [J
+
+    move-object/from16 v53, v0
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;
+
+    array-length v5, v5
+
+    new-array v0, v5, [Ljava/util/ArrayList;
+
+    move-object/from16 v52, v0
+
+    check-cast v52, [Ljava/util/ArrayList;
+
+    const-wide/16 v62, 0x0
+
+    invoke-virtual/range {v58 .. v58}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    add-int/lit8 v40, v5, -0x1
+
+    :goto_11e
+    if-ltz v40, :cond_272
+
+    move-object/from16 v0, v58
+
+    move/from16 v1, v40
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v59
+
+    check-cast v59, Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v59
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v5, :cond_26b
+
+    if-nez v42, :cond_167
+
+    if-eqz v37, :cond_167
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "\n** MEMINFO in pid "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v59
+
+    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " ["
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v59
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "] **"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V
+
+    :cond_167
+    const/16 v46, 0x0
+
+    if-eqz v37, :cond_22a
+
+    :try_start_16b
+    move-object/from16 v0, v59
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v0, p1
+
+    move/from16 v1, v42
+
+    move/from16 v2, v37
+
+    move-object/from16 v3, v41
+
+    invoke-interface {v5, v0, v1, v2, v3}, Landroid/app/IApplicationThread;->dumpMemInfo(Ljava/io/FileDescriptor;ZZ[Ljava/lang/String;)Landroid/os/Debug$MemoryInfo;
+    :try_end_17a
+    .catch Landroid/os/RemoteException; {:try_start_16b .. :try_end_17a} :catch_21b
+
+    move-result-object v46
+
+    :cond_17b
+    :goto_17b
+    if-nez v42, :cond_26b
+
+    if-eqz v46, :cond_26b
+
+    invoke-virtual/range {v46 .. v46}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I
+
+    move-result v5
+
+    int-to-long v7, v5
+
+    add-long v62, v62, v7
+
+    new-instance v4, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    move-object/from16 v0, v59
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " (pid "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, v59
+
+    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ")"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, v59
+
+    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V
+
+    move-object/from16 v0, v57
+
+    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    move-object/from16 v0, v46
+
+    iget v5, v0, Landroid/os/Debug$MemoryInfo;->nativePss:I
+
+    int-to-long v5, v5
+
+    add-long/2addr v12, v5
+
+    move-object/from16 v0, v46
+
+    iget v5, v0, Landroid/os/Debug$MemoryInfo;->dalvikPss:I
+
+    int-to-long v5, v5
+
+    add-long v17, v17, v5
+
+    move-object/from16 v0, v46
+
+    iget v5, v0, Landroid/os/Debug$MemoryInfo;->otherPss:I
+
+    int-to-long v5, v5
+
+    add-long v22, v22, v5
+
+    const/16 v29, 0x0
+
+    :goto_1d0
+    const/16 v5, 0x9
+
+    move/from16 v0, v29
+
+    if-ge v0, v5, :cond_23a
+
+    move-object/from16 v0, v46
+
+    move/from16 v1, v29
+
+    invoke-virtual {v0, v1}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I
+
+    move-result v5
+
+    int-to-long v0, v5
+
+    move-wide/from16 v44, v0
+
+    aget-wide v5, v48, v29
+
+    add-long v5, v5, v44
+
+    aput-wide v5, v48, v29
+
+    sub-long v22, v22, v44
+
+    add-int/lit8 v29, v29, 0x1
+
+    goto :goto_1d0
+
+    :cond_1ec
+    const-string v5, "Applications Memory Usage (kB):"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Uptime: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-wide/from16 v0, v64
+
+    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " Realtime: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-wide/from16 v0, v60
+
+    invoke-virtual {v5, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_dd
+
+    :catch_21b
+    move-exception v38
+
+    if-nez v42, :cond_17b
+
+    const-string v5, "Got RemoteException!"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V
+
+    goto/16 :goto_17b
+
+    :cond_22a
+    new-instance v46, Landroid/os/Debug$MemoryInfo;
+
+    invoke-direct/range {v46 .. v46}, Landroid/os/Debug$MemoryInfo;-><init>()V
+
+    move-object/from16 v0, v59
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move-object/from16 v0, v46
+
+    invoke-static {v5, v0}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V
+
+    goto/16 :goto_17b
+
+    :cond_23a
+    const/16 v49, 0x0
+
+    :goto_23c
+    move-object/from16 v0, v53
+
+    array-length v5, v0
+
+    move/from16 v0, v49
+
+    if-ge v0, v5, :cond_26b
+
+    move-object/from16 v0, v59
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I
+
+    aget v6, v6, v49
+
+    if-le v5, v6, :cond_256
+
+    move-object/from16 v0, v53
+
+    array-length v5, v0
+
+    add-int/lit8 v5, v5, -0x1
+
+    move/from16 v0, v49
+
+    if-ne v0, v5, :cond_26f
+
+    :cond_256
+    aget-wide v5, v53, v49
+
+    add-long/2addr v5, v7
+
+    aput-wide v5, v53, v49
+
+    aget-object v5, v52, v49
+
+    if-nez v5, :cond_266
+
+    new-instance v5, Ljava/util/ArrayList;
+
+    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V
+
+    aput-object v5, v52, v49
+
+    :cond_266
+    aget-object v5, v52, v49
+
+    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_26b
+    add-int/lit8 v40, v40, -0x1
+
+    goto/16 :goto_11e
+
+    :cond_26f
+    add-int/lit8 v49, v49, 0x1
+
+    goto :goto_23c
+
+    :cond_272
+    if-nez v42, :cond_30
+
+    invoke-virtual/range {v58 .. v58}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    const/4 v6, 0x1
+
+    if-le v5, v6, :cond_30
+
+    new-instance v36, Ljava/util/ArrayList;
+
+    invoke-direct/range {v36 .. v36}, Ljava/util/ArrayList;-><init>()V
+
+    new-instance v9, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    const-string v10, "Native"
+
+    const-string v11, "Native"
+
+    const/4 v14, -0x1
+
+    invoke-direct/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V
+
+    move-object/from16 v0, v36
+
+    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    new-instance v14, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    const-string v15, "Dalvik"
+
+    const-string v16, "Dalvik"
+
+    const/16 v19, -0x2
+
+    invoke-direct/range {v14 .. v19}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V
+
+    move-object/from16 v0, v36
+
+    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    new-instance v19, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    const-string v20, "Unknown"
+
+    const-string v21, "Unknown"
+
+    const/16 v24, -0x3
+
+    invoke-direct/range {v19 .. v24}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V
+
+    move-object/from16 v0, v36
+
+    move-object/from16 v1, v19
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    const/16 v29, 0x0
+
+    :goto_2b3
+    const/16 v5, 0x9
+
+    move/from16 v0, v29
+
+    if-ge v0, v5, :cond_2d0
+
+    invoke-static/range {v29 .. v29}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;
+
+    move-result-object v25
+
+    new-instance v24, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    aget-wide v27, v48, v29
+
+    move-object/from16 v26, v25
+
+    invoke-direct/range {v24 .. v29}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V
+
+    move-object/from16 v0, v36
+
+    move-object/from16 v1, v24
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 v29, v29, 0x1
+
+    goto :goto_2b3
+
+    :cond_2d0
+    new-instance v50, Ljava/util/ArrayList;
+
+    invoke-direct/range {v50 .. v50}, Ljava/util/ArrayList;-><init>()V
+
+    const/16 v29, 0x0
+
+    :goto_2d7
+    move-object/from16 v0, v53
+
+    array-length v5, v0
+
+    move/from16 v0, v29
+
+    if-ge v0, v5, :cond_309
+
+    aget-wide v5, v53, v29
+
+    const-wide/16 v9, 0x0
+
+    cmp-long v5, v5, v9
+
+    if-eqz v5, :cond_306
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;
+
+    aget-object v25, v5, v29
+
+    new-instance v30, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    aget-wide v33, v53, v29
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I
+
+    aget v35, v5, v29
+
+    move-object/from16 v31, v25
+
+    move-object/from16 v32, v25
+
+    invoke-direct/range {v30 .. v35}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V
+
+    aget-object v5, v52, v29
+
+    move-object/from16 v0, v30
+
+    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    move-object/from16 v0, v50
+
+    move-object/from16 v1, v30
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_306
+    add-int/lit8 v29, v29, 0x1
+
+    goto :goto_2d7
+
+    :cond_309
+    if-nez p7, :cond_30d
+
+    if-eqz p8, :cond_433
+
+    :cond_30d
+    if-eqz p7, :cond_319
+
+    const-string v5, "total"
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p7
+
+    move-wide/from16 v1, v62
+
+    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
+
+    :cond_319
+    if-eqz p8, :cond_325
+
+    const-string v5, "total"
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, p8
+
+    move-wide/from16 v1, v62
+
+    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
+
+    :cond_325
+    const/16 v39, 0x1
+
+    const/16 v40, 0x0
+
+    :goto_329
+    invoke-virtual/range {v50 .. v50}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    move/from16 v0, v40
+
+    if-ge v0, v5, :cond_433
+
+    move-object/from16 v0, v50
+
+    move/from16 v1, v40
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v47
+
+    check-cast v47, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    move-object/from16 v0, v47
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    if-eqz v5, :cond_34c
+
+    move-object/from16 v0, v47
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    const/4 v6, 0x1
+
+    if-ge v5, v6, :cond_34f
+
+    :cond_34c
+    :goto_34c
+    add-int/lit8 v40, v40, 0x1
+
+    goto :goto_329
+
+    :cond_34f
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    const/4 v6, 0x5
+
+    if-lt v5, v6, :cond_364
+
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    const/4 v6, 0x6
+
+    if-eq v5, v6, :cond_364
+
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    const/4 v6, 0x7
+
+    if-ne v5, v6, :cond_34c
+
+    :cond_364
+    if-eqz p7, :cond_373
+
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    if-gtz v5, :cond_373
+
+    const-string v5, " / "
+
+    move-object/from16 v0, p7
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_373
+    if-eqz p8, :cond_38d
+
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    if-ltz v5, :cond_3e4
+
+    if-eqz v39, :cond_386
+
+    const-string v5, ":"
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const/16 v39, 0x0
+
+    :cond_386
+    const-string v5, "\n\t at "
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_38d
+    :goto_38d
+    const/16 v29, 0x0
+
+    :goto_38f
+    move-object/from16 v0, v47
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    move/from16 v0, v29
+
+    if-ge v0, v5, :cond_3ec
+
+    move-object/from16 v0, v47
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;
+
+    move/from16 v0, v29
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v46
+
+    check-cast v46, Lcom/android/server/am/ActivityManagerService$MemItem;
+
+    if-lez v29, :cond_3bb
+
+    if-eqz p7, :cond_3b2
+
+    const-string v5, " "
+
+    move-object/from16 v0, p7
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_3b2
+    if-eqz p8, :cond_3bb
+
+    const-string v5, "$"
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    :cond_3bb
+    if-eqz p7, :cond_3d1
+
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    if-gtz v5, :cond_3d1
+
+    move-object/from16 v0, v46
+
+    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J
+
+    move-object/from16 v0, v46
+
+    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;
+
+    const/4 v10, 0x0
+
+    move-object/from16 v0, p7
+
+    invoke-static {v0, v5, v6, v9, v10}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
+
+    :cond_3d1
+    if-eqz p8, :cond_3e1
+
+    move-object/from16 v0, v46
+
+    iget-wide v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J
+
+    move-object/from16 v0, v46
+
+    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;
+
+    const/4 v10, 0x1
+
+    move-object/from16 v0, p8
+
+    invoke-static {v0, v5, v6, v9, v10}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
+
+    :cond_3e1
+    add-int/lit8 v29, v29, 0x1
+
+    goto :goto_38f
+
+    :cond_3e4
+    const-string v5, "$"
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    goto :goto_38d
+
+    :cond_3ec
+    if-eqz p8, :cond_34c
+
+    move-object/from16 v0, v47
+
+    iget v5, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    if-ltz v5, :cond_34c
+
+    const-string v5, "("
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const/16 v43, 0x0
+
+    :goto_3fd
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I
+
+    array-length v5, v5
+
+    move/from16 v0, v43
+
+    if-ge v0, v5, :cond_42a
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I
+
+    aget v5, v5, v43
+
+    move-object/from16 v0, v47
+
+    iget v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I
+
+    if-ne v5, v6, :cond_427
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;
+
+    aget-object v5, v5, v43
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v5, ":"
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I
+
+    aget v5, v5, v43
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    :cond_427
+    add-int/lit8 v43, v43, 0x1
+
+    goto :goto_3fd
+
+    :cond_42a
+    const-string v5, ")"
+
+    move-object/from16 v0, p8
+
+    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    goto/16 :goto_34c
+
+    :cond_433
+    if-nez p5, :cond_44e
+
+    if-nez v51, :cond_44e
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    const-string v5, "Total PSS by process:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "  "
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v57
+
+    invoke-static {v0, v5, v1, v6}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/ArrayList;Z)V
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_44e
+    const-string v5, "Total PSS by OOM adjustment:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "  "
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v50
+
+    invoke-static {v0, v5, v1, v6}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/ArrayList;Z)V
+
+    if-nez v51, :cond_479
+
+    if-eqz p6, :cond_493
+
+    move-object/from16 v56, p6
+
+    :goto_465
+    invoke-virtual/range {v56 .. v56}, Ljava/io/PrintWriter;->println()V
+
+    const-string v5, "Total PSS by category:"
+
+    move-object/from16 v0, v56
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v5, "  "
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, v56
+
+    move-object/from16 v1, v36
+
+    invoke-static {v0, v5, v1, v6}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/util/ArrayList;Z)V
+
+    :cond_479
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    const-string v5, "Total PSS: "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-wide/from16 v1, v62
+
+    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V
+
+    const-string v5, " kB"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_30
+
+    :cond_493
+    move-object/from16 v56, p2
+
+    goto :goto_465
+.end method
+
+.method dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+    .registers 27
+
+    const/16 v16, 0x0
+
+    const-string v2, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_83
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_6c
+
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v15
+
+    :cond_23
+    :goto_23
+    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_6c
+
+    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ReceiverList;
+
+    if-eqz p6, :cond_47
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_23
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_23
+
+    :cond_47
+    if-nez v17, :cond_54
+
+    const-string v2, "  Registered Receivers:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    const/16 v17, 0x1
+
+    :cond_54
+    const-string v2, "  * "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v2, "    "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_23
+
+    :cond_6c
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;
+
+    if-eqz v16, :cond_c4
+
+    const-string v4, "\n  Receiver Resolver Table:"
+
+    :goto_74
+    const-string v5, "    "
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v6, p6
+
+    invoke-virtual/range {v2 .. v7}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_83
+
+    const/16 v16, 0x1
+
+    :cond_83
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-gtz v2, :cond_9d
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-gtz v2, :cond_9d
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v2, :cond_199
+
+    :cond_9d
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v12, v2, -0x1
+
+    :goto_a9
+    if-ltz v12, :cond_fd
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz p6, :cond_c7
+
+    iget-object v2, v9, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_c7
+
+    :goto_c1
+    add-int/lit8 v12, v12, -0x1
+
+    goto :goto_a9
+
+    :cond_c4
+    const-string v4, "  Receiver Resolver Table:"
+
+    goto :goto_74
+
+    :cond_c7
+    if-nez v17, :cond_d7
+
+    if-eqz v16, :cond_ce
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_ce
+    const/16 v16, 0x1
+
+    const-string v2, "  Active broadcasts:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_d7
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  Broadcast #"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, ":"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v2, "    "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v9, v0, v2}, Lcom/android/server/am/BroadcastRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_c1
+
+    :cond_fd
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v12, v2, -0x1
+
+    :goto_109
+    if-ltz v12, :cond_164
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v9
+
+    check-cast v9, Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz p6, :cond_124
+
+    iget-object v2, v9, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_124
+
+    :goto_121
+    add-int/lit8 v12, v12, -0x1
+
+    goto :goto_109
+
+    :cond_124
+    if-nez v17, :cond_134
+
+    if-eqz v16, :cond_12b
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_12b
+    const/16 v16, 0x1
+
+    const-string v2, "  Active ordered broadcasts:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_134
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  Ordered Broadcast #"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, ":"
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrderedBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/BroadcastRecord;
+
+    const-string v3, "    "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v2, v0, v3}, Lcom/android/server/am/BroadcastRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_121
+
+    :cond_164
+    if-eqz p6, :cond_17a
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v2, :cond_199
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_199
+
+    :cond_17a
+    if-eqz v16, :cond_17f
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_17f
+    const-string v2, "  Pending broadcast:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v2, :cond_24c
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    const-string v3, "    "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v2, v0, v3}, Lcom/android/server/am/BroadcastRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    :goto_197
+    const/16 v16, 0x1
+
+    :cond_199
+    const/16 v17, 0x0
+
+    const/4 v12, 0x0
+
+    :goto_19c
+    const/16 v2, 0x19
+
+    if-ge v12, v2, :cond_1a8
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastHistory:[Lcom/android/server/am/BroadcastRecord;
+
+    aget-object v18, v2, v12
+
+    if-nez v18, :cond_255
+
+    :cond_1a8
+    :goto_1a8
+    const/16 v16, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    if-eqz v2, :cond_2cb
+
+    if-nez p6, :cond_2cb
+
+    if-eqz v16, :cond_1b7
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_1b7
+    const/16 v16, 0x1
+
+    const-string v2, "  Sticky broadcasts:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v19, Ljava/lang/StringBuilder;
+
+    const/16 v2, 0x80
+
+    move-object/from16 v0, v19
+
+    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(I)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v13
+
+    :cond_1d5
+    :goto_1d5
+    invoke-interface {v13}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_2c9
+
+    invoke-interface {v13}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Ljava/util/Map$Entry;
+
+    const-string v2, "  * Sticky action "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-interface {v11}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Ljava/lang/String;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_2c0
+
+    const-string v2, ":"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-interface {v11}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;
+
+    move-result-object v14
+
+    check-cast v14, Ljava/util/ArrayList;
+
+    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I
+
+    move-result v8
+
+    const/4 v12, 0x0
+
+    :goto_207
+    if-ge v12, v8, :cond_1d5
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->setLength(I)V
+
+    const-string v2, "    Intent: "
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-virtual {v14, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x1
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v2, v0, v3, v4, v5}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZ)V
+
+    invoke-virtual/range {v19 .. v19}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual {v14, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    invoke-virtual {v2}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;
+
+    move-result-object v10
+
+    if-eqz v10, :cond_249
+
+    const-string v2, "      "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {v10}, Landroid/os/Bundle;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_249
+    add-int/lit8 v12, v12, 0x1
+
+    goto :goto_207
+
+    :cond_24c
+    const-string v2, "    (null)"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_197
+
+    :cond_255
+    if-eqz p6, :cond_267
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/BroadcastRecord;->callerPackage:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_267
+
+    :goto_263
+    add-int/lit8 v12, v12, 0x1
+
+    goto/16 :goto_19c
+
+    :cond_267
+    if-nez v17, :cond_279
+
+    if-eqz v16, :cond_26e
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_26e
+    const/16 v16, 0x1
+
+    const-string v2, "  Historical broadcasts:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v17, 0x1
+
+    :cond_279
+    if-eqz p5, :cond_298
+
+    const-string v2, "  Historical Broadcast #"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, ":"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v2, "    "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/BroadcastRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_263
+
+    :cond_298
+    const/16 v2, 0x32
+
+    if-lt v12, v2, :cond_2a5
+
+    const-string v2, "  ..."
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_1a8
+
+    :cond_2a5
+    const-string v2, "  #"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, ": "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_263
+
+    :cond_2c0
+    const-string v2, ""
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_1d5
+
+    :cond_2c9
+    const/16 v16, 0x1
+
+    :cond_2cb
+    if-eqz p5, :cond_305
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mBroadcastsScheduled="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastsScheduled:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v2, "  mHandler:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    new-instance v3, Landroid/util/PrintWriterPrinter;
+
+    move-object/from16 v0, p2
+
+    invoke-direct {v3, v0}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V
+
+    const-string v4, "    "
+
+    invoke-virtual {v2, v3, v4}, Landroid/os/Handler;->dump(Landroid/util/Printer;Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    :cond_305
+    return v16
+.end method
+
+.method final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
+    .registers 15
+
+    const/4 v9, 0x0
+
+    invoke-virtual {p0, p2, v9, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;I[Ljava/lang/String;)Ljava/util/ArrayList;
+
+    move-result-object v2
+
+    if-nez v2, :cond_8
+
+    :cond_7
+    return-void
+
+    :cond_8
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v7
+
+    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J
+
+    move-result-wide v4
+
+    const-string v9, "Applications Graphics Acceleration Info:"
+
+    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Uptime: "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, v7, v8}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " Realtime: "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v9
+
+    add-int/lit8 v1, v9, -0x1
+
+    :goto_3b
+    if-ltz v1, :cond_7
+
+    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v9, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v9, :cond_8c
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "\n** Graphics info for pid "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget v10, v3, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " ["
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v10, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, "] **"
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V
+
+    :try_start_74
+    new-instance v6, Lcom/android/server/am/TransferPipe;
+
+    invoke-direct {v6}, Lcom/android/server/am/TransferPipe;-><init>()V
+    :try_end_79
+    .catch Ljava/io/IOException; {:try_start_74 .. :try_end_79} :catch_94
+    .catch Landroid/os/RemoteException; {:try_start_74 .. :try_end_79} :catch_af
+
+    :try_start_79
+    iget-object v9, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-virtual {v6}, Lcom/android/server/am/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;
+
+    move-result-object v10
+
+    invoke-interface {v9, v10, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V
+
+    invoke-virtual {v6, p1}, Lcom/android/server/am/TransferPipe;->go(Ljava/io/FileDescriptor;)V
+    :try_end_89
+    .catchall {:try_start_79 .. :try_end_89} :catchall_8f
+
+    :try_start_89
+    invoke-virtual {v6}, Lcom/android/server/am/TransferPipe;->kill()V
+
+    :cond_8c
+    :goto_8c
+    add-int/lit8 v1, v1, -0x1
+
+    goto :goto_3b
+
+    :catchall_8f
+    move-exception v9
+
+    invoke-virtual {v6}, Lcom/android/server/am/TransferPipe;->kill()V
+
+    throw v9
+    :try_end_94
+    .catch Ljava/io/IOException; {:try_start_89 .. :try_end_94} :catch_94
+    .catch Landroid/os/RemoteException; {:try_start_89 .. :try_end_94} :catch_af
+
+    :catch_94
+    move-exception v0
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Failure while dumping the app: "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V
+
+    goto :goto_8c
+
+    :catch_af
+    move-exception v0
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Got a RemoteException while dumping the app "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-virtual {p2, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V
+
+    goto :goto_8c
+.end method
+
+.method public dumpHeap(Ljava/lang/String;ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
+    .registers 15
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    :try_start_0
+    monitor-enter p0
+    :try_end_1
+    .catchall {:try_start_0 .. :try_end_1} :catchall_1d
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_1} :catch_14
+
+    :try_start_1
+    const-string v7, "android.permission.SET_ACTIVITY_WATCHER"
+
+    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v7
+
+    if-eqz v7, :cond_24
+
+    new-instance v7, Ljava/lang/SecurityException;
+
+    const-string v8, "Requires permission android.permission.SET_ACTIVITY_WATCHER"
+
+    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+
+    :catchall_11
+    move-exception v7
+
+    monitor-exit p0
+    :try_end_13
+    .catchall {:try_start_1 .. :try_end_13} :catchall_11
+
+    :try_start_13
+    throw v7
+    :try_end_14
+    .catchall {:try_start_13 .. :try_end_14} :catchall_1d
+    .catch Landroid/os/RemoteException; {:try_start_13 .. :try_end_14} :catch_14
+
+    :catch_14
+    move-exception v2
+
+    :try_start_15
+    new-instance v7, Ljava/lang/IllegalStateException;
+
+    const-string v8, "Process disappeared"
+
+    invoke-direct {v7, v8}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+    :try_end_1d
+    .catchall {:try_start_15 .. :try_end_1d} :catchall_1d
+
+    :catchall_1d
+    move-exception v7
+
+    if-eqz p4, :cond_23
+
+    :try_start_20
+    invoke-virtual {p4}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_23
+    .catch Ljava/io/IOException; {:try_start_20 .. :try_end_23} :catch_c1
+
+    :cond_23
+    :goto_23
+    throw v7
+
+    :cond_24
+    if-nez p4, :cond_2e
+
+    :try_start_26
+    new-instance v7, Ljava/lang/IllegalArgumentException;
+
+    const-string v8, "null fd"
+
+    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+    :try_end_2e
+    .catchall {:try_start_26 .. :try_end_2e} :catchall_11
+
+    :cond_2e
+    const/4 v5, 0x0
+
+    :try_start_2f
+    invoke-static {p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+
+    move-result v4
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v8
+    :try_end_36
+    .catchall {:try_start_2f .. :try_end_36} :catchall_11
+    .catch Ljava/lang/NumberFormatException; {:try_start_2f .. :try_end_36} :catch_80
+
+    :try_start_36
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v7, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v7
+
+    move-object v0, v7
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    move-object v5, v0
+
+    monitor-exit v8
+    :try_end_41
+    .catchall {:try_start_36 .. :try_end_41} :catchall_7d
+
+    :goto_41
+    if-nez v5, :cond_5e
+
+    :try_start_43
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v7}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Landroid/util/SparseArray;
+
+    if-eqz v6, :cond_5e
+
+    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I
+
+    move-result v7
+
+    if-lez v7, :cond_5e
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v6, v7}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    :cond_5e
+    if-eqz v5, :cond_64
+
+    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v7, :cond_82
+
+    :cond_64
+    new-instance v7, Ljava/lang/IllegalArgumentException;
+
+    new-instance v8, Ljava/lang/StringBuilder;
+
+    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Unknown process: "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+    :try_end_7d
+    .catchall {:try_start_43 .. :try_end_7d} :catchall_11
+
+    :catchall_7d
+    move-exception v7
+
+    :try_start_7e
+    monitor-exit v8
+    :try_end_7f
+    .catchall {:try_start_7e .. :try_end_7f} :catchall_7d
+
+    :try_start_7f
+    throw v7
+    :try_end_80
+    .catchall {:try_start_7f .. :try_end_80} :catchall_11
+    .catch Ljava/lang/NumberFormatException; {:try_start_7f .. :try_end_80} :catch_80
+
+    :catch_80
+    move-exception v7
+
+    goto :goto_41
+
+    :cond_82
+    :try_start_82
+    const-string v7, "1"
+
+    const-string v8, "ro.debuggable"
+
+    const-string v9, "0"
+
+    invoke-static {v8, v9}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_b3
+
+    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v7, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v7, v7, 0x2
+
+    if-nez v7, :cond_b3
+
+    new-instance v7, Ljava/lang/SecurityException;
+
+    new-instance v8, Ljava/lang/StringBuilder;
+
+    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "Process not debuggable: "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+
+    :cond_b3
+    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v7, p2, p3, p4}, Landroid/app/IApplicationThread;->dumpHeap(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)V
+
+    const/4 p4, 0x0
+
+    const/4 v7, 0x1
+
+    monitor-exit p0
+    :try_end_bb
+    .catchall {:try_start_82 .. :try_end_bb} :catchall_11
+
+    if-eqz p4, :cond_c0
+
+    :try_start_bd
+    invoke-virtual {p4}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_c0
+    .catch Ljava/io/IOException; {:try_start_bd .. :try_end_c0} :catch_c4
+
+    :cond_c0
+    :goto_c0
+    return v7
+
+    :catch_c1
+    move-exception v8
+
+    goto/16 :goto_23
+
+    :catch_c4
+    move-exception v8
+
+    goto :goto_c0
+.end method
+
+.method dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
+    .registers 14
+
+    const/4 v5, 0x0
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-lez v0, :cond_ad
+
+    if-eqz v5, :cond_10
+
+    const-string v0, " "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_10
+    const/4 v5, 0x1
+
+    const-string v0, "  OOM levels:"
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v0, "    SYSTEM_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/16 v0, -0x10
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    PERSISTENT_PROC_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/16 v0, -0xc
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    FOREGROUND_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x0
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    VISIBLE_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x1
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    PERCEPTIBLE_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x2
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    HEAVY_WEIGHT_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x3
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    BACKUP_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x4
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    SERVICE_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x5
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    HOME_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x6
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    PREVIOUS_APP_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/4 v0, 0x7
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    SERVICE_B_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/16 v0, 0x8
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    HIDDEN_APP_MIN_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    sget v0, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    const-string v0, "    HIDDEN_APP_MAX_ADJ: "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const/16 v0, 0xf
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(I)V
+
+    if-eqz v5, :cond_97
+
+    const-string v0, " "
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_97
+    const/4 v5, 0x1
+
+    const-string v0, "  Process OOM control:"
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    const-string v3, "    "
+
+    const-string v4, "Proc"
+
+    const-string v5, "PERS"
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    move-object v0, p2
+
+    move-object v1, p0
+
+    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
+
+    const/4 v5, 0x1
+
+    :cond_ad
+    const/4 v7, 0x0
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object v3, p3
+
+    move v4, p4
+
+    move v6, p5
+
+    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+
+    move-result v5
+
+    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "  mHomeProcess: "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "  mPreviousProcess: "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v0, :cond_107
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "  mHeavyWeightProcess: "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_107
+    const/4 v0, 0x1
+
+    return v0
+.end method
+
+.method dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+    .registers 13
+
+    const/4 v1, 0x0
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->size()I
+
+    move-result v5
+
+    if-lez v5, :cond_5d
+
+    const/4 v2, 0x0
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v5
+
+    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v0
+
+    :cond_14
+    :goto_14
+    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_5d
+
+    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Ljava/lang/ref/WeakReference;
+
+    if-eqz v4, :cond_52
+
+    invoke-virtual {v4}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/PendingIntentRecord;
+
+    move-object v3, v5
+
+    :goto_29
+    if-eqz p6, :cond_37
+
+    if-eqz v3, :cond_14
+
+    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-eqz v5, :cond_14
+
+    :cond_37
+    if-nez v2, :cond_3f
+
+    const-string v5, "ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)"
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/4 v2, 0x1
+
+    :cond_3f
+    const/4 v1, 0x1
+
+    if-eqz v3, :cond_54
+
+    const-string v5, "  * "
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    if-eqz p5, :cond_14
+
+    const-string v5, "    "
+
+    invoke-virtual {v3, p2, v5}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_14
+
+    :cond_52
+    const/4 v3, 0x0
+
+    goto :goto_29
+
+    :cond_54
+    const-string v5, "  * "
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_14
+
+    :cond_5d
+    return v1
+.end method
+
+.method dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+    .registers 37
+
+    const/4 v7, 0x0
+
+    const/16 v20, 0x0
+
+    const-string v2, "ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_96
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v14
+
+    :cond_1c
+    invoke-interface {v14}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_96
+
+    invoke-interface {v14}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v24
+
+    check-cast v24, Landroid/util/SparseArray;
+
+    invoke-virtual/range {v24 .. v24}, Landroid/util/SparseArray;->size()I
+
+    move-result v11
+
+    const/4 v15, 0x0
+
+    :goto_2d
+    if-ge v15, v11, :cond_1c
+
+    move-object/from16 v0, v24
+
+    invoke-virtual {v0, v15}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v27
+
+    check-cast v27, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p6, :cond_4a
+
+    move-object/from16 v0, v27
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_4a
+
+    :cond_47
+    :goto_47
+    add-int/lit8 v15, v15, 0x1
+
+    goto :goto_2d
+
+    :cond_4a
+    if-nez v7, :cond_54
+
+    const-string v2, "  All known processes:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/4 v7, 0x1
+
+    :cond_54
+    move-object/from16 v0, v27
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v2, :cond_93
+
+    const-string v2, "  *PERS*"
+
+    :goto_5c
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v2, " UID "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v24
+
+    invoke-virtual {v0, v15}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v27
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v2, "    "
+
+    move-object/from16 v0, v27
+
+    move-object/from16 v1, p2
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ProcessRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    move-object/from16 v0, v27
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v2, :cond_47
+
+    add-int/lit8 v20, v20, 0x1
+
+    goto :goto_47
+
+    :cond_93
+    const-string v2, "  *APP*"
+
+    goto :goto_5c
+
+    :cond_96
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_c6
+
+    if-eqz v7, :cond_a9
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_a9
+    const/4 v7, 0x1
+
+    const-string v2, "  Process LRU list (sorted by oom_adj):"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    const-string v5, "    "
+
+    const-string v6, "Proc"
+
+    const-string v7, "PERS"
+
+    const/4 v8, 0x0
+
+    move-object/from16 v2, p2
+
+    move-object/from16 v3, p0
+
+    move-object/from16 v9, p6
+
+    invoke-static/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
+
+    const/4 v7, 0x1
+
+    :cond_c6
+    if-eqz p5, :cond_139
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v3
+
+    const/16 v23, 0x0
+
+    const/4 v13, 0x0
+
+    :goto_d0
+    :try_start_d0
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I
+
+    move-result v2
+
+    if-ge v13, v2, :cond_138
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v27
+
+    check-cast v27, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p6, :cond_f7
+
+    move-object/from16 v0, v27
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_f7
+
+    :goto_f4
+    add-int/lit8 v13, v13, 0x1
+
+    goto :goto_d0
+
+    :cond_f7
+    if-nez v23, :cond_10c
+
+    if-eqz v7, :cond_102
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_102
+    const/4 v7, 0x1
+
+    const-string v2, "  PID mappings:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v23, 0x1
+
+    :cond_10c
+    const-string v2, "    PID #"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, v13}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, ": "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_f4
+
+    :catchall_135
+    move-exception v2
+
+    monitor-exit v3
+    :try_end_137
+    .catchall {:try_start_d0 .. :try_end_137} :catchall_135
+
+    throw v2
+
+    :cond_138
+    :try_start_138
+    monitor-exit v3
+    :try_end_139
+    .catchall {:try_start_138 .. :try_end_139} :catchall_135
+
+    :cond_139
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_1c2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v3
+
+    const/16 v23, 0x0
+
+    const/4 v13, 0x0
+
+    :goto_14b
+    :try_start_14b
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I
+
+    move-result v2
+
+    if-ge v13, v2, :cond_1c1
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;
+
+    iget v2, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I
+
+    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v27
+
+    check-cast v27, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p6, :cond_180
+
+    if-eqz v27, :cond_17d
+
+    move-object/from16 v0, v27
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_180
+
+    :cond_17d
+    :goto_17d
+    add-int/lit8 v13, v13, 0x1
+
+    goto :goto_14b
+
+    :cond_180
+    if-nez v23, :cond_195
+
+    if-eqz v7, :cond_18b
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_18b
+    const/4 v7, 0x1
+
+    const-string v2, "  Foreground Processes:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v23, 0x1
+
+    :cond_195
+    const-string v2, "    PID #"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, v13}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, ": "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_17d
+
+    :catchall_1be
+    move-exception v2
+
+    monitor-exit v3
+    :try_end_1c0
+    .catchall {:try_start_14b .. :try_end_1c0} :catchall_1be
+
+    throw v2
+
+    :cond_1c1
+    :try_start_1c1
+    monitor-exit v3
+    :try_end_1c2
+    .catchall {:try_start_1c1 .. :try_end_1c2} :catchall_1be
+
+    :cond_1c2
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_1f3
+
+    if-eqz v7, :cond_1d5
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_1d5
+    const/16 v17, 0x1
+
+    const-string v2, "  Persisent processes that are starting:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;
+
+    const-string v5, "    "
+
+    const-string v6, "Starting Norm"
+
+    const-string v7, "Restarting PERS"
+
+    move-object/from16 v2, p2
+
+    move-object/from16 v3, p0
+
+    move-object/from16 v8, p6
+
+    invoke-static/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+
+    move/from16 v7, v17
+
+    :cond_1f3
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_224
+
+    if-eqz v7, :cond_206
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_206
+    const/16 v17, 0x1
+
+    const-string v2, "  Processes that are being removed:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    const-string v5, "    "
+
+    const-string v6, "Removed Norm"
+
+    const-string v7, "Removed PERS"
+
+    move-object/from16 v2, p2
+
+    move-object/from16 v3, p0
+
+    move-object/from16 v8, p6
+
+    invoke-static/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+
+    move/from16 v7, v17
+
+    :cond_224
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_255
+
+    if-eqz v7, :cond_237
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_237
+    const/16 v17, 0x1
+
+    const-string v2, "  Processes that are on old until the system is ready:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    const-string v5, "    "
+
+    const-string v6, "OnHold Norm"
+
+    const-string v7, "OnHold PERS"
+
+    move-object/from16 v2, p2
+
+    move-object/from16 v3, p0
+
+    move-object/from16 v8, p6
+
+    invoke-static/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
+
+    move/from16 v7, v17
+
+    :cond_255
+    move-object/from16 v2, p0
+
+    move-object/from16 v3, p1
+
+    move-object/from16 v4, p2
+
+    move-object/from16 v5, p3
+
+    move/from16 v6, p4
+
+    move/from16 v8, p5
+
+    move-object/from16 v9, p6
+
+    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+
+    move-result v7
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_326
+
+    const/16 v23, 0x0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v18
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v14
+
+    :cond_28b
+    invoke-interface {v14}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_326
+
+    invoke-interface {v14}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v25
+
+    check-cast v25, Ljava/util/Map$Entry;
+
+    invoke-interface/range {v25 .. v25}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v22
+
+    check-cast v22, Ljava/lang/String;
+
+    invoke-interface/range {v25 .. v25}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;
+
+    move-result-object v29
+
+    check-cast v29, Landroid/util/SparseArray;
+
+    invoke-virtual/range {v29 .. v29}, Landroid/util/SparseArray;->size()I
+
+    move-result v10
+
+    const/4 v13, 0x0
+
+    :goto_2a8
+    if-ge v13, v10, :cond_28b
+
+    move-object/from16 v0, v29
+
+    invoke-virtual {v0, v13}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v26
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, v22
+
+    move/from16 v1, v26
+
+    invoke-virtual {v2, v0, v1}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v27
+
+    check-cast v27, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p6, :cond_2d3
+
+    if-eqz v27, :cond_2d0
+
+    move-object/from16 v0, v27
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_2d3
+
+    :cond_2d0
+    :goto_2d0
+    add-int/lit8 v13, v13, 0x1
+
+    goto :goto_2a8
+
+    :cond_2d3
+    if-nez v23, :cond_2e8
+
+    if-eqz v7, :cond_2de
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_2de
+    const/4 v7, 0x1
+
+    const-string v2, "  Time since processes crashed:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v23, 0x1
+
+    :cond_2e8
+    const-string v2, "    Process "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v22
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v2, " uid "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v26
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, ": last crashed "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v29
+
+    invoke-virtual {v0, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Ljava/lang/Long;
+
+    invoke-virtual {v2}, Ljava/lang/Long;->longValue()J
+
+    move-result-wide v2
+
+    sub-long v2, v18, v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2, v3}, Ljava/io/PrintWriter;->print(J)V
+
+    const-string v2, " ms ago"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_2d0
+
+    :cond_326
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_3d0
+
+    const/16 v23, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v14
+
+    :cond_346
+    invoke-interface {v14}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_3d0
+
+    invoke-interface {v14}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v25
+
+    check-cast v25, Ljava/util/Map$Entry;
+
+    invoke-interface/range {v25 .. v25}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v22
+
+    check-cast v22, Ljava/lang/String;
+
+    invoke-interface/range {v25 .. v25}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;
+
+    move-result-object v29
+
+    check-cast v29, Landroid/util/SparseArray;
+
+    invoke-virtual/range {v29 .. v29}, Landroid/util/SparseArray;->size()I
+
+    move-result v10
+
+    const/4 v13, 0x0
+
+    :goto_363
+    if-ge v13, v10, :cond_346
+
+    move-object/from16 v0, v29
+
+    invoke-virtual {v0, v13}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v26
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    move-object/from16 v0, v22
+
+    move/from16 v1, v26
+
+    invoke-virtual {v2, v0, v1}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v27
+
+    check-cast v27, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p6, :cond_38e
+
+    if-eqz v27, :cond_38b
+
+    move-object/from16 v0, v27
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, p6
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_38e
+
+    :cond_38b
+    :goto_38b
+    add-int/lit8 v13, v13, 0x1
+
+    goto :goto_363
+
+    :cond_38e
+    if-nez v23, :cond_3a1
+
+    if-eqz v7, :cond_399
+
+    const-string v2, " "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_399
+    const/4 v7, 0x1
+
+    const-string v2, "  Bad processes:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_3a1
+    const-string v2, "    Bad process "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v22
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v2, " uid "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v26
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v2, ": crashed at time "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v29
+
+    invoke-virtual {v0, v13}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_38b
+
+    :cond_3d0
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mHomeProcess: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mPreviousProcess: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_42d
+
+    new-instance v28, Ljava/lang/StringBuilder;
+
+    const/16 v2, 0x80
+
+    move-object/from16 v0, v28
+
+    invoke-direct {v0, v2}, Ljava/lang/StringBuilder;-><init>(I)V
+
+    const-string v2, "  mPreviousProcessVisibleTime: "
+
+    move-object/from16 v0, v28
+
+    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p0
+
+    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcessVisibleTime:J
+
+    move-object/from16 v0, v28
+
+    invoke-static {v2, v3, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v28
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    :cond_42d
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_44f
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mHeavyWeightProcess: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_44f
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mConfiguration: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_4fe
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mConfigWillChange: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-boolean v3, v3, Lcom/android/server/am/ActivityStack;->mConfigWillChange:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v2}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_4fe
+
+    const/16 v23, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v2}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v2
+
+    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v14
+
+    :cond_4ab
+    :goto_4ab
+    invoke-interface {v14}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_4fe
+
+    invoke-interface {v14}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v12
+
+    check-cast v12, Ljava/util/Map$Entry;
+
+    invoke-interface {v12}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v21
+
+    check-cast v21, Ljava/lang/String;
+
+    invoke-interface {v12}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Ljava/lang/Integer;
+
+    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I
+
+    move-result v16
+
+    if-eqz p6, :cond_4d3
+
+    move-object/from16 v0, p6
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_4ab
+
+    :cond_4d3
+    if-nez v23, :cond_4de
+
+    const-string v2, "  mScreenCompatPackages:"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v23, 0x1
+
+    :cond_4de
+    const-string v2, "    "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v2, ": "
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v16
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    goto :goto_4ab
+
+    :cond_4fe
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mSleeping="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mShuttingDown="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    if-nez v2, :cond_540
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;
+
+    if-nez v2, :cond_540
+
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z
+
+    if-nez v2, :cond_540
+
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z
+
+    if-eqz v2, :cond_586
+
+    :cond_540
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mDebugApp="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, "/orig="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mDebugTransient="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mOrigWaitForDebugger="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_586
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    if-nez v2, :cond_59e
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v2, :cond_59e
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;
+
+    if-nez v2, :cond_59e
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    if-eqz v2, :cond_61c
+
+    :cond_59e
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mProfileApp="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mProfileProc="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mProfileFile="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mProfileFd="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mProfileType="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mAutoStopProfiler="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_61c
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
+
+    if-nez v2, :cond_628
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    if-eqz v2, :cond_652
+
+    :cond_628
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mAlwaysFinishActivities="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mController="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_652
+    if-eqz p5, :cond_79c
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  Total persistent processes: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move/from16 v0, v20
+
+    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mStartRunning="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mStartRunning:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mProcessesReady="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mSystemReady="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mBooting="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mBooted="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mFactoryTest="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v2, "  mLastPowerCheckRealtime="
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J
+
+    move-object/from16 v0, p2
+
+    invoke-static {v2, v3, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V
+
+    const-string v2, ""
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v2, "  mLastPowerCheckUptime="
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J
+
+    move-object/from16 v0, p2
+
+    invoke-static {v2, v3, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V
+
+    const-string v2, ""
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mGoingToSleep="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v3, Lcom/android/server/am/ActivityStack;->mGoingToSleep:Landroid/os/PowerManager$WakeLock;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mLaunchingActivity="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v3, Lcom/android/server/am/ActivityStack;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mAdjSeq="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mLruSeq="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "  mNumServiceProcs="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " mNewNumServiceProcs="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_79c
+    const/4 v2, 0x1
+
+    return v2
+.end method
+
+.method dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+    .registers 15
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-lez v5, :cond_6d
+
+    const/4 v3, 0x0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    const/4 v0, 0x0
+
+    :goto_e
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-ge v0, v5, :cond_6d
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz p7, :cond_2d
+
+    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p7, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-nez v5, :cond_2d
+
+    :goto_2a
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_e
+
+    :cond_2d
+    if-nez v3, :cond_3d
+
+    if-eqz p5, :cond_36
+
+    const-string v5, " "
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_36
+    const/4 p5, 0x1
+
+    const-string v5, "  Processes that are waiting to GC:"
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/4 v3, 0x1
+
+    :cond_3d
+    const-string v5, "    Process "
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v5, "      lowMem="
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Z)V
+
+    const-string v5, ", last gced="
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-wide v5, v4, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    sub-long v5, v1, v5
+
+    invoke-virtual {p2, v5, v6}, Ljava/io/PrintWriter;->print(J)V
+
+    const-string v5, " ms ago, last lowMem="
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-wide v5, v4, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J
+
+    sub-long v5, v1, v5
+
+    invoke-virtual {p2, v5, v6}, Ljava/io/PrintWriter;->print(J)V
+
+    const-string v5, " ms ago"
+
+    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto :goto_2a
+
+    :cond_6d
+    return p5
+.end method
+
+.method dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)Z
+    .registers 28
+
+    const/4 v14, 0x0
+
+    new-instance v13, Lcom/android/server/am/ActivityManagerService$ItemMatcher;
+
+    invoke-direct {v13}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V
+
+    move-object/from16 v0, p3
+
+    move/from16 v1, p4
+
+    invoke-virtual {v13, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build([Ljava/lang/String;I)I
+
+    const-string v20, "ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/HashMap;->size()I
+
+    move-result v20
+
+    if-lez v20, :cond_131
+
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v20
+
+    invoke-interface/range {v20 .. v20}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v11
+
+    :cond_32
+    :goto_32
+    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v20
+
+    if-eqz v20, :cond_131
+
+    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Ljava/util/Map$Entry;
+
+    invoke-interface {v6}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ContentProviderRecord;
+
+    invoke-interface {v6}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Landroid/content/ComponentName;
+
+    invoke-virtual {v4}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;
+
+    move-result-object v3
+
+    const/16 v20, 0x2e
+
+    move/from16 v0, v20
+
+    invoke-virtual {v3, v0}, Ljava/lang/String;->lastIndexOf(I)I
+
+    move-result v8
+
+    if-lez v8, :cond_6a
+
+    invoke-virtual {v3}, Ljava/lang/String;->length()I
+
+    move-result v20
+
+    add-int/lit8 v20, v20, -0x2
+
+    move/from16 v0, v20
+
+    if-ge v8, v0, :cond_6a
+
+    add-int/lit8 v20, v8, 0x1
+
+    move/from16 v0, v20
+
+    invoke-virtual {v3, v0}, Ljava/lang/String;->substring(I)Ljava/lang/String;
+
+    move-result-object v3
+
+    :cond_6a
+    move-object/from16 v0, v18
+
+    invoke-virtual {v13, v0, v4}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v20
+
+    if-eqz v20, :cond_32
+
+    if-eqz p6, :cond_82
+
+    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v20
+
+    move-object/from16 v0, p6
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v20
+
+    if-eqz v20, :cond_32
+
+    :cond_82
+    if-nez v17, :cond_9b
+
+    if-eqz v14, :cond_8f
+
+    const-string v20, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_8f
+    const/4 v14, 0x1
+
+    const-string v20, "  Published content providers (by class):"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v17, 0x1
+
+    :cond_9b
+    const-string v20, "  * "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v20, " ("
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-virtual {v4}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v20
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v20, ")"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    if-eqz p5, :cond_d5
+
+    const-string v20, "      "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v20
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ContentProviderRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto/16 :goto_32
+
+    :cond_d5
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v20, v0
+
+    if-eqz v20, :cond_12d
+
+    const-string v20, "      "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v20, v0
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    :goto_f3
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/HashSet;->size()I
+
+    move-result v20
+
+    if-lez v20, :cond_32
+
+    const-string v20, "      Clients:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v10
+
+    :goto_112
+    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v20
+
+    if-eqz v20, :cond_32
+
+    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ProcessRecord;
+
+    const-string v20, "        - "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_112
+
+    :cond_12d
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    goto :goto_f3
+
+    :cond_131
+    if-eqz p5, :cond_1d0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/HashMap;->size()I
+
+    move-result v20
+
+    if-lez v20, :cond_1d0
+
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;
+
+    move-result-object v20
+
+    invoke-interface/range {v20 .. v20}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v12
+
+    :cond_14f
+    :goto_14f
+    invoke-interface {v12}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v20
+
+    if-eqz v20, :cond_1d0
+
+    invoke-interface {v12}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Ljava/util/Map$Entry;
+
+    invoke-interface {v7}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ContentProviderRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v20, v0
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v13, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v20
+
+    if-eqz v20, :cond_14f
+
+    if-eqz p6, :cond_187
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v20
+
+    move-object/from16 v0, p6
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v20
+
+    if-eqz v20, :cond_14f
+
+    :cond_187
+    if-nez v17, :cond_1a0
+
+    if-eqz v14, :cond_194
+
+    const-string v20, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_194
+    const/4 v14, 0x1
+
+    const-string v20, "  Authority to provider mappings:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v17, 0x1
+
+    :cond_1a0
+    const-string v20, "  "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    invoke-interface {v7}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;
+
+    move-result-object v20
+
+    check-cast v20, Ljava/lang/String;
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v20, ":"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const-string v20, "    "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_14f
+
+    :cond_1d0
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/ArrayList;->size()I
+
+    move-result v20
+
+    if-lez v20, :cond_24b
+
+    const/16 v17, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Ljava/util/ArrayList;->size()I
+
+    move-result v20
+
+    add-int/lit8 v9, v20, -0x1
+
+    :goto_1ea
+    if-ltz v9, :cond_24b
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    move-object/from16 v20, v0
+
+    move-object/from16 v0, v20
+
+    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ContentProviderRecord;
+
+    if-eqz p6, :cond_213
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;
+
+    move-result-object v20
+
+    move-object/from16 v0, p6
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v20
+
+    if-nez v20, :cond_213
+
+    :goto_210
+    add-int/lit8 v9, v9, -0x1
+
+    goto :goto_1ea
+
+    :cond_213
+    if-nez v17, :cond_22c
+
+    if-eqz v14, :cond_220
+
+    const-string v20, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_220
+    const/4 v14, 0x1
+
+    const-string v20, "  Launching content providers:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v17, 0x1
+
+    :cond_22c
+    const-string v20, "  Launching #"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v20, ": "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    goto :goto_210
+
+    :cond_24b
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Landroid/util/SparseArray;->size()I
+
+    move-result v20
+
+    if-lez v20, :cond_2da
+
+    if-eqz v14, :cond_25c
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_25c
+    const/4 v14, 0x1
+
+    const-string v20, "Granted Uri Permissions:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/4 v9, 0x0
+
+    :goto_267
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    move-object/from16 v20, v0
+
+    invoke-virtual/range {v20 .. v20}, Landroid/util/SparseArray;->size()I
+
+    move-result v20
+
+    move/from16 v0, v20
+
+    if-ge v9, v0, :cond_2d9
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    move-object/from16 v20, v0
+
+    move-object/from16 v0, v20
+
+    invoke-virtual {v0, v9}, Landroid/util/SparseArray;->keyAt(I)I
+
+    move-result v19
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    move-object/from16 v20, v0
+
+    move-object/from16 v0, v20
+
+    invoke-virtual {v0, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Ljava/util/HashMap;
+
+    const-string v20, "  * UID "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v19
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V
+
+    const-string v20, " holds:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual/range {v16 .. v16}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v20
+
+    invoke-interface/range {v20 .. v20}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v10
+
+    :cond_2b0
+    :goto_2b0
+    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v20
+
+    if-eqz v20, :cond_2d6
+
+    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v15
+
+    check-cast v15, Lcom/android/server/am/UriPermission;
+
+    const-string v20, "    "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    if-eqz p5, :cond_2b0
+
+    const-string v20, "      "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v20
+
+    invoke-virtual {v15, v0, v1}, Lcom/android/server/am/UriPermission;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_2b0
+
+    :cond_2d6
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_267
+
+    :cond_2d9
+    const/4 v14, 0x1
+
+    :cond_2da
+    return v14
+.end method
+
+.method protected dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
+    .registers 22
+
+    new-instance v14, Ljava/util/ArrayList;
+
+    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V
+
+    const-string v1, "all"
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_36
+
+    monitor-enter p0
+
+    :try_start_10
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v10
+
+    :goto_1a
+    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_2d
+
+    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Lcom/android/server/am/ServiceRecord;
+
+    invoke-virtual {v14, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_1a
+
+    :catchall_2a
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_2c
+    .catchall {:try_start_10 .. :try_end_2c} :catchall_2a
+
+    throw v1
+
+    :cond_2d
+    :try_start_2d
+    monitor-exit p0
+    :try_end_2e
+    .catchall {:try_start_2d .. :try_end_2e} :catchall_2a
+
+    :goto_2e
+    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-gtz v1, :cond_94
+
+    const/4 v1, 0x0
+
+    :goto_35
+    return v1
+
+    :cond_36
+    if-eqz p3, :cond_72
+
+    invoke-static/range {p3 .. p3}, Landroid/content/ComponentName;->unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName;
+
+    move-result-object v8
+
+    :goto_3c
+    const/4 v12, 0x0
+
+    if-nez v8, :cond_4a
+
+    const/16 v1, 0x10
+
+    :try_start_41
+    move-object/from16 v0, p3
+
+    invoke-static {v0, v1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;I)I
+    :try_end_46
+    .catch Ljava/lang/RuntimeException; {:try_start_41 .. :try_end_46} :catch_bc
+
+    move-result v12
+
+    const/16 p3, 0x0
+
+    const/4 v8, 0x0
+
+    :cond_4a
+    :goto_4a
+    monitor-enter p0
+
+    :try_start_4b
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v1}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v1
+
+    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v10
+
+    :cond_55
+    :goto_55
+    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_92
+
+    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Lcom/android/server/am/ServiceRecord;
+
+    if-eqz v8, :cond_74
+
+    iget-object v1, v13, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v1, v8}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_55
+
+    invoke-virtual {v14, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_55
+
+    :catchall_6f
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_71
+    .catchall {:try_start_4b .. :try_end_71} :catchall_6f
+
+    throw v1
+
+    :cond_72
+    const/4 v8, 0x0
+
+    goto :goto_3c
+
+    :cond_74
+    if-eqz p3, :cond_88
+
+    :try_start_76
+    iget-object v1, v13, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v1}, Landroid/content/ComponentName;->flattenToString()Ljava/lang/String;
+
+    move-result-object v1
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_55
+
+    invoke-virtual {v14, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_55
+
+    :cond_88
+    invoke-static {v13}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v1
+
+    if-ne v1, v12, :cond_55
+
+    invoke-virtual {v14, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_55
+
+    :cond_92
+    monitor-exit p0
+    :try_end_93
+    .catchall {:try_start_76 .. :try_end_93} :catchall_6f
+
+    goto :goto_2e
+
+    :cond_94
+    const/4 v11, 0x0
+
+    const/4 v9, 0x0
+
+    :goto_96
+    invoke-virtual {v14}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    if-ge v9, v1, :cond_b9
+
+    if-eqz v11, :cond_a1
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_a1
+    const/4 v11, 0x1
+
+    const-string v2, ""
+
+    invoke-virtual {v14, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ServiceRecord;
+
+    move-object v1, p0
+
+    move-object/from16 v3, p1
+
+    move-object/from16 v4, p2
+
+    move-object/from16 v6, p4
+
+    move/from16 v7, p6
+
+    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpService(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ServiceRecord;[Ljava/lang/String;Z)V
+
+    add-int/lit8 v9, v9, 0x1
+
+    goto :goto_96
+
+    :cond_b9
+    const/4 v1, 0x1
+
+    goto/16 :goto_35
+
+    :catch_bc
+    move-exception v1
+
+    goto :goto_4a
+.end method
+
+.method dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
+    .registers 33
+
+    const/4 v13, 0x0
+
+    new-instance v12, Lcom/android/server/am/ActivityManagerService$ItemMatcher;
+
+    invoke-direct {v12}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V
+
+    move-object/from16 v0, p3
+
+    move/from16 v1, p4
+
+    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build([Ljava/lang/String;I)I
+
+    const-string v21, "ACTIVITY MANAGER SERVICES (dumpsys activity services)"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->size()I
+
+    move-result v21
+
+    if-lez v21, :cond_219
+
+    const/16 v16, 0x0
+
+    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J
+
+    move-result-wide v14
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v21
+
+    invoke-interface/range {v21 .. v21}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v10
+
+    const/4 v13, 0x0
+
+    :cond_37
+    :goto_37
+    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v21
+
+    if-eqz v21, :cond_217
+
+    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v21
+
+    if-eqz v21, :cond_37
+
+    if-eqz p7, :cond_6b
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, p7
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v21
+
+    if-eqz v21, :cond_37
+
+    :cond_6b
+    if-nez v16, :cond_78
+
+    const-string v21, "  Active services:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    :cond_78
+    if-eqz v13, :cond_7d
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V
+
+    :cond_7d
+    const-string v21, "  * "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    if-eqz p5, :cond_f9
+
+    const-string v21, "    "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v21
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    const/4 v13, 0x1
+
+    :cond_9b
+    if-eqz p6, :cond_37
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v21, v0
+
+    if-eqz v21, :cond_37
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v21, v0
+
+    if-eqz v21, :cond_37
+
+    const-string v21, "    Client:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V
+
+    :try_start_bf
+    new-instance v20, Lcom/android/server/am/TransferPipe;
+
+    invoke-direct/range {v20 .. v20}, Lcom/android/server/am/TransferPipe;-><init>()V
+    :try_end_c4
+    .catch Ljava/io/IOException; {:try_start_bf .. :try_end_c4} :catch_1ec
+    .catch Landroid/os/RemoteException; {:try_start_bf .. :try_end_c4} :catch_20b
+
+    :try_start_c4
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v20 .. v20}, Lcom/android/server/am/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;
+
+    move-result-object v22
+
+    invoke-virtual/range {v22 .. v22}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;
+
+    move-result-object v22
+
+    move-object/from16 v0, v21
+
+    move-object/from16 v1, v22
+
+    move-object/from16 v2, v18
+
+    move-object/from16 v3, p3
+
+    invoke-interface {v0, v1, v2, v3}, Landroid/app/IApplicationThread;->dumpService(Ljava/io/FileDescriptor;Landroid/os/IBinder;[Ljava/lang/String;)V
+
+    const-string v21, "      "
+
+    invoke-virtual/range {v20 .. v21}, Lcom/android/server/am/TransferPipe;->setBufferPrefix(Ljava/lang/String;)V
+
+    const-wide/16 v21, 0x7d0
+
+    move-object/from16 v0, v20
+
+    move-object/from16 v1, p1
+
+    move-wide/from16 v2, v21
+
+    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/TransferPipe;->go(Ljava/io/FileDescriptor;J)V
+    :try_end_f3
+    .catchall {:try_start_c4 .. :try_end_f3} :catchall_1e7
+
+    :try_start_f3
+    invoke-virtual/range {v20 .. v20}, Lcom/android/server/am/TransferPipe;->kill()V
+    :try_end_f6
+    .catch Ljava/io/IOException; {:try_start_f3 .. :try_end_f6} :catch_1ec
+    .catch Landroid/os/RemoteException; {:try_start_f3 .. :try_end_f6} :catch_20b
+
+    :goto_f6
+    const/4 v13, 0x1
+
+    goto/16 :goto_37
+
+    :cond_f9
+    const-string v21, "    app="
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v21, "    created="
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-wide v0, v0, Lcom/android/server/am/ServiceRecord;->createTime:J
+
+    move-wide/from16 v21, v0
+
+    move-wide/from16 v0, v21
+
+    move-object/from16 v2, p2
+
+    invoke-static {v0, v1, v14, v15, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V
+
+    const-string v21, " started="
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-boolean v0, v0, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    move/from16 v21, v0
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V
+
+    const-string v21, " connections="
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->size()I
+
+    move-result v21
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->size()I
+
+    move-result v21
+
+    if-lez v21, :cond_9b
+
+    const-string v21, "    Connections:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v21
+
+    invoke-interface/range {v21 .. v21}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v9
+
+    :cond_178
+    invoke-interface {v9}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v21
+
+    if-eqz v21, :cond_9b
+
+    invoke-interface {v9}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Ljava/util/ArrayList;
+
+    const/4 v8, 0x0
+
+    :goto_185
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    if-ge v8, v0, :cond_178
+
+    invoke-virtual {v4, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ConnectionRecord;
+
+    const-string v21, "      "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v0, v5, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v21
+
+    const/16 v22, 0x0
+
+    const/16 v23, 0x0
+
+    const/16 v24, 0x0
+
+    invoke-virtual/range {v21 .. v24}, Landroid/content/Intent;->toShortString(ZZZ)Ljava/lang/String;
+
+    move-result-object v21
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    const-string v21, " -> "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    iget-object v0, v5, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v17, v0
+
+    if-eqz v17, :cond_1e4
+
+    invoke-virtual/range {v17 .. v17}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;
+
+    move-result-object v21
+
+    :goto_1da
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_185
+
+    :cond_1e4
+    const-string v21, "null"
+
+    goto :goto_1da
+
+    :catchall_1e7
+    move-exception v21
+
+    :try_start_1e8
+    invoke-virtual/range {v20 .. v20}, Lcom/android/server/am/TransferPipe;->kill()V
+
+    throw v21
+    :try_end_1ec
+    .catch Ljava/io/IOException; {:try_start_1e8 .. :try_end_1ec} :catch_1ec
+    .catch Landroid/os/RemoteException; {:try_start_1e8 .. :try_end_1ec} :catch_20b
+
+    :catch_1ec
+    move-exception v7
+
+    new-instance v21, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v21 .. v21}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v22, "      Failure while dumping the service: "
+
+    invoke-virtual/range {v21 .. v22}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v21
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v0, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v21
+
+    invoke-virtual/range {v21 .. v21}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v21
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_f6
+
+    :catch_20b
+    move-exception v7
+
+    const-string v21, "      Got a RemoteException while dumping the service"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    goto/16 :goto_f6
+
+    :cond_217
+    move/from16 v13, v16
+
+    :cond_219
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    if-lez v21, :cond_2a5
+
+    const/16 v16, 0x0
+
+    const/4 v8, 0x0
+
+    :goto_228
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    if-ge v8, v0, :cond_2a4
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPendingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v21
+
+    if-nez v21, :cond_257
+
+    :cond_254
+    :goto_254
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_228
+
+    :cond_257
+    if-eqz p7, :cond_26f
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, p7
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v21
+
+    if-eqz v21, :cond_254
+
+    :cond_26f
+    if-nez v16, :cond_288
+
+    if-eqz v13, :cond_27c
+
+    const-string v21, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_27c
+    const/4 v13, 0x1
+
+    const-string v21, "  Pending services:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    :cond_288
+    const-string v21, "  * Pending "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v21, "    "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v21
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_254
+
+    :cond_2a4
+    const/4 v13, 0x1
+
+    :cond_2a5
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    if-lez v21, :cond_331
+
+    const/16 v16, 0x0
+
+    const/4 v8, 0x0
+
+    :goto_2b4
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    if-ge v8, v0, :cond_330
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v21
+
+    if-nez v21, :cond_2e3
+
+    :cond_2e0
+    :goto_2e0
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_2b4
+
+    :cond_2e3
+    if-eqz p7, :cond_2fb
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, p7
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v21
+
+    if-eqz v21, :cond_2e0
+
+    :cond_2fb
+    if-nez v16, :cond_314
+
+    if-eqz v13, :cond_308
+
+    const-string v21, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_308
+    const/4 v13, 0x1
+
+    const-string v21, "  Restarting services:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    :cond_314
+    const-string v21, "  * Restarting "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v21, "    "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v21
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_2e0
+
+    :cond_330
+    const/4 v13, 0x1
+
+    :cond_331
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    if-lez v21, :cond_3bd
+
+    const/16 v16, 0x0
+
+    const/4 v8, 0x0
+
+    :goto_340
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    if-ge v8, v0, :cond_3bc
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v18
+
+    check-cast v18, Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v21
+
+    if-nez v21, :cond_36f
+
+    :cond_36c
+    :goto_36c
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_340
+
+    :cond_36f
+    if-eqz p7, :cond_387
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, p7
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v21
+
+    if-eqz v21, :cond_36c
+
+    :cond_387
+    if-nez v16, :cond_3a0
+
+    if-eqz v13, :cond_394
+
+    const-string v21, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_394
+    const/4 v13, 0x1
+
+    const-string v21, "  Stopping services:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    :cond_3a0
+    const-string v21, "  * Stopping "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v21, "    "
+
+    move-object/from16 v0, v18
+
+    move-object/from16 v1, p2
+
+    move-object/from16 v2, v21
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ServiceRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_36c
+
+    :cond_3bc
+    const/4 v13, 0x1
+
+    :cond_3bd
+    if-eqz p5, :cond_47f
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->size()I
+
+    move-result v21
+
+    if-lez v21, :cond_47f
+
+    const/16 v16, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    move-object/from16 v21, v0
+
+    invoke-virtual/range {v21 .. v21}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v21
+
+    invoke-interface/range {v21 .. v21}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v11
+
+    :cond_3db
+    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v21
+
+    if-eqz v21, :cond_47e
+
+    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v19
+
+    check-cast v19, Ljava/util/ArrayList;
+
+    const/4 v8, 0x0
+
+    :goto_3e8
+    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I
+
+    move-result v21
+
+    move/from16 v0, v21
+
+    if-ge v8, v0, :cond_3db
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v6
+
+    check-cast v6, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v0, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v21, v0
+
+    iget-object v0, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v22, v0
+
+    move-object/from16 v0, v22
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    move-object/from16 v22, v0
+
+    move-object/from16 v0, v22
+
+    iget-object v0, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v22, v0
+
+    move-object/from16 v0, v21
+
+    move-object/from16 v1, v22
+
+    invoke-virtual {v12, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->match(Ljava/lang/Object;Landroid/content/ComponentName;)Z
+
+    move-result v21
+
+    if-nez v21, :cond_41f
+
+    :cond_41c
+    :goto_41c
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_3e8
+
+    :cond_41f
+    if-eqz p7, :cond_44d
+
+    iget-object v0, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v21, v0
+
+    if-eqz v21, :cond_41c
+
+    iget-object v0, v6, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v21, v0
+
+    move-object/from16 v0, p7
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v21
+
+    if-eqz v21, :cond_41c
+
+    :cond_44d
+    if-nez v16, :cond_466
+
+    if-eqz v13, :cond_45a
+
+    const-string v21, " "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    :cond_45a
+    const/4 v13, 0x1
+
+    const-string v21, "  Connection bindings to services:"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
+
+    const/16 v16, 0x1
+
+    :cond_466
+    const-string v21, "  * "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V
+
+    const-string v21, "    "
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v6, v0, v1}, Lcom/android/server/am/ConnectionRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V
+
+    goto :goto_41c
+
+    :cond_47e
+    const/4 v13, 0x1
+
+    :cond_47f
+    return v13
+.end method
+
+.method enableScreenAfterBoot()V
+    .registers 4
+
+    const/16 v0, 0xbea
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    invoke-static {v0, v1, v2}, Landroid/util/EventLog;->writeEvent(IJ)I
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->enableScreenAfterBoot()V
+
+    return-void
+.end method
+
+.method enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+    .registers 6
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v1
+
+    if-nez v1, :cond_7
+
+    return-void
+
+    :cond_7
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Permission Denial: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " from pid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " requires "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "ActivityManager"
+
+    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+.end method
+
+.method final ensureBootCompleted()V
+    .registers 5
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    monitor-enter p0
+
+    :try_start_3
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z
+
+    const/4 v3, 0x0
+
+    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z
+
+    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
+
+    if-nez v3, :cond_1b
+
+    :goto_c
+    const/4 v2, 0x1
+
+    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z
+
+    monitor-exit p0
+    :try_end_10
+    .catchall {:try_start_3 .. :try_end_10} :catchall_1d
+
+    if-eqz v0, :cond_15
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V
+
+    :cond_15
+    if-eqz v1, :cond_1a
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->enableScreenAfterBoot()V
+
+    :cond_1a
+    return-void
+
+    :cond_1b
+    move v1, v2
+
+    goto :goto_c
+
+    :catchall_1d
+    move-exception v2
+
+    :try_start_1e
+    monitor-exit p0
+    :try_end_1f
+    .catchall {:try_start_1e .. :try_end_1f} :catchall_1d
+
+    throw v2
+.end method
+
+.method ensurePackageDexOpt(Ljava/lang/String;)V
+    .registers 4
+
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v0
+
+    :try_start_4
+    invoke-interface {v0, p1}, Landroid/content/pm/IPackageManager;->performDexOpt(Ljava/lang/String;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_d
+
+    const/4 v1, 0x1
+
+    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
+    :try_end_d
+    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_d} :catch_e
+
+    :cond_d
+    :goto_d
+    return-void
+
+    :catch_e
+    move-exception v1
+
+    goto :goto_d
+.end method
+
+.method public final enterSafeMode()V
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+    :try_end_3
+    .catchall {:try_start_1 .. :try_end_3} :catchall_e
+
+    if-nez v0, :cond_c
+
+    :try_start_5
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v0
+
+    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
+    :try_end_c
+    .catchall {:try_start_5 .. :try_end_c} :catchall_e
+    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_c} :catch_11
+
+    :cond_c
+    :goto_c
+    :try_start_c
+    monitor-exit p0
+
+    return-void
+
+    :catchall_e
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_10
+    .catchall {:try_start_c .. :try_end_10} :catchall_e
+
+    throw v0
+
+    :catch_11
+    move-exception v0
+
+    goto :goto_c
+.end method
+
+.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;)Z
+    .registers 12
+
+    const/4 v4, 0x0
+
+    if-eqz p3, :cond_12
+
+    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v6
+
+    const/4 v7, 0x1
+
+    if-ne v6, v7, :cond_12
+
+    new-instance v6, Ljava/lang/IllegalArgumentException;
+
+    const-string v7, "File descriptors passed in Intent"
+
+    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_12
+    monitor-enter p0
+
+    :try_start_13
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    if-eqz v6, :cond_35
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v6, p1, v7}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Landroid/os/IBinder;I)Lcom/android/server/am/ActivityRecord;
+    :try_end_1d
+    .catchall {:try_start_13 .. :try_end_1d} :catchall_32
+
+    move-result-object v1
+
+    if-eqz v1, :cond_35
+
+    const/4 v5, 0x1
+
+    :try_start_21
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    iget-object v7, v1, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    invoke-interface {v6, v7}, Landroid/app/IActivityController;->activityResuming(Ljava/lang/String;)Z
+    :try_end_28
+    .catchall {:try_start_21 .. :try_end_28} :catchall_32
+    .catch Landroid/os/RemoteException; {:try_start_21 .. :try_end_28} :catch_2d
+
+    move-result v5
+
+    :goto_29
+    if-nez v5, :cond_35
+
+    :try_start_2b
+    monitor-exit p0
+
+    :goto_2c
+    return v4
+
+    :catch_2d
+    move-exception v0
+
+    const/4 v6, 0x0
+
+    iput-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    goto :goto_29
+
+    :catchall_32
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_34
+    .catchall {:try_start_2b .. :try_end_34} :catchall_32
+
+    throw v6
+
+    :cond_35
+    :try_start_35
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v2
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const-string v7, "app-request"
+
+    invoke-virtual {v6, p1, p2, p3, v7}, Lcom/android/server/am/ActivityStack;->requestFinishActivityLocked(Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;)Z
+
+    move-result v4
+
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_45
+    .catchall {:try_start_35 .. :try_end_45} :catchall_32
+
+    goto :goto_2c
+.end method
+
+.method final finishBooting()V
+    .registers 22
+
+    new-instance v19, Landroid/content/IntentFilter;
+
+    invoke-direct/range {v19 .. v19}, Landroid/content/IntentFilter;-><init>()V
+
+    const-string v2, "android.intent.action.QUERY_PACKAGE_RESTART"
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V
+
+    const-string v2, "package"
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$6;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    new-instance v3, Lcom/android/server/am/ActivityManagerService$7;
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    invoke-static {v2, v3}, Lcom/android/internal/app/ThemeUtils;->registerThemeChangeReceiver(Landroid/content/Context;Landroid/content/BroadcastReceiver;)V
+
+    monitor-enter p0
+
+    :try_start_32
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v16
+
+    if-lez v16, :cond_64
+
+    new-instance v20, Ljava/util/ArrayList;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    move-object/from16 v0, v20
+
+    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V
+
+    const/16 v17, 0x0
+
+    :goto_49
+    move/from16 v0, v17
+
+    move/from16 v1, v16
+
+    if-ge v0, v1, :cond_64
+
+    move-object/from16 v0, v20
+
+    move/from16 v1, v17
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ProcessRecord;
+
+    const-string v3, "on-hold"
+
+    const/4 v4, 0x0
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+
+    add-int/lit8 v17, v17, 0x1
+
+    goto :goto_49
+
+    :cond_64
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v3, 0x1
+
+    if-eq v2, v3, :cond_a4
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v3, 0x1b
+
+    invoke-virtual {v2, v3}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v18
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const-wide/32 v3, 0xdbba0
+
+    move-object/from16 v0, v18
+
+    invoke-virtual {v2, v0, v3, v4}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z
+
+    const-string v2, "sys.boot_completed"
+
+    const-string v3, "1"
+
+    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    new-instance v5, Landroid/content/Intent;
+
+    const-string v2, "android.intent.action.BOOT_COMPLETED"
+
+    const/4 v6, 0x0
+
+    invoke-direct {v5, v2, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const-string v11, "android.permission.RECEIVE_BOOT_COMPLETED"
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    sget v14, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    const/16 v15, 0x3e8
+
+    move-object/from16 v2, p0
+
+    invoke-direct/range {v2 .. v15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    :cond_a4
+    monitor-exit p0
+
+    return-void
+
+    :catchall_a6
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_a8
+    .catchall {:try_start_32 .. :try_end_a8} :catchall_a6
+
+    throw v2
+.end method
+
+.method public final finishHeavyWeightApp()V
+    .registers 10
+
+    const-string v0, "android.permission.FORCE_STOP_PACKAGES"
+
+    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v0
+
+    if-eqz v0, :cond_44
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "Permission Denial: finishHeavyWeightApp() from pid="
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v3, ", uid="
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v3, " requires "
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v3, "android.permission.FORCE_STOP_PACKAGES"
+
+    invoke-virtual {v0, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    const-string v0, "ActivityManager"
+
+    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    invoke-direct {v0, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_44
+    monitor-enter p0
+
+    :try_start_45
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-nez v0, :cond_4b
+
+    monitor-exit p0
+
+    :goto_4a
+    return-void
+
+    :cond_4b
+    new-instance v6, Ljava/util/ArrayList;
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-direct {v6, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V
+
+    const/4 v7, 0x0
+
+    :goto_55
+    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-ge v7, v0, :cond_7b
+
+    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+
+    iget-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-nez v0, :cond_78
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStack;->indexOfTokenLocked(Landroid/os/IBinder;)I
+
+    move-result v2
+
+    if-ltz v2, :cond_78
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v5, "finish-heavy"
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    :cond_78
+    add-int/lit8 v7, v7, 0x1
+
+    goto :goto_55
+
+    :cond_7b
+    const/4 v0, 0x0
+
+    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v3, 0x19
+
+    invoke-virtual {v0, v3}, Landroid/os/Handler;->sendEmptyMessage(I)Z
+
+    monitor-exit p0
+
+    goto :goto_4a
+
+    :catchall_87
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_89
+    .catchall {:try_start_45 .. :try_end_89} :catchall_87
+
+    throw v0
+.end method
+
+.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
+    .registers 10
+
+    if-eqz p3, :cond_10
+
+    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_10
+
+    new-instance v3, Ljava/lang/IllegalArgumentException;
+
+    const-string v4, "File descriptors passed in Intent"
+
+    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_10
+    monitor-enter p0
+
+    :try_start_11
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_31
+
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "finishInstrumentation: no app for "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    :goto_30
+    return-void
+
+    :cond_31
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v1
+
+    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
+
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_30
+
+    :catchall_3d
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_3f
+    .catchall {:try_start_11 .. :try_end_3f} :catchall_3d
+
+    throw v3
+.end method
+
+.method finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
+    .registers 11
+
+    const/4 v5, 0x1
+
+    const/4 v3, 0x0
+
+    const/4 v2, 0x0
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;
+
+    if-eqz v0, :cond_e
+
+    :try_start_7
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    invoke-interface {v0, v1, p2, p3}, Landroid/app/IInstrumentationWatcher;->instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
+    :try_end_e
+    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_e} :catch_22
+
+    :cond_e
+    :goto_e
+    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;
+
+    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;
+
+    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    const/4 v2, -0x1
+
+    move-object v0, p0
+
+    move v4, v3
+
+    move v6, v5
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    return-void
+
+    :catch_22
+    move-exception v0
+
+    goto :goto_e
+.end method
+
+.method public finishOtherInstances(Landroid/os/IBinder;Landroid/content/ComponentName;)V
+    .registers 13
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v8
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    const/4 v7, 0x0
+
+    const/4 v2, 0x0
+
+    :goto_f
+    if-ge v2, v6, :cond_40
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;
+
+    invoke-virtual {v0, p2}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_3b
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    if-eq v0, p1, :cond_3b
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v7, v0, :cond_3b
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->stack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v5, "others"
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_3b
+
+    add-int/lit8 v2, v2, -0x1
+
+    add-int/lit8 v6, v6, -0x1
+
+    :cond_3b
+    iget-object v7, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_f
+
+    :cond_40
+    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_45
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_47
+    .catchall {:try_start_1 .. :try_end_47} :catchall_45
+
+    throw v0
+.end method
+
+.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;Z)V
+    .registers 16
+
+    if-eqz p4, :cond_10
+
+    invoke-virtual {p4}, Landroid/os/Bundle;->hasFileDescriptors()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_10
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v1, "File descriptors passed in Bundle"
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_10
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v8
+
+    monitor-enter p0
+
+    const/4 v6, 0x1
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move v2, p2
+
+    move-object v3, p3
+
+    move-object v4, p4
+
+    move v5, p5
+
+    :try_start_1c
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    move-result v7
+
+    monitor-exit p0
+    :try_end_21
+    .catchall {:try_start_1c .. :try_end_21} :catchall_2e
+
+    if-eqz v7, :cond_27
+
+    const/4 v0, 0x0
+
+    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->processNextBroadcast(Z)V
+
+    :cond_27
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
+
+    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :catchall_2e
+    move-exception v0
+
+    :try_start_2f
+    monitor-exit p0
+    :try_end_30
+    .catchall {:try_start_2f .. :try_end_30} :catchall_2e
+
+    throw v0
+.end method
+
+.method public final finishSubActivity(Landroid/os/IBinder;Ljava/lang/String;I)V
+    .registers 13
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v8
+
+    if-nez v8, :cond_b
+
+    monitor-exit p0
+
+    :goto_a
+    return-void
+
+    :cond_b
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v6
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    add-int/lit8 v2, v0, -0x1
+
+    :goto_19
+    if-ltz v2, :cond_4b
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;
+
+    if-ne v0, v8, :cond_48
+
+    iget v0, v1, Lcom/android/server/am/ActivityRecord;->requestCode:I
+
+    if-ne v0, p3, :cond_48
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;
+
+    if-nez v0, :cond_33
+
+    if-eqz p2, :cond_3f
+
+    :cond_33
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;
+
+    if-eqz v0, :cond_48
+
+    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;
+
+    invoke-virtual {v0, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_48
+
+    :cond_3f
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v5, "request-sub"
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    :cond_48
+    add-int/lit8 v2, v2, -0x1
+
+    goto :goto_19
+
+    :cond_4b
+    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_a
+
+    :catchall_50
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_52
+    .catchall {:try_start_1 .. :try_end_52} :catchall_50
+
+    throw v0
+.end method
+
+.method public forceStopPackage(Ljava/lang/String;)V
+    .registers 11
+
+    const-string v6, "android.permission.FORCE_STOP_PACKAGES"
+
+    invoke-virtual {p0, v6}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v6
+
+    if-eqz v6, :cond_44
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Permission Denial: forceStopPackage() from pid="
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v7
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, ", uid="
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v7
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " requires "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, "android.permission.FORCE_STOP_PACKAGES"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v6, "ActivityManager"
+
+    invoke-static {v6, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v6, Ljava/lang/SecurityException;
+
+    invoke-direct {v6, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :cond_44
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    :try_start_48
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v5
+
+    const/4 v4, -0x1
+
+    monitor-enter p0
+    :try_end_4e
+    .catchall {:try_start_48 .. :try_end_4e} :catchall_7e
+
+    :try_start_4e
+    invoke-interface {v5, p1}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+    :try_end_51
+    .catchall {:try_start_4e .. :try_end_51} :catchall_7b
+    .catch Landroid/os/RemoteException; {:try_start_4e .. :try_end_51} :catch_a7
+
+    move-result v4
+
+    :goto_52
+    const/4 v6, -0x1
+
+    if-ne v4, v6, :cond_72
+
+    :try_start_55
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Invalid packageName: "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+    :try_end_6e
+    .catchall {:try_start_55 .. :try_end_6e} :catchall_7b
+
+    :goto_6e
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :cond_72
+    :try_start_72
+    invoke-direct {p0, p1, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;I)V
+    :try_end_75
+    .catchall {:try_start_72 .. :try_end_75} :catchall_7b
+
+    const/4 v6, 0x1
+
+    :try_start_76
+    invoke-interface {v5, p1, v6}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;Z)V
+    :try_end_79
+    .catchall {:try_start_76 .. :try_end_79} :catchall_7b
+    .catch Landroid/os/RemoteException; {:try_start_76 .. :try_end_79} :catch_a9
+    .catch Ljava/lang/IllegalArgumentException; {:try_start_76 .. :try_end_79} :catch_83
+
+    :goto_79
+    :try_start_79
+    monitor-exit p0
+
+    goto :goto_6e
+
+    :catchall_7b
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_7d
+    .catchall {:try_start_79 .. :try_end_7d} :catchall_7b
+
+    :try_start_7d
+    throw v6
+    :try_end_7e
+    .catchall {:try_start_7d .. :try_end_7e} :catchall_7e
+
+    :catchall_7e
+    move-exception v6
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v6
+
+    :catch_83
+    move-exception v2
+
+    :try_start_84
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Failed trying to unstop package "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, ": "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_a6
+    .catchall {:try_start_84 .. :try_end_a6} :catchall_7b
+
+    goto :goto_79
+
+    :catch_a7
+    move-exception v6
+
+    goto :goto_52
+
+    :catch_a9
+    move-exception v6
+
+    goto :goto_79
+.end method
+
+.method foregroundTokenDied(Lcom/android/server/am/ActivityManagerService$ForegroundToken;)V
+    .registers 7
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v3
+    :try_end_4
+    .catchall {:try_start_1 .. :try_end_4} :catchall_29
+
+    :try_start_4
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I
+
+    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ActivityManagerService$ForegroundToken;
+
+    if-eq v0, p1, :cond_13
+
+    monitor-exit v3
+    :try_end_11
+    .catchall {:try_start_4 .. :try_end_11} :catchall_38
+
+    :try_start_11
+    monitor-exit p0
+    :try_end_12
+    .catchall {:try_start_11 .. :try_end_12} :catchall_29
+
+    :goto_12
+    return-void
+
+    :cond_13
+    :try_start_13
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I
+
+    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->remove(I)V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I
+
+    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    if-nez v1, :cond_2c
+
+    monitor-exit v3
+    :try_end_27
+    .catchall {:try_start_13 .. :try_end_27} :catchall_38
+
+    :try_start_27
+    monitor-exit p0
+
+    goto :goto_12
+
+    :catchall_29
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_2b
+    .catchall {:try_start_27 .. :try_end_2b} :catchall_29
+
+    throw v2
+
+    :cond_2c
+    const/4 v2, 0x0
+
+    :try_start_2d
+    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+
+    const/4 v2, 0x0
+
+    iput-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    monitor-exit v3
+    :try_end_33
+    .catchall {:try_start_2d .. :try_end_33} :catchall_38
+
+    :try_start_33
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    monitor-exit p0
+    :try_end_37
+    .catchall {:try_start_33 .. :try_end_37} :catchall_29
+
+    goto :goto_12
+
+    :catchall_38
+    move-exception v2
+
+    :try_start_39
+    monitor-exit v3
+    :try_end_3a
+    .catchall {:try_start_39 .. :try_end_3a} :catchall_38
+
+    :try_start_3a
+    throw v2
+    :try_end_3b
+    .catchall {:try_start_3a .. :try_end_3b} :catchall_29
+.end method
+
+.method public getActivityClassForToken(Landroid/os/IBinder;)Landroid/content/ComponentName;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_c
+
+    const/4 v1, 0x0
+
+    monitor-exit p0
+
+    :goto_b
+    return-object v1
+
+    :cond_c
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v1
+
+    monitor-exit p0
+
+    goto :goto_b
+
+    :catchall_14
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_16
+    .catchall {:try_start_1 .. :try_end_16} :catchall_14
+
+    throw v1
+.end method
+
+.method public getCallingActivity(Landroid/os/IBinder;)Landroid/content/ComponentName;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_f
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v1
+
+    :goto_d
+    monitor-exit p0
+
+    return-object v1
+
+    :cond_f
+    const/4 v1, 0x0
+
+    goto :goto_d
+
+    :catchall_11
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_13
+    .catchall {:try_start_1 .. :try_end_13} :catchall_11
+
+    throw v1
+.end method
+
+.method public getCallingPackage(Landroid/os/IBinder;)Ljava/lang/String;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_11
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v1, :cond_11
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;
+
+    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    :goto_f
+    monitor-exit p0
+
+    return-object v1
+
+    :cond_11
+    const/4 v1, 0x0
+
+    goto :goto_f
+
+    :catchall_13
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_15
+    .catchall {:try_start_1 .. :try_end_15} :catchall_13
+
+    throw v1
+.end method
+
+.method public getConfiguration()Landroid/content/res/Configuration;
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    new-instance v0, Landroid/content/res/Configuration;
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    invoke-direct {v0, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
+
+    monitor-exit p0
+
+    return-object v0
+
+    :catchall_a
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_c
+    .catchall {:try_start_1 .. :try_end_c} :catchall_a
+
+    throw v1
+.end method
+
+.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+    .registers 6
+
+    if-nez p1, :cond_20
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "null IApplicationThread when getting content provider "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    const-string v1, "ActivityManager"
+
+    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_20
+    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+
+    move-result-object v1
+
+    return-object v1
+.end method
+
+.method public getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;
+    .registers 4
+
+    new-instance v0, Landroid/content/pm/ConfigurationInfo;
+
+    invoke-direct {v0}, Landroid/content/pm/ConfigurationInfo;-><init>()V
+
+    monitor-enter p0
+
+    :try_start_6
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->touchscreen:I
+
+    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqTouchScreen:I
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I
+
+    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqKeyboardType:I
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->navigation:I
+
+    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqNavigation:I
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->navigation:I
+
+    const/4 v2, 0x2
+
+    if-eq v1, v2, :cond_26
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->navigation:I
+
+    const/4 v2, 0x3
+
+    if-ne v1, v2, :cond_2c
+
+    :cond_26
+    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I
+
+    or-int/lit8 v1, v1, 0x2
+
+    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I
+
+    :cond_2c
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I
+
+    if-eqz v1, :cond_3f
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I
+
+    const/4 v2, 0x1
+
+    if-eq v1, v2, :cond_3f
+
+    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I
+
+    or-int/lit8 v1, v1, 0x1
+
+    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I
+
+    :cond_3f
+    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I
+
+    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqGlEsVersion:I
+
+    monitor-exit p0
+
+    return-object v0
+
+    :catchall_45
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_47
+    .catchall {:try_start_6 .. :try_end_47} :catchall_45
+
+    throw v1
+.end method
+
+.method public getFrontActivityScreenCompatMode()I
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0}, Lcom/android/server/am/CompatModePackages;->getFrontActivityScreenCompatModeLocked()I
+
+    move-result v0
+
+    monitor-exit p0
+
+    return v0
+
+    :catchall_9
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_b
+    .catchall {:try_start_1 .. :try_end_b} :catchall_9
+
+    throw v0
+.end method
+
+.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;I)Landroid/content/IIntentSender;
+    .registers 25
+
+    if-eqz p6, :cond_5a
+
+    move-object/from16 v0, p6
+
+    array-length v1, v0
+
+    const/4 v2, 0x1
+
+    if-ge v1, v2, :cond_10
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "Intents array length must be >= 1"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_10
+    const/4 v12, 0x0
+
+    :goto_11
+    move-object/from16 v0, p6
+
+    array-length v1, v0
+
+    if-ge v12, v1, :cond_48
+
+    aget-object v13, p6, v12
+
+    if-eqz v13, :cond_45
+
+    invoke-virtual {v13}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_28
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "File descriptors passed in Intent"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_28
+    const/4 v1, 0x1
+
+    move/from16 v0, p1
+
+    if-ne v0, v1, :cond_3e
+
+    invoke-virtual {v13}, Landroid/content/Intent;->getFlags()I
+
+    move-result v1
+
+    const/high16 v2, 0x800
+
+    and-int/2addr v1, v2
+
+    if-eqz v1, :cond_3e
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_3e
+    new-instance v1, Landroid/content/Intent;
+
+    invoke-direct {v1, v13}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    aput-object v1, p6, v12
+
+    :cond_45
+    add-int/lit8 v12, v12, 0x1
+
+    goto :goto_11
+
+    :cond_48
+    if-eqz p7, :cond_5a
+
+    move-object/from16 v0, p7
+
+    array-length v1, v0
+
+    move-object/from16 v0, p6
+
+    array-length v2, v0
+
+    if-eq v1, v2, :cond_5a
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "Intent array length does not match resolvedTypes length"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_5a
+    monitor-enter p0
+
+    :try_start_5b
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+    :try_end_5e
+    .catchall {:try_start_5b .. :try_end_5e} :catchall_c8
+
+    move-result v4
+
+    if-eqz v4, :cond_cb
+
+    const/16 v1, 0x3e8
+
+    if-eq v4, v1, :cond_cb
+
+    :try_start_65
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v1
+
+    move-object/from16 v0, p2
+
+    invoke-interface {v1, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+
+    move-result v15
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    if-eq v15, v1, :cond_cb
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Permission Denial: getIntentSender() from pid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", (need uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ")"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " is not allowed to send as package "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v14
+
+    const-string v1, "ActivityManager"
+
+    invoke-static {v1, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    invoke-direct {v1, v14}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+    :try_end_c1
+    .catchall {:try_start_65 .. :try_end_c1} :catchall_c8
+    .catch Landroid/os/RemoteException; {:try_start_65 .. :try_end_c1} :catch_c1
+
+    :catch_c1
+    move-exception v11
+
+    :try_start_c2
+    new-instance v1, Ljava/lang/SecurityException;
+
+    invoke-direct {v1, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V
+
+    throw v1
+
+    :catchall_c8
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_ca
+    .catchall {:try_start_c2 .. :try_end_ca} :catchall_c8
+
+    throw v1
+
+    :cond_cb
+    move-object/from16 v1, p0
+
+    move/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v5, p3
+
+    move-object/from16 v6, p4
+
+    move/from16 v7, p5
+
+    move-object/from16 v8, p6
+
+    move-object/from16 v9, p7
+
+    move/from16 v10, p8
+
+    :try_start_dd
+    invoke-virtual/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderLocked(ILjava/lang/String;ILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;I)Landroid/content/IIntentSender;
+    :try_end_e0
+    .catchall {:try_start_dd .. :try_end_e0} :catchall_c8
+    .catch Landroid/os/RemoteException; {:try_start_dd .. :try_end_e0} :catch_c1
+
+    move-result-object v1
+
+    :try_start_e1
+    monitor-exit p0
+    :try_end_e2
+    .catchall {:try_start_e1 .. :try_end_e2} :catchall_c8
+
+    return-object v1
+.end method
+
+.method getIntentSenderLocked(ILjava/lang/String;ILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;I)Landroid/content/IIntentSender;
+    .registers 25
+
+    const/4 v4, 0x0
+
+    const/4 v2, 0x3
+
+    move/from16 v0, p1
+
+    if-ne v0, v2, :cond_18
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v4
+
+    if-nez v4, :cond_12
+
+    const/4 v12, 0x0
+
+    :cond_11
+    :goto_11
+    return-object v12
+
+    :cond_12
+    iget-boolean v2, v4, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-eqz v2, :cond_18
+
+    const/4 v12, 0x0
+
+    goto :goto_11
+
+    :cond_18
+    const/high16 v2, 0x2000
+
+    and-int v2, v2, p9
+
+    if-eqz v2, :cond_88
+
+    const/4 v11, 0x1
+
+    :goto_1f
+    const/high16 v2, 0x1000
+
+    and-int v2, v2, p9
+
+    if-eqz v2, :cond_8a
+
+    const/4 v10, 0x1
+
+    :goto_26
+    const/high16 v2, 0x800
+
+    and-int v2, v2, p9
+
+    if-eqz v2, :cond_8c
+
+    const/4 v14, 0x1
+
+    :goto_2d
+    const v2, -0x38000001
+
+    and-int p9, p9, v2
+
+    new-instance v1, Lcom/android/server/am/PendingIntentRecord$Key;
+
+    move/from16 v2, p1
+
+    move-object/from16 v3, p2
+
+    move-object/from16 v5, p5
+
+    move/from16 v6, p6
+
+    move-object/from16 v7, p7
+
+    move-object/from16 v8, p8
+
+    move/from16 v9, p9
+
+    invoke-direct/range {v1 .. v9}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;I)V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Ljava/lang/ref/WeakReference;
+
+    if-eqz v13, :cond_8e
+
+    invoke-virtual {v13}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/PendingIntentRecord;
+
+    move-object v12, v2
+
+    :goto_56
+    if-eqz v12, :cond_a6
+
+    if-nez v10, :cond_9e
+
+    if-eqz v14, :cond_11
+
+    iget-object v2, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;
+
+    if-eqz v2, :cond_6e
+
+    iget-object v2, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v3, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;
+
+    if-eqz p7, :cond_90
+
+    const/4 v2, 0x0
+
+    aget-object v2, p7, v2
+
+    :goto_6b
+    invoke-virtual {v3, v2}, Landroid/content/Intent;->replaceExtras(Landroid/content/Intent;)Landroid/content/Intent;
+
+    :cond_6e
+    if-eqz p7, :cond_92
+
+    move-object/from16 v0, p7
+
+    array-length v2, v0
+
+    add-int/lit8 v2, v2, -0x1
+
+    iget-object v3, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;
+
+    aput-object v3, p7, v2
+
+    iget-object v2, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    move-object/from16 v0, p7
+
+    iput-object v0, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;
+
+    iget-object v2, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    move-object/from16 v0, p8
+
+    iput-object v0, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;
+
+    goto :goto_11
+
+    :cond_88
+    const/4 v11, 0x0
+
+    goto :goto_1f
+
+    :cond_8a
+    const/4 v10, 0x0
+
+    goto :goto_26
+
+    :cond_8c
+    const/4 v14, 0x0
+
+    goto :goto_2d
+
+    :cond_8e
+    const/4 v12, 0x0
+
+    goto :goto_56
+
+    :cond_90
+    const/4 v2, 0x0
+
+    goto :goto_6b
+
+    :cond_92
+    iget-object v2, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    const/4 v3, 0x0
+
+    iput-object v3, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;
+
+    iget-object v2, v12, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    const/4 v3, 0x0
+
+    iput-object v3, v2, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;
+
+    goto/16 :goto_11
+
+    :cond_9e
+    const/4 v2, 0x1
+
+    iput-boolean v2, v12, Lcom/android/server/am/PendingIntentRecord;->canceled:Z
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    invoke-virtual {v2, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_a6
+    if-nez v11, :cond_11
+
+    new-instance v12, Lcom/android/server/am/PendingIntentRecord;
+
+    move/from16 v0, p3
+
+    invoke-direct {v12, p0, v1, v0}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/PendingIntentRecord$Key;I)V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;
+
+    iget-object v3, v12, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;
+
+    invoke-virtual {v2, v1, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    const/4 v2, 0x3
+
+    move/from16 v0, p1
+
+    if-ne v0, v2, :cond_11
+
+    iget-object v2, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;
+
+    if-nez v2, :cond_c6
+
+    new-instance v2, Ljava/util/HashSet;
+
+    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V
+
+    iput-object v2, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;
+
+    :cond_c6
+    iget-object v2, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;
+
+    iget-object v3, v12, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;
+
+    invoke-virtual {v2, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    goto/16 :goto_11
+.end method
+
+.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
+    .registers 15
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x0
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    const/4 v7, 0x6
+
+    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J
+
+    move-result-wide v2
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    sget v7, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J
+
+    move-result-wide v0
+
+    invoke-static {}, Landroid/os/Process;->getFreeMemory()J
+
+    move-result-wide v7
+
+    iput-wide v7, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J
+
+    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->threshold:J
+
+    iget-wide v7, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J
+
+    sub-long v9, v0, v2
+
+    const-wide/16 v11, 0x2
+
+    div-long/2addr v9, v11
+
+    add-long/2addr v9, v2
+
+    cmp-long v4, v7, v9
+
+    if-gez v4, :cond_44
+
+    move v4, v5
+
+    :goto_26
+    iput-boolean v4, p1, Landroid/app/ActivityManager$MemoryInfo;->lowMemory:Z
+
+    iput-wide v0, p1, Landroid/app/ActivityManager$MemoryInfo;->hiddenAppThreshold:J
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    const/4 v7, 0x5
+
+    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J
+
+    move-result-wide v7
+
+    iput-wide v7, p1, Landroid/app/ActivityManager$MemoryInfo;->secondaryServerThreshold:J
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    invoke-virtual {v4, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J
+
+    move-result-wide v4
+
+    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->visibleAppThreshold:J
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    invoke-virtual {v4, v6}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J
+
+    move-result-wide v4
+
+    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->foregroundAppThreshold:J
+
+    return-void
+
+    :cond_44
+    move v4, v6
+
+    goto :goto_26
+.end method
+
+.method public getPackageAskScreenCompat(Ljava/lang/String;)Z
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageAskCompatModeLocked(Ljava/lang/String;)Z
+
+    move-result v0
+
+    monitor-exit p0
+
+    return v0
+
+    :catchall_9
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_b
+    .catchall {:try_start_1 .. :try_end_b} :catchall_9
+
+    throw v0
+.end method
+
+.method public getPackageForIntentSender(Landroid/content/IIntentSender;)Ljava/lang/String;
+    .registers 6
+
+    const/4 v2, 0x0
+
+    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;
+
+    if-nez v3, :cond_6
+
+    :goto_5
+    return-object v2
+
+    :cond_6
+    :try_start_6
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/PendingIntentRecord;
+
+    move-object v1, v0
+
+    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v2, v3, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
+    :try_end_e
+    .catch Ljava/lang/ClassCastException; {:try_start_6 .. :try_end_e} :catch_f
+
+    goto :goto_5
+
+    :catch_f
+    move-exception v3
+
+    goto :goto_5
+.end method
+
+.method public getPackageForToken(Landroid/os/IBinder;)Ljava/lang/String;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_c
+
+    const/4 v1, 0x0
+
+    monitor-exit p0
+
+    :goto_b
+    return-object v1
+
+    :cond_c
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    monitor-exit p0
+
+    goto :goto_b
+
+    :catchall_10
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_12
+    .catchall {:try_start_1 .. :try_end_12} :catchall_10
+
+    throw v1
+.end method
+
+.method public getPackageScreenCompatMode(Ljava/lang/String;)I
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageScreenCompatModeLocked(Ljava/lang/String;)I
+
+    move-result v0
+
+    monitor-exit p0
+
+    return v0
+
+    :catchall_9
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_b
+    .catchall {:try_start_1 .. :try_end_b} :catchall_9
+
+    throw v0
+.end method
+
+.method public getProcessLimit()I
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I
+
+    monitor-exit p0
+
+    return v0
+
+    :catchall_5
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_7
+    .catchall {:try_start_1 .. :try_end_7} :catchall_5
+
+    throw v0
+.end method
+
+.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    array-length v2, p1
+
+    new-array v1, v2, [Landroid/os/Debug$MemoryInfo;
+
+    array-length v2, p1
+
+    add-int/lit8 v0, v2, -0x1
+
+    :goto_6
+    if-ltz v0, :cond_19
+
+    new-instance v2, Landroid/os/Debug$MemoryInfo;
+
+    invoke-direct {v2}, Landroid/os/Debug$MemoryInfo;-><init>()V
+
+    aput-object v2, v1, v0
+
+    aget v2, p1, v0
+
+    aget-object v3, v1, v0
+
+    invoke-static {v2, v3}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V
+
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_6
+
+    :cond_19
+    return-object v1
+.end method
+
+.method public getProcessPss([I)[J
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    array-length v2, p1
+
+    new-array v1, v2, [J
+
+    array-length v2, p1
+
+    add-int/lit8 v0, v2, -0x1
+
+    :goto_6
+    if-ltz v0, :cond_13
+
+    aget v2, p1, v0
+
+    invoke-static {v2}, Landroid/os/Debug;->getPss(I)J
+
+    move-result-wide v2
+
+    aput-wide v2, v1, v0
+
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_6
+
+    :cond_13
+    return-object v1
+.end method
+
+.method final getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+    .registers 6
+
+    const/16 v2, 0x3e8
+
+    if-ne p2, v2, :cond_1c
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/util/SparseArray;
+
+    if-eqz v1, :cond_1a
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ProcessRecord;
+
+    :goto_19
+    return-object v2
+
+    :cond_1a
+    const/4 v2, 0x0
+
+    goto :goto_19
+
+    :cond_1c
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v2, p1, p2}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    move-object v2, v0
+
+    goto :goto_19
+.end method
+
+.method public getProcessesInErrorState()Ljava/util/List;
+    .registers 9
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/app/ActivityManager$ProcessErrorStateInfo;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v1, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+    :try_end_7
+    .catchall {:try_start_2 .. :try_end_7} :catchall_76
+
+    move-result v5
+
+    add-int/lit8 v3, v5, -0x1
+
+    move-object v2, v1
+
+    :goto_b
+    if-ltz v3, :cond_74
+
+    :try_start_d
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v5, :cond_72
+
+    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-nez v5, :cond_21
+
+    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    if-eqz v5, :cond_72
+
+    :cond_21
+    const/4 v4, 0x0
+
+    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-eqz v5, :cond_39
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    :cond_28
+    :goto_28
+    if-eqz v4, :cond_40
+
+    if-nez v2, :cond_7c
+
+    new-instance v1, Ljava/util/ArrayList;
+
+    const/4 v5, 0x1
+
+    invoke-direct {v1, v5}, Ljava/util/ArrayList;-><init>(I)V
+    :try_end_32
+    .catchall {:try_start_d .. :try_end_32} :catchall_79
+
+    :goto_32
+    :try_start_32
+    invoke-interface {v1, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_35
+    .catchall {:try_start_32 .. :try_end_35} :catchall_76
+
+    :goto_35
+    add-int/lit8 v3, v3, -0x1
+
+    move-object v2, v1
+
+    goto :goto_b
+
+    :cond_39
+    :try_start_39
+    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    if-eqz v5, :cond_28
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    goto :goto_28
+
+    :cond_40
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Missing app error report, app = "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " crashing = "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-boolean v7, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " notResponding = "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-boolean v7, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_72
+    move-object v1, v2
+
+    goto :goto_35
+
+    :cond_74
+    monitor-exit p0
+    :try_end_75
+    .catchall {:try_start_39 .. :try_end_75} :catchall_79
+
+    return-object v2
+
+    :catchall_76
+    move-exception v5
+
+    :goto_77
+    :try_start_77
+    monitor-exit p0
+    :try_end_78
+    .catchall {:try_start_77 .. :try_end_78} :catchall_76
+
+    throw v5
+
+    :catchall_79
+    move-exception v5
+
+    move-object v1, v2
+
+    goto :goto_77
+
+    :cond_7c
+    move-object v1, v2
+
+    goto :goto_32
+.end method
+
+.method public getProviderMimeType(Landroid/net/Uri;)Ljava/lang/String;
+    .registers 11
+
+    const/4 v5, 0x0
+
+    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v2
+
+    const/4 v1, 0x0
+
+    :try_start_a
+    invoke-direct {p0, v4}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternal(Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_48
+
+    iget-object v6, v1, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;
+
+    invoke-interface {v6, p1}, Landroid/content/IContentProvider;->getType(Landroid/net/Uri;)Ljava/lang/String;
+    :try_end_15
+    .catchall {:try_start_a .. :try_end_15} :catchall_3e
+    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_15} :catch_1f
+
+    move-result-object v5
+
+    if-eqz v1, :cond_1b
+
+    invoke-direct {p0, v4}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternal(Ljava/lang/String;)V
+
+    :cond_1b
+    :goto_1b
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-object v5
+
+    :catch_1f
+    move-exception v0
+
+    :try_start_20
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Content provider dead retrieving "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7, v0}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_38
+    .catchall {:try_start_20 .. :try_end_38} :catchall_3e
+
+    if-eqz v1, :cond_1b
+
+    invoke-direct {p0, v4}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternal(Ljava/lang/String;)V
+
+    goto :goto_1b
+
+    :catchall_3e
+    move-exception v5
+
+    if-eqz v1, :cond_44
+
+    invoke-direct {p0, v4}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternal(Ljava/lang/String;)V
+
+    :cond_44
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v5
+
+    :cond_48
+    if-eqz v1, :cond_1b
+
+    invoke-direct {p0, v4}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternal(Ljava/lang/String;)V
+
+    goto :goto_1b
+.end method
+
+.method public getRecentTasks(II)Ljava/util/List;
+    .registers 12
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(II)",
+            "Ljava/util/List",
+            "<",
+            "Landroid/app/ActivityManager$RecentTaskInfo;",
+            ">;"
+        }
+    .end annotation
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v6, "android.permission.GET_TASKS"
+
+    const-string v7, "getRecentTasks()"
+
+    invoke-virtual {p0, v6, v7}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    new-instance v3, Ljava/util/ArrayList;
+
+    if-ge p1, v0, :cond_76
+
+    move v6, p1
+
+    :goto_17
+    invoke-direct {v3, v6}, Ljava/util/ArrayList;-><init>(I)V
+
+    const/4 v1, 0x0
+
+    :goto_1b
+    if-ge v1, v0, :cond_91
+
+    if-lez p1, :cond_91
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v6, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/TaskRecord;
+
+    if-eqz v1, :cond_3c
+
+    and-int/lit8 v6, p2, 0x1
+
+    if-nez v6, :cond_3c
+
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    if-eqz v6, :cond_3c
+
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v6}, Landroid/content/Intent;->getFlags()I
+
+    move-result v6
+
+    const/high16 v7, 0x80
+
+    and-int/2addr v6, v7
+
+    if-nez v6, :cond_73
+
+    :cond_3c
+    new-instance v4, Landroid/app/ActivityManager$RecentTaskInfo;
+
+    invoke-direct {v4}, Landroid/app/ActivityManager$RecentTaskInfo;-><init>()V
+
+    iget v6, v5, Lcom/android/server/am/TaskRecord;->numActivities:I
+
+    if-lez v6, :cond_78
+
+    iget v6, v5, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    :goto_47
+    iput v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->id:I
+
+    iget v6, v5, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    iput v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I
+
+    new-instance v7, Landroid/content/Intent;
+
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    if-eqz v6, :cond_7a
+
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;
+
+    :goto_55
+    invoke-direct {v7, v6}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    iput-object v7, v4, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;
+
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;
+
+    iput-object v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->origActivity:Landroid/content/ComponentName;
+
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->lastDescription:Ljava/lang/CharSequence;
+
+    iput-object v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->description:Ljava/lang/CharSequence;
+    :try_end_62
+    .catchall {:try_start_1 .. :try_end_62} :catchall_93
+
+    and-int/lit8 v6, p2, 0x2
+
+    if-eqz v6, :cond_8b
+
+    :try_start_66
+    iget-object v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->origActivity:Landroid/content/ComponentName;
+
+    if-eqz v6, :cond_7d
+
+    iget-object v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->origActivity:Landroid/content/ComponentName;
+
+    const/4 v7, 0x0
+
+    invoke-interface {v2, v6, v7}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;
+    :try_end_70
+    .catchall {:try_start_66 .. :try_end_70} :catchall_93
+    .catch Landroid/os/RemoteException; {:try_start_66 .. :try_end_70} :catch_96
+
+    move-result-object v6
+
+    if-nez v6, :cond_8b
+
+    :cond_73
+    :goto_73
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_1b
+
+    :cond_76
+    move v6, v0
+
+    goto :goto_17
+
+    :cond_78
+    const/4 v6, -0x1
+
+    goto :goto_47
+
+    :cond_7a
+    :try_start_7a
+    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->affinityIntent:Landroid/content/Intent;
+    :try_end_7c
+    .catchall {:try_start_7a .. :try_end_7c} :catchall_93
+
+    goto :goto_55
+
+    :cond_7d
+    :try_start_7d
+    iget-object v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;
+
+    if-eqz v6, :cond_8b
+
+    iget-object v6, v4, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    invoke-interface {v2, v6, v7, v8}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;I)Ljava/util/List;
+    :try_end_88
+    .catchall {:try_start_7d .. :try_end_88} :catchall_93
+    .catch Landroid/os/RemoteException; {:try_start_7d .. :try_end_88} :catch_96
+
+    move-result-object v6
+
+    if-eqz v6, :cond_73
+
+    :cond_8b
+    :goto_8b
+    :try_start_8b
+    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 p1, p1, -0x1
+
+    goto :goto_73
+
+    :cond_91
+    monitor-exit p0
+
+    return-object v3
+
+    :catchall_93
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_95
+    .catchall {:try_start_8b .. :try_end_95} :catchall_93
+
+    throw v6
+
+    :catch_96
+    move-exception v6
+
+    goto :goto_8b
+.end method
+
+.method final getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+    .registers 4
+
+    const/4 v1, 0x0
+
+    if-nez p1, :cond_4
+
+    :cond_3
+    :goto_3
+    return-object v1
+
+    :cond_4
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I
+
+    move-result v0
+
+    if-ltz v0, :cond_3
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    goto :goto_3
+.end method
+
+.method public getRequestedOrientation(Landroid/os/IBinder;)I
+    .registers 5
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_c
+
+    const/4 v1, -0x1
+
+    monitor-exit p0
+
+    :goto_b
+    return v1
+
+    :cond_c
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService;->getAppOrientation(Landroid/view/IApplicationToken;)I
+
+    move-result v1
+
+    monitor-exit p0
+
+    goto :goto_b
+
+    :catchall_16
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_18
+    .catchall {:try_start_1 .. :try_end_18} :catchall_16
+
+    throw v1
+.end method
+
+.method public getRunningAppProcesses()Ljava/util/List;
+    .registers 11
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/app/ActivityManager$RunningAppProcessInfo;",
+            ">;"
+        }
+    .end annotation
+
+    const/4 v5, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+    :try_end_7
+    .catchall {:try_start_2 .. :try_end_7} :catchall_a0
+
+    move-result v7
+
+    add-int/lit8 v3, v7, -0x1
+
+    move-object v6, v5
+
+    :goto_b
+    if-ltz v3, :cond_9e
+
+    :try_start_d
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v7, :cond_a4
+
+    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    if-nez v7, :cond_a4
+
+    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    if-nez v7, :cond_a4
+
+    new-instance v2, Landroid/app/ActivityManager$RunningAppProcessInfo;
+
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    iget v8, v1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v1}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-direct {v2, v7, v8, v9}, Landroid/app/ActivityManager$RunningAppProcessInfo;-><init>(Ljava/lang/String;I[Ljava/lang/String;)V
+
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->uid:I
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v7, v1, :cond_3e
+
+    iget v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I
+
+    or-int/lit8 v7, v7, 0x1
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I
+
+    :cond_3e
+    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v7, :cond_48
+
+    iget v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I
+
+    or-int/lit8 v7, v7, 0x2
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I
+
+    :cond_48
+    iget v0, v1, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    invoke-static {v0, v2}, Lcom/android/server/am/ActivityManagerService;->oomAdjToImportance(ILandroid/app/ActivityManager$RunningAppProcessInfo;)I
+
+    move-result v7
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importance:I
+
+    iget v7, v1, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonCode:I
+
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    instance-of v7, v7, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v7, :cond_85
+
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    check-cast v7, Lcom/android/server/am/ProcessRecord;
+
+    iget v7, v7, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I
+
+    iget v7, v1, Lcom/android/server/am/ProcessRecord;->adjSourceOom:I
+
+    const/4 v8, 0x0
+
+    invoke-static {v7, v8}, Lcom/android/server/am/ActivityManagerService;->oomAdjToImportance(ILandroid/app/ActivityManager$RunningAppProcessInfo;)I
+
+    move-result v7
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonImportance:I
+
+    :cond_6b
+    :goto_6b
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    instance-of v7, v7, Landroid/content/ComponentName;
+
+    if-eqz v7, :cond_77
+
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;
+
+    check-cast v7, Landroid/content/ComponentName;
+
+    iput-object v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonComponent:Landroid/content/ComponentName;
+
+    :cond_77
+    if-nez v6, :cond_a2
+
+    new-instance v5, Ljava/util/ArrayList;
+
+    invoke-direct {v5}, Ljava/util/ArrayList;-><init>()V
+    :try_end_7e
+    .catchall {:try_start_d .. :try_end_7e} :catchall_9a
+
+    :goto_7e
+    :try_start_7e
+    invoke-interface {v5, v2}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_81
+    .catchall {:try_start_7e .. :try_end_81} :catchall_a0
+
+    :goto_81
+    add-int/lit8 v3, v3, -0x1
+
+    move-object v6, v5
+
+    goto :goto_b
+
+    :cond_85
+    :try_start_85
+    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    instance-of v7, v7, Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v7, :cond_6b
+
+    iget-object v4, v1, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;
+
+    check-cast v4, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v7, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v7, :cond_6b
+
+    iget-object v7, v4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v7, v7, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iput v7, v2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I
+    :try_end_99
+    .catchall {:try_start_85 .. :try_end_99} :catchall_9a
+
+    goto :goto_6b
+
+    :catchall_9a
+    move-exception v7
+
+    move-object v5, v6
+
+    :goto_9c
+    :try_start_9c
+    monitor-exit p0
+    :try_end_9d
+    .catchall {:try_start_9c .. :try_end_9d} :catchall_a0
+
+    throw v7
+
+    :cond_9e
+    :try_start_9e
+    monitor-exit p0
+    :try_end_9f
+    .catchall {:try_start_9e .. :try_end_9f} :catchall_9a
+
+    return-object v6
+
+    :catchall_a0
+    move-exception v7
+
+    goto :goto_9c
+
+    :cond_a2
+    move-object v5, v6
+
+    goto :goto_7e
+
+    :cond_a4
+    move-object v5, v6
+
+    goto :goto_81
+.end method
+
+.method public getRunningExternalApplications()Ljava/util/List;
+    .registers 14
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "()",
+            "Ljava/util/List",
+            "<",
+            "Landroid/content/pm/ApplicationInfo;",
+            ">;"
+        }
+    .end annotation
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;
+
+    move-result-object v10
+
+    new-instance v9, Ljava/util/ArrayList;
+
+    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V
+
+    if-eqz v10, :cond_5e
+
+    invoke-interface {v10}, Ljava/util/List;->size()I
+
+    move-result v11
+
+    if-lez v11, :cond_5e
+
+    new-instance v2, Ljava/util/HashSet;
+
+    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V
+
+    invoke-interface {v10}, Ljava/util/List;->iterator()Ljava/util/Iterator;
+
+    move-result-object v3
+
+    :cond_1a
+    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v11
+
+    if-eqz v11, :cond_38
+
+    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Landroid/app/ActivityManager$RunningAppProcessInfo;
+
+    iget-object v11, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;
+
+    if-eqz v11, :cond_1a
+
+    iget-object v1, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;
+
+    array-length v6, v1
+
+    const/4 v4, 0x0
+
+    :goto_2e
+    if-ge v4, v6, :cond_1a
+
+    aget-object v7, v1, v4
+
+    invoke-interface {v2, v7}, Ljava/util/Set;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 v4, v4, 0x1
+
+    goto :goto_2e
+
+    :cond_38
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v8
+
+    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;
+
+    move-result-object v3
+
+    :cond_40
+    :goto_40
+    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v11
+
+    if-eqz v11, :cond_5e
+
+    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Ljava/lang/String;
+
+    const/4 v11, 0x0
+
+    :try_start_4d
+    invoke-interface {v8, v7, v11}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
+
+    move-result-object v5
+
+    iget v11, v5, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    const/high16 v12, 0x4
+
+    and-int/2addr v11, v12
+
+    if-eqz v11, :cond_40
+
+    invoke-interface {v9, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z
+    :try_end_5b
+    .catch Landroid/os/RemoteException; {:try_start_4d .. :try_end_5b} :catch_5c
+
+    goto :goto_40
+
+    :catch_5c
+    move-exception v11
+
+    goto :goto_40
+
+    :cond_5e
+    return-object v9
+.end method
+
+.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
+    .registers 7
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v4, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ServiceRecord;
+
+    if-eqz v3, :cond_3f
+
+    iget-object v4, v3, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v4
+
+    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v2
+
+    :cond_15
+    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v4
+
+    if-eqz v4, :cond_3f
+
+    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Ljava/util/ArrayList;
+
+    const/4 v1, 0x0
+
+    :goto_22
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v4
+
+    if-ge v1, v4, :cond_15
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v4, v4, Lcom/android/server/am/ConnectionRecord;->clientIntent:Landroid/app/PendingIntent;
+
+    if-eqz v4, :cond_3c
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v4, v4, Lcom/android/server/am/ConnectionRecord;->clientIntent:Landroid/app/PendingIntent;
+
+    monitor-exit p0
+
+    :goto_3b
+    return-object v4
+
+    :cond_3c
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_22
+
+    :cond_3f
+    monitor-exit p0
+
+    const/4 v4, 0x0
+
+    goto :goto_3b
+
+    :catchall_42
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_44
+    .catchall {:try_start_1 .. :try_end_44} :catchall_42
+
+    throw v4
+.end method
+
+.method public getServices(II)Ljava/util/List;
+    .registers 10
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(II)",
+            "Ljava/util/List",
+            "<",
+            "Landroid/app/ActivityManager$RunningServiceInfo;",
+            ">;"
+        }
+    .end annotation
+
+    monitor-enter p0
+
+    :try_start_1
+    new-instance v4, Ljava/util/ArrayList;
+
+    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->size()I
+
+    move-result v5
+
+    if-lez v5, :cond_35
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v5
+
+    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v2
+
+    :goto_18
+    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_35
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-ge v5, p1, :cond_35
+
+    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Lcom/android/server/am/ServiceRecord;
+
+    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_18
+
+    :catchall_32
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_34
+    .catchall {:try_start_1 .. :try_end_34} :catchall_32
+
+    throw v5
+
+    :cond_35
+    const/4 v0, 0x0
+
+    :goto_36
+    :try_start_36
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-ge v0, v5, :cond_5a
+
+    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-ge v5, p1, :cond_5a
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ServiceRecord;
+
+    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;
+
+    move-result-object v1
+
+    iget-wide v5, v3, Lcom/android/server/am/ServiceRecord;->nextRestartTime:J
+
+    iput-wide v5, v1, Landroid/app/ActivityManager$RunningServiceInfo;->restarting:J
+
+    invoke-virtual {v4, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_36
+
+    :cond_5a
+    monitor-exit p0
+    :try_end_5b
+    .catchall {:try_start_36 .. :try_end_5b} :catchall_32
+
+    return-object v4
+.end method
+
+.method public getTaskForActivity(Landroid/os/IBinder;Z)I
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I
+
+    move-result v0
+
+    monitor-exit p0
+
+    return v0
+
+    :catchall_7
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_9
+    .catchall {:try_start_1 .. :try_end_9} :catchall_7
+
+    throw v0
+.end method
+
+.method getTaskForActivityLocked(Landroid/os/IBinder;Z)I
+    .registers 9
+
+    const/4 v4, -0x1
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v2, 0x0
+
+    const/4 v1, 0x0
+
+    :goto_b
+    if-ge v1, v0, :cond_25
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    if-ne v5, p1, :cond_26
+
+    if-eqz p2, :cond_21
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v2, v5, :cond_25
+
+    :cond_21
+    iget-object v4, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget v4, v4, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    :cond_25
+    return v4
+
+    :cond_26
+    iget-object v2, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_b
+.end method
+
+.method public getTaskThumbnails(I)Landroid/app/ActivityManager$TaskThumbnails;
+    .registers 5
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v1, "android.permission.READ_FRAME_BUFFER"
+
+    const-string v2, "getTaskThumbnails()"
+
+    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->taskForIdLocked(I)Lcom/android/server/am/TaskRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_16
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStack;->getTaskThumbnailsLocked(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$TaskThumbnails;
+
+    move-result-object v1
+
+    monitor-exit p0
+
+    :goto_15
+    return-object v1
+
+    :cond_16
+    monitor-exit p0
+
+    const/4 v1, 0x0
+
+    goto :goto_15
+
+    :catchall_19
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_1b
+    .catchall {:try_start_1 .. :try_end_1b} :catchall_19
+
+    throw v1
+.end method
+
+.method public getTasks(IILandroid/app/IThumbnailReceiver;)Ljava/util/List;
+    .registers 26
+
+    new-instance v10, Ljava/util/ArrayList;
+
+    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V
+
+    const/4 v15, 0x0
+
+    const/16 v21, 0x0
+
+    const/16 v20, 0x0
+
+    monitor-enter p0
+
+    :try_start_b
+    const-string v1, "android.permission.GET_TASKS"
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+    :try_end_12
+    .catchall {:try_start_b .. :try_end_12} :catchall_56
+
+    move-result v1
+
+    if-eqz v1, :cond_59
+
+    if-eqz p3, :cond_1a
+
+    :try_start_17
+    invoke-interface/range {p3 .. p3}, Landroid/app/IThumbnailReceiver;->finished()V
+    :try_end_1a
+    .catchall {:try_start_17 .. :try_end_1a} :catchall_56
+    .catch Landroid/os/RemoteException; {:try_start_17 .. :try_end_1a} :catch_18e
+
+    :cond_1a
+    :goto_1a
+    :try_start_1a
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Permission Denial: getTasks() from pid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ", uid="
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " requires "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, "android.permission.GET_TASKS"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v11
+
+    const-string v1, "ActivityManager"
+
+    invoke-static {v1, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    invoke-direct {v1, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :catchall_56
+    move-exception v1
+
+    :goto_57
+    monitor-exit p0
+    :try_end_58
+    .catchall {:try_start_1a .. :try_end_58} :catchall_56
+
+    throw v1
+
+    :cond_59
+    :try_start_59
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    add-int/lit8 v17, v1, -0x1
+
+    if-ltz v17, :cond_148
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    move/from16 v0, v17
+
+    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+    :try_end_75
+    .catchall {:try_start_59 .. :try_end_75} :catchall_56
+
+    move-object v12, v1
+
+    :goto_76
+    const/16 v19, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    move-object/from16 v16, v15
+
+    :goto_7d
+    if-ltz v17, :cond_159
+
+    if-lez p1, :cond_159
+
+    move-object/from16 v18, v12
+
+    add-int/lit8 v17, v17, -0x1
+
+    if-ltz v17, :cond_14b
+
+    :try_start_87
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    move/from16 v0, v17
+
+    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+
+    move-object v12, v1
+
+    :goto_96
+    if-eqz v19, :cond_aa
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v2, Lcom/android/server/am/ActivityStack$ActivityState;->INITIALIZING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-ne v1, v2, :cond_b2
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    move-object/from16 v0, v18
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-ne v1, v2, :cond_b2
+
+    :cond_aa
+    move-object/from16 v19, v18
+
+    move-object/from16 v0, v18
+
+    iget-object v8, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    const/4 v14, 0x0
+
+    move v13, v14
+
+    :cond_b2
+    add-int/lit8 v13, v13, 0x1
+
+    move-object/from16 v0, v18
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v1, :cond_c4
+
+    move-object/from16 v0, v18
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v1, :cond_c4
+
+    add-int/lit8 v14, v14, 0x1
+
+    :cond_c4
+    if-eqz v12, :cond_ca
+
+    iget-object v1, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    if-eq v1, v8, :cond_199
+
+    :cond_ca
+    new-instance v7, Landroid/app/ActivityManager$RunningTaskInfo;
+
+    invoke-direct {v7}, Landroid/app/ActivityManager$RunningTaskInfo;-><init>()V
+
+    iget v1, v8, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    iput v1, v7, Landroid/app/ActivityManager$RunningTaskInfo;->id:I
+
+    move-object/from16 v0, v18
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v1
+
+    iput-object v1, v7, Landroid/app/ActivityManager$RunningTaskInfo;->baseActivity:Landroid/content/ComponentName;
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v1
+
+    iput-object v1, v7, Landroid/app/ActivityManager$RunningTaskInfo;->topActivity:Landroid/content/ComponentName;
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->thumbHolder:Lcom/android/server/am/ThumbnailHolder;
+
+    if-eqz v1, :cond_f5
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->thumbHolder:Lcom/android/server/am/ThumbnailHolder;
+
+    iget-object v1, v1, Lcom/android/server/am/ThumbnailHolder;->lastDescription:Ljava/lang/CharSequence;
+
+    iput-object v1, v7, Landroid/app/ActivityManager$RunningTaskInfo;->description:Ljava/lang/CharSequence;
+
+    :cond_f5
+    iput v13, v7, Landroid/app/ActivityManager$RunningTaskInfo;->numActivities:I
+
+    iput v14, v7, Landroid/app/ActivityManager$RunningTaskInfo;->numRunning:I
+
+    iget-object v1, v7, Landroid/app/ActivityManager$RunningTaskInfo;->thumbnail:Landroid/graphics/Bitmap;
+
+    if-nez v1, :cond_196
+
+    if-eqz p3, :cond_196
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v2, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v1, v2, :cond_10f
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v2, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-ne v1, v2, :cond_12d
+
+    :cond_10f
+    move-object/from16 v0, v19
+
+    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->idle:Z
+
+    if-eqz v1, :cond_14e
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v1, :cond_14e
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v1, :cond_14e
+
+    move-object/from16 v20, v19
+
+    move-object/from16 v0, v19
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v21, v0
+
+    :cond_12d
+    :goto_12d
+    if-nez v16, :cond_193
+
+    new-instance v15, Lcom/android/server/am/PendingThumbnailsRecord;
+
+    move-object/from16 v0, p3
+
+    invoke-direct {v15, v0}, Lcom/android/server/am/PendingThumbnailsRecord;-><init>(Landroid/app/IThumbnailReceiver;)V
+    :try_end_136
+    .catchall {:try_start_87 .. :try_end_136} :catchall_154
+
+    :goto_136
+    :try_start_136
+    iget-object v1, v15, Lcom/android/server/am/PendingThumbnailsRecord;->pendingRecords:Ljava/util/HashSet;
+
+    move-object/from16 v0, v19
+
+    invoke-virtual {v1, v0}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    :goto_13d
+    invoke-virtual {v10, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+    :try_end_140
+    .catchall {:try_start_136 .. :try_end_140} :catchall_56
+
+    add-int/lit8 p1, p1, -0x1
+
+    const/16 v19, 0x0
+
+    :goto_144
+    move-object/from16 v16, v15
+
+    goto/16 :goto_7d
+
+    :cond_148
+    const/4 v12, 0x0
+
+    goto/16 :goto_76
+
+    :cond_14b
+    const/4 v12, 0x0
+
+    goto/16 :goto_96
+
+    :cond_14e
+    const/4 v1, 0x1
+
+    :try_start_14f
+    move-object/from16 v0, v19
+
+    iput-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->thumbnailNeeded:Z
+
+    goto :goto_12d
+
+    :catchall_154
+    move-exception v1
+
+    move-object/from16 v15, v16
+
+    goto/16 :goto_57
+
+    :cond_159
+    if-eqz v16, :cond_164
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mPendingThumbnails:Ljava/util/ArrayList;
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_164
+    monitor-exit p0
+    :try_end_165
+    .catchall {:try_start_14f .. :try_end_165} :catchall_154
+
+    if-eqz v21, :cond_170
+
+    :try_start_167
+    move-object/from16 v0, v20
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    move-object/from16 v0, v21
+
+    invoke-interface {v0, v1}, Landroid/app/IApplicationThread;->requestThumbnail(Landroid/os/IBinder;)V
+    :try_end_170
+    .catch Ljava/lang/Exception; {:try_start_167 .. :try_end_170} :catch_178
+
+    :cond_170
+    :goto_170
+    if-nez v16, :cond_177
+
+    if-eqz p3, :cond_177
+
+    :try_start_174
+    invoke-interface/range {p3 .. p3}, Landroid/app/IThumbnailReceiver;->finished()V
+    :try_end_177
+    .catch Landroid/os/RemoteException; {:try_start_174 .. :try_end_177} :catch_191
+
+    :cond_177
+    :goto_177
+    return-object v10
+
+    :catch_178
+    move-exception v9
+
+    const-string v1, "ActivityManager"
+
+    const-string v2, "Exception thrown when requesting thumbnail"
+
+    invoke-static {v1, v2, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v20
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x1
+
+    move-object/from16 v1, p0
+
+    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->sendPendingThumbnail(Lcom/android/server/am/ActivityRecord;Landroid/os/IBinder;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;Z)V
+
+    goto :goto_170
+
+    :catch_18e
+    move-exception v1
+
+    goto/16 :goto_1a
+
+    :catch_191
+    move-exception v1
+
+    goto :goto_177
+
+    :cond_193
+    move-object/from16 v15, v16
+
+    goto :goto_136
+
+    :cond_196
+    move-object/from16 v15, v16
+
+    goto :goto_13d
+
+    :cond_199
+    move-object/from16 v15, v16
+
+    goto :goto_144
+.end method
+
+.method public goingToSleep()V
+    .registers 5
+
+    monitor-enter p0
+
+    const/4 v1, 0x1
+
+    :try_start_2
+    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1}, Lcom/android/server/am/ActivityStack;->stopIfSleepingLocked()V
+
+    const/4 v1, 0x0
+
+    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLocked(Z)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v2, 0x1b
+
+    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeMessages(I)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v2, 0x1b
+
+    invoke-virtual {v1, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const-wide/32 v2, 0xdbba0
+
+    invoke-virtual {v1, v0, v2, v3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_2c
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_2e
+    .catchall {:try_start_2 .. :try_end_2e} :catchall_2c
+
+    throw v1
+.end method
+
+.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;I)V
+    .registers 12
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v6
+
+    if-nez v6, :cond_2d
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Unable to find app for caller "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, " when granting permission to uri "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :catchall_2a
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_2c
+    .catchall {:try_start_1 .. :try_end_2c} :catchall_2a
+
+    throw v0
+
+    :cond_2d
+    if-nez p2, :cond_37
+
+    :try_start_2f
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v1, "null target"
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_37
+    if-nez p3, :cond_41
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v1, "null uri"
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_41
+    iget-object v0, v6, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    const/4 v5, 0x0
+
+    move-object v0, p0
+
+    move-object v2, p2
+
+    move-object v3, p3
+
+    move v4, p4
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
+
+    monitor-exit p0
+    :try_end_4e
+    .catchall {:try_start_2f .. :try_end_4e} :catchall_2a
+
+    return-void
+.end method
+
+.method grantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;)V
+    .registers 6
+
+    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;)I
+
+    move-result v0
+
+    if-gez v0, :cond_7
+
+    :goto_6
+    return-void
+
+    :cond_7
+    invoke-virtual {p0, v0, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;)V
+
+    goto :goto_6
+.end method
+
+.method public grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;I)V
+    .registers 12
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;
+
+    move-result-object v5
+
+    if-nez v5, :cond_23
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Unknown owner: "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :catchall_20
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_22
+    .catchall {:try_start_1 .. :try_end_22} :catchall_20
+
+    throw v0
+
+    :cond_23
+    :try_start_23
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v0
+
+    if-eq p2, v0, :cond_3b
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v0
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v1
+
+    if-eq v0, v1, :cond_3b
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    const-string v1, "nice try"
+
+    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_3b
+    if-nez p3, :cond_45
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v1, "null target"
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_45
+    if-nez p4, :cond_4f
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v1, "null uri"
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_4f
+    move-object v0, p0
+
+    move v1, p2
+
+    move-object v2, p3
+
+    move-object v3, p4
+
+    move v4, p5
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
+
+    monitor-exit p0
+    :try_end_58
+    .catchall {:try_start_23 .. :try_end_58} :catchall_20
+
+    return-void
+.end method
+
+.method grantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
+    .registers 12
+
+    if-nez p2, :cond_a
+
+    new-instance v0, Ljava/lang/NullPointerException;
+
+    const-string v2, "targetPkg"
+
+    invoke-direct {v0, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_a
+    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Landroid/net/Uri;I)I
+
+    move-result v1
+
+    if-gez v1, :cond_11
+
+    :goto_10
+    return-void
+
+    :cond_11
+    move-object v0, p0
+
+    move-object v2, p2
+
+    move-object v3, p3
+
+    move v4, p4
+
+    move-object v5, p5
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
+
+    goto :goto_10
+.end method
+
+.method grantUriPermissionUncheckedFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;)V
+    .registers 11
+
+    invoke-virtual {p3}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v3
+
+    invoke-virtual {p3}, Landroid/content/Intent;->getFlags()I
+
+    move-result v4
+
+    move-object v0, p0
+
+    move v1, p1
+
+    move-object v2, p2
+
+    move-object v5, p4
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
+
+    return-void
+.end method
+
+.method grantUriPermissionUncheckedLocked(ILjava/lang/String;Landroid/net/Uri;ILcom/android/server/am/UriPermissionOwner;)V
+    .registers 9
+
+    and-int/lit8 p4, p4, 0x3
+
+    if-nez p4, :cond_5
+
+    :cond_4
+    :goto_4
+    return-void
+
+    :cond_5
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/util/HashMap;
+
+    if-nez v1, :cond_19
+
+    new-instance v1, Ljava/util/HashMap;
+
+    invoke-direct {v1}, Ljava/util/HashMap;-><init>()V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    invoke-virtual {v2, p1, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
+
+    :cond_19
+    invoke-virtual {v1, p3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/UriPermission;
+
+    if-nez v0, :cond_29
+
+    new-instance v0, Lcom/android/server/am/UriPermission;
+
+    invoke-direct {v0, p1, p3}, Lcom/android/server/am/UriPermission;-><init>(ILandroid/net/Uri;)V
+
+    invoke-virtual {v1, p3, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_29
+    iget v2, v0, Lcom/android/server/am/UriPermission;->modeFlags:I
+
+    or-int/2addr v2, p4
+
+    iput v2, v0, Lcom/android/server/am/UriPermission;->modeFlags:I
+
+    if-nez p5, :cond_36
+
+    iget v2, v0, Lcom/android/server/am/UriPermission;->globalModeFlags:I
+
+    or-int/2addr v2, p4
+
+    iput v2, v0, Lcom/android/server/am/UriPermission;->globalModeFlags:I
+
+    goto :goto_4
+
+    :cond_36
+    and-int/lit8 v2, p4, 0x1
+
+    if-eqz v2, :cond_42
+
+    iget-object v2, v0, Lcom/android/server/am/UriPermission;->readOwners:Ljava/util/HashSet;
+
+    invoke-virtual {v2, p5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    invoke-virtual {p5, v0}, Lcom/android/server/am/UriPermissionOwner;->addReadPermission(Lcom/android/server/am/UriPermission;)V
+
+    :cond_42
+    and-int/lit8 v2, p4, 0x2
+
+    if-eqz v2, :cond_4
+
+    iget-object v2, v0, Lcom/android/server/am/UriPermission;->writeOwners:Ljava/util/HashSet;
+
+    invoke-virtual {v2, p5}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    invoke-virtual {p5, v0}, Lcom/android/server/am/UriPermissionOwner;->addWritePermission(Lcom/android/server/am/UriPermission;)V
+
+    goto :goto_4
+.end method
+
+.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+    .registers 13
+
+    const/4 v4, 0x0
+
+    const-string v0, "Crash"
+
+    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v2
+
+    if-nez p1, :cond_52
+
+    const-string v3, "system_server"
+
+    :goto_b
+    const/16 v1, 0x7557
+
+    const/4 v0, 0x7
+
+    new-array v5, v0, [Ljava/lang/Object;
+
+    const/4 v0, 0x0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v6
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    aput-object v6, v5, v0
+
+    const/4 v0, 0x1
+
+    aput-object v3, v5, v0
+
+    const/4 v6, 0x2
+
+    if-nez v2, :cond_5a
+
+    const/4 v0, -0x1
+
+    :goto_22
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    aput-object v0, v5, v6
+
+    const/4 v0, 0x3
+
+    iget-object v6, p2, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;
+
+    aput-object v6, v5, v0
+
+    const/4 v0, 0x4
+
+    iget-object v6, p2, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;
+
+    aput-object v6, v5, v0
+
+    const/4 v0, 0x5
+
+    iget-object v6, p2, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;
+
+    aput-object v6, v5, v0
+
+    const/4 v0, 0x6
+
+    iget v6, p2, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v6
+
+    aput-object v6, v5, v0
+
+    invoke-static {v1, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    const-string v1, "crash"
+
+    move-object v0, p0
+
+    move-object v5, v4
+
+    move-object v6, v4
+
+    move-object v7, v4
+
+    move-object v8, v4
+
+    move-object v9, p2
+
+    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+
+    invoke-direct {p0, v2, p2}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+
+    return-void
+
+    :cond_52
+    if-nez v2, :cond_57
+
+    const-string v3, "unknown"
+
+    goto :goto_b
+
+    :cond_57
+    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    goto :goto_b
+
+    :cond_5a
+    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    goto :goto_22
+.end method
+
+.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
+    .registers 16
+
+    const-string v9, "StrictMode"
+
+    invoke-direct {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v5
+
+    if-nez v5, :cond_9
+
+    :cond_8
+    :goto_8
+    return-void
+
+    :cond_9
+    and-int/lit16 v9, p2, 0x80
+
+    if-eqz v9, :cond_28
+
+    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I
+
+    move-result v9
+
+    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v8
+
+    const/4 v1, 0x1
+
+    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+
+    monitor-enter v10
+
+    :try_start_19
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+
+    invoke-virtual {v9, v8}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
+
+    move-result v9
+
+    if-eqz v9, :cond_83
+
+    const/4 v1, 0x0
+
+    :goto_22
+    monitor-exit v10
+    :try_end_23
+    .catchall {:try_start_19 .. :try_end_23} :catchall_98
+
+    if-eqz v1, :cond_28
+
+    invoke-direct {p0, v5, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
+
+    :cond_28
+    and-int/lit8 v9, p2, 0x20
+
+    if-eqz v9, :cond_8
+
+    new-instance v7, Lcom/android/server/am/AppErrorResult;
+
+    invoke-direct {v7}, Lcom/android/server/am/AppErrorResult;-><init>()V
+
+    monitor-enter p0
+
+    :try_start_32
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v3
+
+    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;
+
+    move-result-object v2
+
+    const/16 v9, 0x1a
+
+    iput v9, v2, Landroid/os/Message;->what:I
+
+    new-instance v0, Ljava/util/HashMap;
+
+    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V
+
+    const-string v9, "result"
+
+    invoke-virtual {v0, v9, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    const-string v9, "app"
+
+    invoke-virtual {v0, v9, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    const-string v9, "violationMask"
+
+    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v10
+
+    invoke-virtual {v0, v9, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    const-string v9, "info"
+
+    invoke-virtual {v0, v9, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v9, v2}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    invoke-static {v3, v4}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_66
+    .catchall {:try_start_32 .. :try_end_66} :catchall_9b
+
+    invoke-virtual {v7}, Lcom/android/server/am/AppErrorResult;->get()I
+
+    move-result v6
+
+    const-string v9, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "handleApplicationStrictModeViolation; res="
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_8
+
+    :cond_83
+    :try_start_83
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->size()I
+
+    move-result v9
+
+    const/16 v11, 0x1388
+
+    if-lt v9, v11, :cond_92
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V
+
+    :cond_92
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
+
+    invoke-virtual {v9, v8}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    goto :goto_22
+
+    :catchall_98
+    move-exception v9
+
+    monitor-exit v10
+    :try_end_9a
+    .catchall {:try_start_83 .. :try_end_9a} :catchall_98
+
+    throw v9
+
+    :catchall_9b
+    move-exception v9
+
+    :try_start_9c
+    monitor-exit p0
+    :try_end_9d
+    .catchall {:try_start_9c .. :try_end_9d} :catchall_9b
+
+    throw v9
+.end method
+
+.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Z
+    .registers 16
+
+    const/4 v10, 0x1
+
+    const/4 v11, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v0, "WTF"
+
+    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v2
+
+    if-nez p1, :cond_5b
+
+    const-string v3, "system_server"
+
+    :goto_d
+    const/16 v1, 0x7558
+
+    const/4 v0, 0x5
+
+    new-array v5, v0, [Ljava/lang/Object;
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v0
+
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    aput-object v0, v5, v11
+
+    aput-object v3, v5, v10
+
+    const/4 v6, 0x2
+
+    if-nez v2, :cond_63
+
+    const/4 v0, -0x1
+
+    :goto_22
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v0
+
+    aput-object v0, v5, v6
+
+    const/4 v0, 0x3
+
+    aput-object p2, v5, v0
+
+    const/4 v0, 0x4
+
+    iget-object v6, p3, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;
+
+    aput-object v6, v5, v0
+
+    invoke-static {v1, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    const-string v1, "wtf"
+
+    move-object v0, p0
+
+    move-object v5, v4
+
+    move-object v6, p2
+
+    move-object v7, v4
+
+    move-object v8, v4
+
+    move-object v9, p3
+
+    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+
+    if-eqz v2, :cond_68
+
+    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {}, Landroid/os/Process;->myPid()I
+
+    move-result v1
+
+    if-eq v0, v1, :cond_68
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v0
+
+    const-string v1, "wtf_is_fatal"
+
+    invoke-static {v0, v1, v11}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+
+    move-result v0
+
+    if-eqz v0, :cond_68
+
+    invoke-direct {p0, v2, p3}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V
+
+    move v0, v10
+
+    :goto_5a
+    return v0
+
+    :cond_5b
+    if-nez v2, :cond_60
+
+    const-string v3, "unknown"
+
+    goto :goto_d
+
+    :cond_60
+    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    goto :goto_d
+
+    :cond_63
+    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    goto :goto_22
+
+    :cond_68
+    move v0, v11
+
+    goto :goto_5a
+.end method
+
+.method incProviderCount(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)Z
+    .registers 7
+
+    const/4 v1, 0x1
+
+    if-eqz p1, :cond_2f
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    invoke-virtual {v2, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Ljava/lang/Integer;
+
+    if-nez v0, :cond_1d
+
+    iget-object v2, p2, Lcom/android/server/am/ContentProviderRecord;->clients:Ljava/util/HashSet;
+
+    invoke-virtual {v2, p1}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    new-instance v3, Ljava/lang/Integer;
+
+    invoke-direct {v3, v1}, Ljava/lang/Integer;-><init>(I)V
+
+    invoke-virtual {v2, p2, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :goto_1c
+    return v1
+
+    :cond_1d
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/HashMap;
+
+    new-instance v2, Ljava/lang/Integer;
+
+    invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
+
+    move-result v3
+
+    add-int/lit8 v3, v3, 0x1
+
+    invoke-direct {v2, v3}, Ljava/lang/Integer;-><init>(I)V
+
+    invoke-virtual {v1, p2, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :goto_2d
+    const/4 v1, 0x0
+
+    goto :goto_1c
+
+    :cond_2f
+    iget v1, p2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    add-int/lit8 v1, v1, 0x1
+
+    iput v1, p2, Lcom/android/server/am/ContentProviderRecord;->externals:I
+
+    goto :goto_2d
+.end method
+
+.method isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
+    .registers 3
+
+    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v0, v0, 0x8
+
+    if-eqz v0, :cond_8
+
+    const/4 v0, 0x1
+
+    :goto_7
+    return v0
+
+    :cond_8
+    const/4 v0, 0x0
+
+    goto :goto_7
+.end method
+
+.method public isImmersive(Landroid/os/IBinder;)Z
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_12
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V
+
+    throw v1
+
+    :catchall_f
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_11
+    .catchall {:try_start_1 .. :try_end_11} :catchall_f
+
+    throw v1
+
+    :cond_12
+    :try_start_12
+    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z
+
+    monitor-exit p0
+    :try_end_15
+    .catchall {:try_start_12 .. :try_end_15} :catchall_f
+
+    return v1
+.end method
+
+.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
+    .registers 8
+
+    const/4 v4, 0x0
+
+    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;
+
+    if-nez v5, :cond_6
+
+    :cond_5
+    :goto_5
+    return v4
+
+    :cond_6
+    :try_start_6
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/PendingIntentRecord;
+
+    move-object v3, v0
+
+    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;
+
+    if-eqz v5, :cond_5
+
+    const/4 v1, 0x0
+
+    :goto_11
+    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;
+
+    array-length v5, v5
+
+    if-ge v1, v5, :cond_2d
+
+    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;
+
+    aget-object v2, v5, v1
+
+    invoke-virtual {v2}, Landroid/content/Intent;->getPackage()Ljava/lang/String;
+
+    move-result-object v5
+
+    if-eqz v5, :cond_2a
+
+    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+    :try_end_27
+    .catch Ljava/lang/ClassCastException; {:try_start_6 .. :try_end_27} :catch_2f
+
+    move-result-object v5
+
+    if-nez v5, :cond_5
+
+    :cond_2a
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_11
+
+    :cond_2d
+    const/4 v4, 0x1
+
+    goto :goto_5
+
+    :catch_2f
+    move-exception v5
+
+    goto :goto_5
+.end method
+
+.method isNextTransitionForward()Z
+    .registers 3
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    invoke-virtual {v1}, Lcom/android/server/wm/WindowManagerService;->getPendingAppTransition()I
+
+    move-result v0
+
+    const/16 v1, 0x1006
+
+    if-eq v0, v1, :cond_12
+
+    const/16 v1, 0x1008
+
+    if-eq v0, v1, :cond_12
+
+    const/16 v1, 0x100a
+
+    if-ne v0, v1, :cond_14
+
+    :cond_12
+    const/4 v1, 0x1
+
+    :goto_13
+    return v1
+
+    :cond_14
+    const/4 v1, 0x0
+
+    goto :goto_13
+.end method
+
+.method public isSleeping()Z
+    .registers 2
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z
+
+    if-nez v0, :cond_8
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z
+
+    if-eqz v0, :cond_a
+
+    :cond_8
+    const/4 v0, 0x1
+
+    :goto_9
+    return v0
+
+    :cond_a
+    const/4 v0, 0x0
+
+    goto :goto_9
+.end method
+
+.method public isTopActivityImmersive()Z
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_e
+
+    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z
+
+    :goto_c
+    monitor-exit p0
+
+    return v1
+
+    :cond_e
+    const/4 v1, 0x0
+
+    goto :goto_c
+
+    :catchall_10
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_12
+    .catchall {:try_start_1 .. :try_end_12} :catchall_10
+
+    throw v1
+.end method
+
+.method public isUserAMonkey()Z
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    if-eqz v0, :cond_8
+
+    const/4 v0, 0x1
+
+    :goto_6
+    monitor-exit p0
+
+    return v0
+
+    :cond_8
+    const/4 v0, 0x0
+
+    goto :goto_6
+
+    :catchall_a
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_c
+    .catchall {:try_start_1 .. :try_end_c} :catchall_a
+
+    throw v0
+.end method
+
+.method public killAllBackgroundProcesses()V
+    .registers 16
+
+    const-string v11, "android.permission.KILL_BACKGROUND_PROCESSES"
+
+    invoke-virtual {p0, v11}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v11
+
+    if-eqz v11, :cond_44
+
+    new-instance v11, Ljava/lang/StringBuilder;
+
+    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v12, "Permission Denial: killAllBackgroundProcesses() from pid="
+
+    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v12
+
+    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    const-string v12, ", uid="
+
+    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v12
+
+    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    const-string v12, " requires "
+
+    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    const-string v12, "android.permission.KILL_BACKGROUND_PROCESSES"
+
+    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v11
+
+    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    const-string v11, "ActivityManager"
+
+    invoke-static {v11, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v11, Ljava/lang/SecurityException;
+
+    invoke-direct {v11, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v11
+
+    :cond_44
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v4
+
+    :try_start_48
+    monitor-enter p0
+    :try_end_49
+    .catchall {:try_start_48 .. :try_end_49} :catchall_87
+
+    :try_start_49
+    new-instance v10, Ljava/util/ArrayList;
+
+    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V
+
+    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v11}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v11
+
+    invoke-virtual {v11}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v11
+
+    invoke-interface {v11}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v7
+
+    :cond_5c
+    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v11
+
+    if-eqz v11, :cond_99
+
+    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Landroid/util/SparseArray;
+
+    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I
+
+    move-result v1
+
+    const/4 v8, 0x0
+
+    :goto_6d
+    if-ge v8, v1, :cond_5c
+
+    invoke-virtual {v3, v8}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v11, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v11, :cond_7c
+
+    :cond_79
+    :goto_79
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_6d
+
+    :cond_7c
+    iget-boolean v11, v2, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    if-eqz v11, :cond_8c
+
+    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_79
+
+    :catchall_84
+    move-exception v11
+
+    monitor-exit p0
+    :try_end_86
+    .catchall {:try_start_49 .. :try_end_86} :catchall_84
+
+    :try_start_86
+    throw v11
+    :try_end_87
+    .catchall {:try_start_86 .. :try_end_87} :catchall_87
+
+    :catchall_87
+    move-exception v11
+
+    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v11
+
+    :cond_8c
+    :try_start_8c
+    iget v11, v2, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    sget v12, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt v11, v12, :cond_79
+
+    const/4 v11, 0x1
+
+    iput-boolean v11, v2, Lcom/android/server/am/ProcessRecord;->removed:Z
+
+    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    goto :goto_79
+
+    :cond_99
+    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v6, 0x0
+
+    :goto_9e
+    if-ge v6, v0, :cond_b0
+
+    invoke-virtual {v10, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Lcom/android/server/am/ProcessRecord;
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x1
+
+    const-string v14, "kill all background"
+
+    invoke-direct {p0, v11, v12, v13, v14}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
+
+    add-int/lit8 v6, v6, 0x1
+
+    goto :goto_9e
+
+    :cond_b0
+    monitor-exit p0
+    :try_end_b1
+    .catchall {:try_start_8c .. :try_end_b1} :catchall_84
+
+    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+.end method
+
+.method killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;Landroid/app/Dialog;)V
+    .registers 7
+
+    monitor-enter p0
+
+    const/4 v0, 0x0
+
+    :try_start_2
+    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z
+
+    const/4 v0, 0x0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z
+
+    const/4 v0, 0x0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;
+
+    if-ne v0, p2, :cond_14
+
+    const/4 v0, 0x0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;
+
+    :cond_14
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;
+
+    if-ne v0, p2, :cond_1b
+
+    const/4 v0, 0x0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;
+
+    :cond_1b
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v0, :cond_6f
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v0, v1, :cond_6f
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v2, "Killing "
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    const-string v2, ": user\'s request"
+
+    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v0, 0x7547
+
+    const/4 v1, 0x4
+
+    new-array v1, v1, [Ljava/lang/Object;
+
+    const/4 v2, 0x0
+
+    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    aput-object v3, v1, v2
+
+    const/4 v2, 0x1
+
+    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v3, v1, v2
+
+    const/4 v2, 0x2
+
+    iget v3, p1, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v3
+
+    aput-object v3, v1, v2
+
+    const/4 v2, 0x3
+
+    const-string v3, "user\'s request after error"
+
+    aput-object v3, v1, v2
+
+    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v0}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    :cond_6f
+    monitor-exit p0
+
+    return-void
+
+    :catchall_71
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_73
+    .catchall {:try_start_2 .. :try_end_73} :catchall_71
+
+    throw v0
+.end method
+
+.method public killApplicationProcess(Ljava/lang/String;I)V
+    .registers 8
+
+    if-nez p1, :cond_3
+
+    :goto_2
+    return-void
+
+    :cond_3
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    const/16 v2, 0x3e8
+
+    if-ne v1, v2, :cond_43
+
+    monitor-enter p0
+
+    :try_start_c
+    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_20
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+    :try_end_14
+    .catchall {:try_start_c .. :try_end_14} :catchall_1d
+
+    if-eqz v2, :cond_20
+
+    :try_start_16
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleSuicide()V
+    :try_end_1b
+    .catchall {:try_start_16 .. :try_end_1b} :catchall_1d
+    .catch Landroid/os/RemoteException; {:try_start_16 .. :try_end_1b} :catch_60
+
+    :goto_1b
+    :try_start_1b
+    monitor-exit p0
+
+    goto :goto_2
+
+    :catchall_1d
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_1f
+    .catchall {:try_start_1b .. :try_end_1f} :catchall_1d
+
+    throw v2
+
+    :cond_20
+    :try_start_20
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Process/uid not found attempting kill of "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " / "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_42
+    .catchall {:try_start_20 .. :try_end_42} :catchall_1d
+
+    goto :goto_1b
+
+    :cond_43
+    new-instance v2, Ljava/lang/SecurityException;
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " cannot kill app process: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :catch_60
+    move-exception v2
+
+    goto :goto_1b
+.end method
+
+.method public killApplicationWithUid(Ljava/lang/String;I)V
+    .registers 8
+
+    if-nez p1, :cond_3
+
+    :goto_2
+    return-void
+
+    :cond_3
+    if-gez p2, :cond_1e
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Invalid uid specified for pkg : "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_2
+
+    :cond_1e
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v0
+
+    const/16 v2, 0x3e8
+
+    if-ne v0, v2, :cond_3b
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v3, 0x16
+
+    invoke-virtual {v2, v3}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v1
+
+    iput p2, v1, Landroid/os/Message;->arg1:I
+
+    const/4 v2, 0x0
+
+    iput v2, v1, Landroid/os/Message;->arg2:I
+
+    iput-object p1, v1, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v2, v1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    goto :goto_2
+
+    :cond_3b
+    new-instance v2, Ljava/lang/SecurityException;
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " cannot kill pkg: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+.end method
+
+.method public killBackgroundProcesses(Ljava/lang/String;)V
+    .registers 15
+
+    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"
+
+    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v0
+
+    if-eqz v0, :cond_4c
+
+    const-string v0, "android.permission.RESTART_PACKAGES"
+
+    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v0
+
+    if-eqz v0, :cond_4c
+
+    new-instance v0, Ljava/lang/StringBuilder;
+
+    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v1, "Permission Denial: killBackgroundProcesses() from pid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v1
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, ", uid="
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, " requires "
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"
+
+    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v11
+
+    const-string v0, "ActivityManager"
+
+    invoke-static {v0, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    invoke-direct {v0, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_4c
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v9
+
+    :try_start_50
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v12
+
+    const/4 v2, -0x1
+
+    monitor-enter p0
+    :try_end_56
+    .catchall {:try_start_50 .. :try_end_56} :catchall_8b
+
+    :try_start_56
+    invoke-interface {v12, p1}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;)I
+    :try_end_59
+    .catchall {:try_start_56 .. :try_end_59} :catchall_88
+    .catch Landroid/os/RemoteException; {:try_start_56 .. :try_end_59} :catch_90
+
+    move-result v2
+
+    :goto_5a
+    const/4 v0, -0x1
+
+    if-ne v2, v0, :cond_7a
+
+    :try_start_5d
+    const-string v0, "ActivityManager"
+
+    new-instance v1, Ljava/lang/StringBuilder;
+
+    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "Invalid packageName: "
+
+    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v1
+
+    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+    :try_end_76
+    .catchall {:try_start_5d .. :try_end_76} :catchall_88
+
+    :goto_76
+    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :cond_7a
+    const/4 v3, 0x5
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    :try_start_7f
+    const-string v8, "kill background"
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIZZZZLjava/lang/String;)Z
+
+    monitor-exit p0
+
+    goto :goto_76
+
+    :catchall_88
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_8a
+    .catchall {:try_start_7f .. :try_end_8a} :catchall_88
+
+    :try_start_8a
+    throw v0
+    :try_end_8b
+    .catchall {:try_start_8a .. :try_end_8b} :catchall_8b
+
+    :catchall_8b
+    move-exception v0
+
+    invoke-static {v9, v10}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v0
+
+    :catch_90
+    move-exception v0
+
+    goto :goto_5a
+.end method
+
+.method public killPids([ILjava/lang/String;Z)Z
+    .registers 17
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v8
+
+    const/16 v9, 0x3e8
+
+    if-eq v8, v9, :cond_10
+
+    new-instance v8, Ljava/lang/SecurityException;
+
+    const-string v9, "killPids only available to the system"
+
+    invoke-direct {v8, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v8
+
+    :cond_10
+    if-nez p2, :cond_36
+
+    const-string v4, "Unknown"
+
+    :goto_14
+    const/4 v2, 0x0
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v9
+
+    :try_start_18
+    array-length v8, p1
+
+    new-array v6, v8, [I
+
+    const/4 v7, 0x0
+
+    const/4 v1, 0x0
+
+    :goto_1d
+    array-length v8, p1
+
+    if-ge v1, v8, :cond_38
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    aget v10, p1, v1
+
+    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_33
+
+    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    aput v5, v6, v1
+
+    if-le v5, v7, :cond_33
+
+    move v7, v5
+
+    :cond_33
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_1d
+
+    :cond_36
+    move-object v4, p2
+
+    goto :goto_14
+
+    :cond_38
+    const/16 v8, 0xf
+
+    if-ge v7, v8, :cond_42
+
+    sget v8, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-le v7, v8, :cond_42
+
+    sget v7, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    :cond_42
+    if-nez p3, :cond_48
+
+    const/4 v8, 0x5
+
+    if-ge v7, v8, :cond_48
+
+    const/4 v7, 0x5
+
+    :cond_48
+    const-string v8, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Killing processes "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, " at adjustment "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v8, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v1, 0x0
+
+    :goto_6b
+    array-length v8, p1
+
+    if-ge v1, v8, :cond_de
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    aget v10, p1, v1
+
+    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    if-nez v3, :cond_7d
+
+    :cond_7a
+    :goto_7a
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_6b
+
+    :cond_7d
+    iget v0, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    if-lt v0, v7, :cond_7a
+
+    iget-boolean v8, v3, Lcom/android/server/am/ProcessRecord;->killedBackground:Z
+
+    if-nez v8, :cond_7a
+
+    const-string v8, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Killing "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, " (adj "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    const-string v11, "): "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v8, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v8, 0x7547
+
+    const/4 v10, 0x4
+
+    new-array v10, v10, [Ljava/lang/Object;
+
+    const/4 v11, 0x0
+
+    iget v12, v3, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v12
+
+    aput-object v12, v10, v11
+
+    const/4 v11, 0x1
+
+    iget-object v12, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v12, v10, v11
+
+    const/4 v11, 0x2
+
+    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v12
+
+    aput-object v12, v10, v11
+
+    const/4 v11, 0x3
+
+    aput-object v4, v10, v11
+
+    invoke-static {v8, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    const/4 v2, 0x1
+
+    const/4 v8, 0x1
+
+    iput-boolean v8, v3, Lcom/android/server/am/ProcessRecord;->killedBackground:Z
+
+    aget v8, p1, v1
+
+    invoke-static {v8}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    goto :goto_7a
+
+    :catchall_db
+    move-exception v8
+
+    monitor-exit v9
+    :try_end_dd
+    .catchall {:try_start_18 .. :try_end_dd} :catchall_db
+
+    throw v8
+
+    :cond_de
+    :try_start_de
+    monitor-exit v9
+    :try_end_df
+    .catchall {:try_start_de .. :try_end_df} :catchall_db
+
+    return v2
+.end method
+
+.method final logAppTooSlow(Lcom/android/server/am/ProcessRecord;JLjava/lang/String;)V
+    .registers 25
+
+    sget-boolean v16, Lcom/android/server/am/ActivityManagerService;->IS_USER_BUILD:Z
+
+    if-eqz v16, :cond_5
+
+    :cond_4
+    :goto_4
+    return-void
+
+    :cond_5
+    const-string v16, "dalvik.vm.stack-trace-file"
+
+    const/16 v17, 0x0
+
+    invoke-static/range {v16 .. v17}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v14
+
+    if-eqz v14, :cond_4
+
+    invoke-virtual {v14}, Ljava/lang/String;->length()I
+
+    move-result v16
+
+    if-eqz v16, :cond_4
+
+    invoke-static {}, Landroid/os/StrictMode;->allowThreadDiskReads()Landroid/os/StrictMode$ThreadPolicy;
+
+    move-result-object v9
+
+    invoke-static {}, Landroid/os/StrictMode;->allowThreadDiskWrites()Landroid/os/StrictMode$ThreadPolicy;
+
+    :try_start_1c
+    new-instance v13, Ljava/io/File;
+
+    invoke-direct {v13, v14}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v13}, Ljava/io/File;->getParentFile()Ljava/io/File;
+
+    move-result-object v12
+
+    new-instance v15, Ljava/io/File;
+
+    const-string v16, "__tmp__"
+
+    move-object/from16 v0, v16
+
+    invoke-direct {v15, v12, v0}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+    :try_end_2e
+    .catchall {:try_start_1c .. :try_end_2e} :catchall_136
+
+    :try_start_2e
+    invoke-virtual {v12}, Ljava/io/File;->exists()Z
+
+    move-result v16
+
+    if-nez v16, :cond_37
+
+    invoke-virtual {v13}, Ljava/io/File;->mkdirs()Z
+
+    :cond_37
+    invoke-virtual {v12}, Ljava/io/File;->getPath()Ljava/lang/String;
+
+    move-result-object v16
+
+    const/16 v17, 0x1fd
+
+    const/16 v18, -0x1
+
+    const/16 v19, -0x1
+
+    invoke-static/range {v16 .. v19}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
+
+    invoke-virtual {v13}, Ljava/io/File;->exists()Z
+
+    move-result v16
+
+    if-eqz v16, :cond_50
+
+    invoke-virtual {v15}, Ljava/io/File;->delete()Z
+
+    invoke-virtual {v13, v15}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+
+    :cond_50
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    new-instance v11, Landroid/text/format/Time;
+
+    invoke-direct {v11}, Landroid/text/format/Time;-><init>()V
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v16
+
+    move-wide/from16 v0, v16
+
+    invoke-virtual {v11, v0, v1}, Landroid/text/format/Time;->set(J)V
+
+    const-string v16, "%Y-%m-%d %H:%M:%S"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v11, v0}, Landroid/text/format/Time;->format(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    const-string v16, ": "
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v16
+
+    sub-long v16, v16, p2
+
+    move-wide/from16 v0, v16
+
+    invoke-static {v0, v1, v10}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V
+
+    const-string v16, " since "
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-object/from16 v0, p4
+
+    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    new-instance v5, Ljava/io/FileOutputStream;
+
+    invoke-direct {v5, v13}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v16
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/String;->getBytes()[B
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v5, v0}, Ljava/io/FileOutputStream;->write([B)V
+
+    if-nez p1, :cond_ad
+
+    const-string v16, "\n*** No application process!"
+
+    invoke-virtual/range {v16 .. v16}, Ljava/lang/String;->getBytes()[B
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v5, v0}, Ljava/io/FileOutputStream;->write([B)V
+
+    :cond_ad
+    invoke-virtual {v5}, Ljava/io/FileOutputStream;->close()V
+
+    invoke-virtual {v13}, Ljava/io/File;->getPath()Ljava/lang/String;
+
+    move-result-object v16
+
+    const/16 v17, 0x1b6
+
+    const/16 v18, -0x1
+
+    const/16 v19, -0x1
+
+    invoke-static/range {v16 .. v19}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
+    :try_end_bd
+    .catchall {:try_start_2e .. :try_end_bd} :catchall_136
+    .catch Ljava/io/IOException; {:try_start_2e .. :try_end_bd} :catch_10e
+
+    if-eqz p1, :cond_de
+
+    :try_start_bf
+    new-instance v4, Ljava/util/ArrayList;
+
+    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, p1
+
+    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v16, v0
+
+    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v16
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    const/16 v16, 0x0
+
+    const/16 v17, 0x0
+
+    move-object/from16 v0, v16
+
+    move-object/from16 v1, v17
+
+    invoke-static {v14, v4, v0, v1}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessStats;Landroid/util/SparseArray;)V
+
+    :cond_de
+    const/4 v7, 0x0
+
+    const/4 v2, 0x0
+
+    const/16 v6, 0x9
+
+    :goto_e2
+    if-ltz v6, :cond_13b
+
+    const-string v16, "slow%02d.txt"
+
+    const/16 v17, 0x1
+
+    move/from16 v0, v17
+
+    new-array v0, v0, [Ljava/lang/Object;
+
+    move-object/from16 v17, v0
+
+    const/16 v18, 0x0
+
+    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v19
+
+    aput-object v19, v17, v18
+
+    invoke-static/range {v16 .. v17}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
+
+    move-result-object v8
+
+    new-instance v2, Ljava/io/File;
+
+    invoke-direct {v2, v12, v8}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V
+
+    invoke-virtual {v2}, Ljava/io/File;->exists()Z
+
+    move-result v16
+
+    if-eqz v16, :cond_10a
+
+    if-eqz v7, :cond_132
+
+    invoke-virtual {v2, v7}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+
+    :cond_10a
+    :goto_10a
+    move-object v7, v2
+
+    add-int/lit8 v6, v6, -0x1
+
+    goto :goto_e2
+
+    :catch_10e
+    move-exception v3
+
+    const-string v16, "ActivityManager"
+
+    new-instance v17, Ljava/lang/StringBuilder;
+
+    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v18, "Unable to prepare slow app traces file: "
+
+    invoke-virtual/range {v17 .. v18}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v17
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v17
+
+    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v17
+
+    move-object/from16 v0, v16
+
+    move-object/from16 v1, v17
+
+    invoke-static {v0, v1, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+    :try_end_12d
+    .catchall {:try_start_bf .. :try_end_12d} :catchall_136
+
+    :cond_12d
+    :goto_12d
+    invoke-static {v9}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V
+
+    goto/16 :goto_4
+
+    :cond_132
+    :try_start_132
+    invoke-virtual {v2}, Ljava/io/File;->delete()Z
+    :try_end_135
+    .catchall {:try_start_132 .. :try_end_135} :catchall_136
+
+    goto :goto_10a
+
+    :catchall_136
+    move-exception v16
+
+    invoke-static {v9}, Landroid/os/StrictMode;->setThreadPolicy(Landroid/os/StrictMode$ThreadPolicy;)V
+
+    throw v16
+
+    :cond_13b
+    :try_start_13b
+    invoke-virtual {v13, v2}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+
+    invoke-virtual {v15}, Ljava/io/File;->exists()Z
+
+    move-result v16
+
+    if-eqz v16, :cond_12d
+
+    invoke-virtual {v15, v13}, Ljava/io/File;->renameTo(Ljava/io/File;)Z
+    :try_end_147
+    .catchall {:try_start_13b .. :try_end_147} :catchall_136
+
+    goto :goto_12d
+.end method
+
+.method makeRunningServiceInfoLocked(Lcom/android/server/am/ServiceRecord;)Landroid/app/ActivityManager$RunningServiceInfo;
+    .registers 9
+
+    new-instance v4, Landroid/app/ActivityManager$RunningServiceInfo;
+
+    invoke-direct {v4}, Landroid/app/ActivityManager$RunningServiceInfo;-><init>()V
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    iput-object v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->service:Landroid/content/ComponentName;
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v5, :cond_13
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v5, v5, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->pid:I
+
+    :cond_13
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->appInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->uid:I
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->processName:Ljava/lang/String;
+
+    iput-object v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->process:Ljava/lang/String;
+
+    iget-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    iput-boolean v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->foreground:Z
+
+    iget-wide v5, p1, Lcom/android/server/am/ServiceRecord;->createTime:J
+
+    iput-wide v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->activeSince:J
+
+    iget-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    iput-boolean v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->started:Z
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->size()I
+
+    move-result v5
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->clientCount:I
+
+    iget v5, p1, Lcom/android/server/am/ServiceRecord;->crashCount:I
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->crashCount:I
+
+    iget-wide v5, p1, Lcom/android/server/am/ServiceRecord;->lastActivity:J
+
+    iput-wide v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->lastActivityTime:J
+
+    iget-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    if-eqz v5, :cond_43
+
+    iget v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    or-int/lit8 v5, v5, 0x2
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    :cond_43
+    iget-boolean v5, p1, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    if-eqz v5, :cond_4d
+
+    iget v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    or-int/lit8 v5, v5, 0x1
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    :cond_4d
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v5, :cond_5f
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget v5, v5, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-ne v5, v6, :cond_5f
+
+    iget v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    or-int/lit8 v5, v5, 0x4
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    :cond_5f
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v5, :cond_6f
+
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-boolean v5, v5, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v5, :cond_6f
+
+    iget v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    or-int/lit8 v5, v5, 0x8
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->flags:I
+
+    :cond_6f
+    iget-object v5, p1, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v5
+
+    invoke-interface {v5}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v3
+
+    :cond_79
+    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_a4
+
+    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/util/ArrayList;
+
+    const/4 v2, 0x0
+
+    :goto_86
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-ge v2, v5, :cond_79
+
+    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ConnectionRecord;
+
+    iget v5, v0, Lcom/android/server/am/ConnectionRecord;->clientLabel:I
+
+    if-eqz v5, :cond_a5
+
+    iget-object v5, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iput-object v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->clientPackage:Ljava/lang/String;
+
+    iget v5, v0, Lcom/android/server/am/ConnectionRecord;->clientLabel:I
+
+    iput v5, v4, Landroid/app/ActivityManager$RunningServiceInfo;->clientLabel:I
+
+    :cond_a4
+    return-object v4
+
+    :cond_a5
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_86
+.end method
+
+.method public monitor()V
+    .registers 2
+
+    monitor-enter p0
+
+    :try_start_1
+    monitor-exit p0
+
+    return-void
+
+    :catchall_3
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_5
+    .catchall {:try_start_1 .. :try_end_5} :catchall_3
+
+    throw v0
+.end method
+
+.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
+    .registers 8
+
+    const/4 v3, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    if-nez p2, :cond_18
+
+    const/4 v4, 0x1
+
+    :goto_9
+    invoke-virtual {p0, p1, v4}, Lcom/android/server/am/ActivityManagerService;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I
+
+    move-result v2
+
+    if-ltz v2, :cond_1a
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(ILcom/android/server/am/ActivityRecord;)Z
+
+    move-result v3
+
+    monitor-exit p0
+
+    :goto_17
+    return v3
+
+    :cond_18
+    move v4, v3
+
+    goto :goto_9
+
+    :cond_1a
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_17
+
+    :catchall_1f
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_21
+    .catchall {:try_start_2 .. :try_end_21} :catchall_1f
+
+    throw v3
+.end method
+
+.method public moveTaskBackwards(I)V
+    .registers 7
+
+    const-string v2, "android.permission.REORDER_TASKS"
+
+    const-string v3, "moveTaskBackwards()"
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    :try_start_8
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    const-string v4, "Task backwards"
+
+    invoke-virtual {p0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IILjava/lang/String;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_1a
+
+    monitor-exit p0
+
+    :goto_19
+    return-void
+
+    :cond_1a
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->moveTaskBackwardsLocked(I)V
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_19
+
+    :catchall_26
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_28
+    .catchall {:try_start_8 .. :try_end_28} :catchall_26
+
+    throw v2
+.end method
+
+.method public moveTaskToBack(I)V
+    .registers 7
+
+    const-string v2, "android.permission.REORDER_TASKS"
+
+    const-string v3, "moveTaskToBack()"
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    :try_start_8
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v2, :cond_2a
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget v2, v2, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    if-ne v2, p1, :cond_2a
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    const-string v4, "Task to back"
+
+    invoke-virtual {p0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IILjava/lang/String;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_2a
+
+    monitor-exit p0
+
+    :goto_29
+    return-void
+
+    :cond_2a
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(ILcom/android/server/am/ActivityRecord;)Z
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_29
+
+    :catchall_39
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_3b
+    .catchall {:try_start_8 .. :try_end_3b} :catchall_39
+
+    throw v2
+.end method
+
+.method public moveTaskToFront(II)V
+    .registers 11
+
+    const-string v5, "android.permission.REORDER_TASKS"
+
+    const-string v6, "moveTaskToFront()"
+
+    invoke-virtual {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    :try_start_8
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v5
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v6
+
+    const-string v7, "Task to front"
+
+    invoke-virtual {p0, v5, v6, v7}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IILjava/lang/String;)Z
+
+    move-result v5
+
+    if-nez v5, :cond_1a
+
+    monitor-exit p0
+
+    :goto_19
+    return-void
+
+    :cond_1a
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+    :try_end_1d
+    .catchall {:try_start_8 .. :try_end_1d} :catchall_41
+
+    move-result-wide v2
+
+    :try_start_1e
+    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->taskForIdLocked(I)Lcom/android/server/am/TaskRecord;
+
+    move-result-object v4
+
+    if-eqz v4, :cond_44
+
+    and-int/lit8 v5, p2, 0x2
+
+    if-nez v5, :cond_2d
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v6, 0x1
+
+    iput-boolean v6, v5, Lcom/android/server/am/ActivityStack;->mUserLeaving:Z
+
+    :cond_2d
+    and-int/lit8 v5, p2, 0x1
+
+    if-eqz v5, :cond_36
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5}, Lcom/android/server/am/ActivityStack;->moveHomeToFrontLocked()V
+
+    :cond_36
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v6, 0x0
+
+    invoke-virtual {v5, v4, v6}, Lcom/android/server/am/ActivityStack;->moveTaskToFrontLocked(Lcom/android/server/am/TaskRecord;Lcom/android/server/am/ActivityRecord;)V
+    :try_end_3c
+    .catchall {:try_start_1e .. :try_end_3c} :catchall_82
+
+    :try_start_3c
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_19
+
+    :catchall_41
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_43
+    .catchall {:try_start_3c .. :try_end_43} :catchall_41
+
+    throw v5
+
+    :cond_44
+    :try_start_44
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    add-int/lit8 v1, v5, -0x1
+
+    :goto_4e
+    if-ltz v1, :cond_87
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget v5, v5, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    if-ne v5, p1, :cond_7f
+
+    and-int/lit8 v5, p2, 0x2
+
+    if-nez v5, :cond_69
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v6, 0x1
+
+    iput-boolean v6, v5, Lcom/android/server/am/ActivityStack;->mUserLeaving:Z
+
+    :cond_69
+    and-int/lit8 v5, p2, 0x1
+
+    if-eqz v5, :cond_72
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5}, Lcom/android/server/am/ActivityStack;->moveHomeToFrontLocked()V
+
+    :cond_72
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v6, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v5, v6, v7}, Lcom/android/server/am/ActivityStack;->moveTaskToFrontLocked(Lcom/android/server/am/TaskRecord;Lcom/android/server/am/ActivityRecord;)V
+    :try_end_7a
+    .catchall {:try_start_44 .. :try_end_7a} :catchall_82
+
+    :try_start_7a
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_19
+
+    :cond_7f
+    add-int/lit8 v1, v1, -0x1
+
+    goto :goto_4e
+
+    :catchall_82
+    move-exception v5
+
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v5
+
+    :cond_87
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_8b
+    .catchall {:try_start_7a .. :try_end_8b} :catchall_41
+
+    goto :goto_19
+.end method
+
+.method final newProcessRecordLocked(Landroid/app/IApplicationThread;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+    .registers 8
+
+    if-eqz p3, :cond_18
+
+    move-object v0, p3
+
+    :goto_3
+    const/4 v1, 0x0
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v3}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v2
+
+    monitor-enter v2
+
+    :try_start_b
+    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v2, v3, v0}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
+
+    move-result-object v1
+
+    monitor-exit v2
+    :try_end_12
+    .catchall {:try_start_b .. :try_end_12} :catchall_1b
+
+    new-instance v3, Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {v3, v1, p1, p2, v0}, Lcom/android/server/am/ProcessRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;Landroid/app/IApplicationThread;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
+
+    return-object v3
+
+    :cond_18
+    iget-object v0, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    goto :goto_3
+
+    :catchall_1b
+    move-exception v3
+
+    :try_start_1c
+    monitor-exit v2
+    :try_end_1d
+    .catchall {:try_start_1c .. :try_end_1d} :catchall_1b
+
+    throw v3
+.end method
+
+.method public newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    new-instance v0, Lcom/android/server/am/UriPermissionOwner;
+
+    invoke-direct {v0, p0, p1}, Lcom/android/server/am/UriPermissionOwner;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Object;)V
+
+    invoke-virtual {v0}, Lcom/android/server/am/UriPermissionOwner;->getExternalTokenLocked()Landroid/os/Binder;
+
+    move-result-object v1
+
+    monitor-exit p0
+
+    return-object v1
+
+    :catchall_c
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_e
+    .catchall {:try_start_1 .. :try_end_e} :catchall_c
+
+    throw v1
+.end method
+
+.method public noteWakeupAlarm(Landroid/content/IIntentSender;)V
+    .registers 9
+
+    instance-of v6, p1, Lcom/android/server/am/PendingIntentRecord;
+
+    if-nez v6, :cond_5
+
+    :goto_4
+    return-void
+
+    :cond_5
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v4
+
+    monitor-enter v4
+
+    :try_start_c
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->isOnBattery()Z
+
+    move-result v6
+
+    if-eqz v6, :cond_32
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V
+
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/PendingIntentRecord;
+
+    move-object v3, v0
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v1
+
+    iget v6, v3, Lcom/android/server/am/PendingIntentRecord;->uid:I
+
+    if-ne v6, v1, :cond_37
+
+    const/16 v5, 0x3e8
+
+    :goto_27
+    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;
+
+    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v4, v5, v6}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->incWakeupsLocked()V
+
+    :cond_32
+    monitor-exit v4
+
+    goto :goto_4
+
+    :catchall_34
+    move-exception v6
+
+    monitor-exit v4
+    :try_end_36
+    .catchall {:try_start_c .. :try_end_36} :catchall_34
+
+    throw v6
+
+    :cond_37
+    :try_start_37
+    iget v5, v3, Lcom/android/server/am/PendingIntentRecord;->uid:I
+    :try_end_39
+    .catchall {:try_start_37 .. :try_end_39} :catchall_34
+
+    goto :goto_27
+.end method
+
+.method public onCoreSettingsChange(Landroid/os/Bundle;)V
+    .registers 5
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v0, v2, -0x1
+
+    :goto_8
+    if-ltz v0, :cond_1e
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    :try_start_12
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v2, :cond_1b
+
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v2, p1}, Landroid/app/IApplicationThread;->setCoreSettings(Landroid/os/Bundle;)V
+    :try_end_1b
+    .catch Landroid/os/RemoteException; {:try_start_12 .. :try_end_1b} :catch_1f
+
+    :cond_1b
+    :goto_1b
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_8
+
+    :cond_1e
+    return-void
+
+    :catch_1f
+    move-exception v2
+
+    goto :goto_1b
+.end method
+
+.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+    .registers 8
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    :try_start_0
+    invoke-super {p0, p1, p2, p3, p4}, Landroid/app/ActivityManagerNative;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
+    :try_end_3
+    .catch Ljava/lang/RuntimeException; {:try_start_0 .. :try_end_3} :catch_5
+
+    move-result v1
+
+    return v1
+
+    :catch_5
+    move-exception v0
+
+    instance-of v1, v0, Ljava/lang/SecurityException;
+
+    if-nez v1, :cond_11
+
+    const-string v1, "ActivityManager"
+
+    const-string v2, "Activity Manager Crash"
+
+    invoke-static {v1, v2, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    :cond_11
+    throw v0
+.end method
+
+.method public openContentUri(Landroid/net/Uri;)Landroid/os/ParcelFileDescriptor;
+    .registers 9
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-direct {p0, v1}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternal(Ljava/lang/String;)Landroid/app/IActivityManager$ContentProviderHolder;
+
+    move-result-object v0
+
+    const/4 v2, 0x0
+
+    if-eqz v0, :cond_35
+
+    sget-object v3, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    new-instance v4, Lcom/android/server/am/ActivityManagerService$Identity;
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v5
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v6
+
+    invoke-direct {v4, p0, v5, v6}, Lcom/android/server/am/ActivityManagerService$Identity;-><init>(Lcom/android/server/am/ActivityManagerService;II)V
+
+    invoke-virtual {v3, v4}, Ljava/lang/ThreadLocal;->set(Ljava/lang/Object;)V
+
+    :try_start_1d
+    iget-object v3, v0, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;
+
+    const-string v4, "r"
+
+    invoke-interface {v3, p1, v4}, Landroid/content/IContentProvider;->openFile(Landroid/net/Uri;Ljava/lang/String;)Landroid/os/ParcelFileDescriptor;
+    :try_end_24
+    .catchall {:try_start_1d .. :try_end_24} :catchall_2e
+    .catch Ljava/io/FileNotFoundException; {:try_start_1d .. :try_end_24} :catch_54
+
+    move-result-object v2
+
+    sget-object v3, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    :goto_27
+    invoke-virtual {v3}, Ljava/lang/ThreadLocal;->remove()V
+
+    invoke-direct {p0, v1}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternal(Ljava/lang/String;)V
+
+    :goto_2d
+    return-object v2
+
+    :catchall_2e
+    move-exception v3
+
+    sget-object v4, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    invoke-virtual {v4}, Ljava/lang/ThreadLocal;->remove()V
+
+    throw v3
+
+    :cond_35
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Failed to get provider for authority \'"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, "\'"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_2d
+
+    :catch_54
+    move-exception v3
+
+    sget-object v3, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;
+
+    goto :goto_27
+.end method
+
+.method public overridePendingTransition(Landroid/os/IBinder;Ljava/lang/String;II)V
+    .registers 10
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v2
+
+    if-nez v2, :cond_b
+
+    monitor-exit p0
+
+    :goto_a
+    return-void
+
+    :cond_b
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-eq v3, v4, :cond_1b
+
+    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;
+
+    if-ne v3, v4, :cond_20
+
+    :cond_1b
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    invoke-virtual {v3, p2, p3, p4}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransition(Ljava/lang/String;II)V
+
+    :cond_20
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_a
+
+    :catchall_25
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_27
+    .catchall {:try_start_1 .. :try_end_27} :catchall_25
+
+    throw v3
+.end method
+
+.method public peekService(Landroid/content/Intent;Ljava/lang/String;)Landroid/os/IBinder;
+    .registers 9
+
+    if-eqz p1, :cond_11
+
+    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v3
+
+    const/4 v4, 0x1
+
+    if-ne v3, v4, :cond_11
+
+    new-instance v3, Ljava/lang/IllegalArgumentException;
+
+    const-string v4, "File descriptors passed in Intent"
+
+    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_11
+    const/4 v2, 0x0
+
+    monitor-enter p0
+
+    :try_start_13
+    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->findServiceLocked(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    move-result-object v1
+
+    if-eqz v1, :cond_77
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    if-nez v3, :cond_65
+
+    new-instance v3, Ljava/lang/SecurityException;
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: Accessing service "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " from pid="
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " requires "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    iget-object v5, v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->permission:Ljava/lang/String;
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :catchall_62
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_64
+    .catchall {:try_start_13 .. :try_end_64} :catchall_62
+
+    throw v3
+
+    :cond_65
+    :try_start_65
+    iget-object v3, v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    iget-object v4, v1, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v4, v4, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v3, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/IntentBindRecord;
+
+    if-eqz v0, :cond_77
+
+    iget-object v2, v0, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;
+
+    :cond_77
+    monitor-exit p0
+    :try_end_78
+    .catchall {:try_start_65 .. :try_end_78} :catchall_62
+
+    return-object v2
+.end method
+
+.method final performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
+    .registers 4
+
+    :try_start_0
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v0, :cond_16
+
+    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z
+
+    if-eqz v0, :cond_17
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z
+
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v0}, Landroid/app/IApplicationThread;->scheduleLowMemory()V
+
+    :cond_16
+    :goto_16
+    return-void
+
+    :cond_17
+    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v0}, Landroid/app/IApplicationThread;->processInBackground()V
+    :try_end_1c
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_1c} :catch_1d
+
+    goto :goto_16
+
+    :catch_1d
+    move-exception v0
+
+    goto :goto_16
+.end method
+
+.method final performAppGcsIfAppropriateLocked()V
+    .registers 2
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z
+
+    move-result v0
+
+    if-eqz v0, :cond_a
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->performAppGcsLocked()V
+
+    :goto_9
+    return-void
+
+    :cond_a
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V
+
+    goto :goto_9
+.end method
+
+.method final performAppGcsLocked()V
+    .registers 7
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    if-gtz v0, :cond_9
+
+    :cond_8
+    :goto_8
+    return-void
+
+    :cond_9
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_8
+
+    :cond_f
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-lez v2, :cond_41
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    iget v2, v1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I
+
+    const/4 v3, 0x2
+
+    if-gt v2, v3, :cond_29
+
+    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z
+
+    if-eqz v2, :cond_f
+
+    :cond_29
+    iget-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    const-wide/32 v4, 0xea60
+
+    add-long/2addr v2, v4
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-gtz v2, :cond_3e
+
+    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V
+
+    goto :goto_8
+
+    :cond_3e
+    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    :cond_41
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V
+
+    goto :goto_8
+.end method
+
+.method final performServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)V
+    .registers 4
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRestartingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_9
+
+    :goto_8
+    return-void
+
+    :cond_9
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v0}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v0
+
+    invoke-virtual {v0}, Landroid/content/Intent;->getFlags()I
+
+    move-result v0
+
+    const/4 v1, 0x1
+
+    invoke-direct {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZ)Z
+
+    goto :goto_8
+.end method
+
+.method public profileControl(Ljava/lang/String;ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;I)Z
+    .registers 21
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    :try_start_0
+    monitor-enter p0
+    :try_end_1
+    .catchall {:try_start_0 .. :try_end_1} :catchall_1d
+    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_1} :catch_14
+
+    :try_start_1
+    const-string v4, "android.permission.SET_ACTIVITY_WATCHER"
+
+    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v4
+
+    if-eqz v4, :cond_24
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    const-string v5, "Requires permission android.permission.SET_ACTIVITY_WATCHER"
+
+    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :catchall_11
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_13
+    .catchall {:try_start_1 .. :try_end_13} :catchall_11
+
+    :try_start_13
+    throw v4
+    :try_end_14
+    .catchall {:try_start_13 .. :try_end_14} :catchall_1d
+    .catch Landroid/os/RemoteException; {:try_start_13 .. :try_end_14} :catch_14
+
+    :catch_14
+    move-exception v11
+
+    :try_start_15
+    new-instance v4, Ljava/lang/IllegalStateException;
+
+    const-string v5, "Process disappeared"
+
+    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+    :try_end_1d
+    .catchall {:try_start_15 .. :try_end_1d} :catchall_1d
+
+    :catchall_1d
+    move-exception v4
+
+    if-eqz p4, :cond_23
+
+    :try_start_20
+    invoke-virtual/range {p4 .. p4}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_23
+    .catch Ljava/io/IOException; {:try_start_20 .. :try_end_23} :catch_d8
+
+    :cond_23
+    :goto_23
+    throw v4
+
+    :cond_24
+    if-eqz p2, :cond_30
+
+    if-nez p4, :cond_30
+
+    :try_start_28
+    new-instance v4, Ljava/lang/IllegalArgumentException;
+
+    const-string v5, "null fd"
+
+    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+    :try_end_30
+    .catchall {:try_start_28 .. :try_end_30} :catchall_11
+
+    :cond_30
+    const/4 v13, 0x0
+
+    if-eqz p1, :cond_64
+
+    :try_start_33
+    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
+
+    move-result v12
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v5
+    :try_end_3a
+    .catchall {:try_start_33 .. :try_end_3a} :catchall_11
+    .catch Ljava/lang/NumberFormatException; {:try_start_33 .. :try_end_3a} :catch_8a
+
+    :try_start_3a
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, v12}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    move-object v0, v4
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    move-object v13, v0
+
+    monitor-exit v5
+    :try_end_45
+    .catchall {:try_start_3a .. :try_end_45} :catchall_87
+
+    :goto_45
+    if-nez v13, :cond_64
+
+    :try_start_47
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    invoke-virtual {v4}, Lcom/android/server/ProcessMap;->getMap()Ljava/util/HashMap;
+
+    move-result-object v10
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v10, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v14
+
+    check-cast v14, Landroid/util/SparseArray;
+
+    if-eqz v14, :cond_64
+
+    invoke-virtual {v14}, Landroid/util/SparseArray;->size()I
+
+    move-result v4
+
+    if-lez v4, :cond_64
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v14, v4}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v13
+
+    check-cast v13, Lcom/android/server/am/ProcessRecord;
+
+    :cond_64
+    if-eqz p2, :cond_8c
+
+    if-eqz v13, :cond_6c
+
+    iget-object v4, v13, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v4, :cond_8c
+
+    :cond_6c
+    new-instance v4, Ljava/lang/IllegalArgumentException;
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Unknown process: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+    :try_end_87
+    .catchall {:try_start_47 .. :try_end_87} :catchall_11
+
+    :catchall_87
+    move-exception v4
+
+    :try_start_88
+    monitor-exit v5
+    :try_end_89
+    .catchall {:try_start_88 .. :try_end_89} :catchall_87
+
+    :try_start_89
+    throw v4
+    :try_end_8a
+    .catchall {:try_start_89 .. :try_end_8a} :catchall_11
+    .catch Ljava/lang/NumberFormatException; {:try_start_89 .. :try_end_8a} :catch_8a
+
+    :catch_8a
+    move-exception v4
+
+    goto :goto_45
+
+    :cond_8c
+    if-eqz p2, :cond_c9
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    :try_start_91
+    invoke-direct {p0, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)V
+
+    iget-object v5, v13, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v6, v13, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    const/4 v9, 0x0
+
+    move-object v4, p0
+
+    move-object/from16 v7, p3
+
+    move-object/from16 v8, p4
+
+    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Ljava/lang/String;Landroid/os/ParcelFileDescriptor;Z)V
+
+    iput-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;
+
+    move/from16 v0, p5
+
+    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
+    :try_end_a7
+    .catchall {:try_start_91 .. :try_end_a7} :catchall_11
+
+    :try_start_a7
+    invoke-virtual/range {p4 .. p4}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;
+    :try_end_aa
+    .catchall {:try_start_a7 .. :try_end_aa} :catchall_11
+    .catch Ljava/io/IOException; {:try_start_a7 .. :try_end_aa} :catch_c5
+
+    move-result-object p4
+
+    :goto_ab
+    :try_start_ab
+    iget-object v4, v13, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move/from16 v0, p2
+
+    move-object/from16 v1, p3
+
+    move-object/from16 v2, p4
+
+    move/from16 v3, p5
+
+    invoke-interface {v4, v0, v1, v2, v3}, Landroid/app/IApplicationThread;->profilerControl(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;I)V
+
+    const/16 p4, 0x0
+
+    const/4 v4, 0x0
+
+    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    :cond_bd
+    :goto_bd
+    const/4 v4, 0x1
+
+    monitor-exit p0
+    :try_end_bf
+    .catchall {:try_start_ab .. :try_end_bf} :catchall_11
+
+    if-eqz p4, :cond_c4
+
+    :try_start_c1
+    invoke-virtual/range {p4 .. p4}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_c4
+    .catch Ljava/io/IOException; {:try_start_c1 .. :try_end_c4} :catch_db
+
+    :cond_c4
+    :goto_c4
+    return v4
+
+    :catch_c5
+    move-exception v11
+
+    const/16 p4, 0x0
+
+    goto :goto_ab
+
+    :cond_c9
+    :try_start_c9
+    move-object/from16 v0, p3
+
+    move/from16 v1, p5
+
+    invoke-direct {p0, v13, v0, v1}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;I)V
+    :try_end_d0
+    .catchall {:try_start_c9 .. :try_end_d0} :catchall_11
+
+    if-eqz p4, :cond_bd
+
+    :try_start_d2
+    invoke-virtual/range {p4 .. p4}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_d5
+    .catchall {:try_start_d2 .. :try_end_d5} :catchall_11
+    .catch Ljava/io/IOException; {:try_start_d2 .. :try_end_d5} :catch_d6
+
+    goto :goto_bd
+
+    :catch_d6
+    move-exception v4
+
+    goto :goto_bd
+
+    :catch_d8
+    move-exception v5
+
+    goto/16 :goto_23
+
+    :catch_db
+    move-exception v5
+
+    goto :goto_c4
+.end method
+
+.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
+    .registers 18
+    .annotation system Ldalvik/annotation/Signature;
+        value = {
+            "(",
+            "Landroid/app/IApplicationThread;",
+            "Ljava/util/List",
+            "<",
+            "Landroid/app/IActivityManager$ContentProviderHolder;",
+            ">;)V"
+        }
+    .end annotation
+
+    if-nez p2, :cond_3
+
+    :goto_2
+    return-void
+
+    :cond_3
+    monitor-enter p0
+
+    :try_start_4
+    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v10
+
+    if-nez v10, :cond_3c
+
+    new-instance v12, Ljava/lang/SecurityException;
+
+    new-instance v13, Ljava/lang/StringBuilder;
+
+    invoke-direct {v13}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v14, "Unable to find app for caller "
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v13, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, " (pid="
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v14
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    const-string v14, ") when publishing content providers"
+
+    invoke-virtual {v13, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v13
+
+    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v13
+
+    invoke-direct {v12, v13}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v12
+
+    :catchall_39
+    move-exception v12
+
+    monitor-exit p0
+    :try_end_3b
+    .catchall {:try_start_4 .. :try_end_3b} :catchall_39
+
+    throw v12
+
+    :cond_3c
+    :try_start_3c
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v8
+
+    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I
+
+    move-result v1
+
+    const/4 v5, 0x0
+
+    :goto_45
+    if-ge v5, v1, :cond_c3
+
+    move-object/from16 v0, p2
+
+    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Landroid/app/IActivityManager$ContentProviderHolder;
+
+    if-eqz v11, :cond_59
+
+    iget-object v12, v11, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;
+
+    if-eqz v12, :cond_59
+
+    iget-object v12, v11, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;
+
+    if-nez v12, :cond_5c
+
+    :cond_59
+    :goto_59
+    add-int/lit8 v5, v5, 0x1
+
+    goto :goto_45
+
+    :cond_5c
+    iget-object v12, v10, Lcom/android/server/am/ProcessRecord;->pubProviders:Ljava/util/HashMap;
+
+    iget-object v13, v11, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v13, v13, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v12, v13}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ContentProviderRecord;
+
+    if-eqz v4, :cond_59
+
+    new-instance v3, Landroid/content/ComponentName;
+
+    iget-object v12, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v12, v12, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    iget-object v13, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v13, v13, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v3, v12, v13}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v12, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    iget-object v12, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v12, v12, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;
+
+    const-string v13, ";"
+
+    invoke-virtual {v12, v13}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;
+
+    move-result-object v7
+
+    const/4 v6, 0x0
+
+    :goto_87
+    array-length v12, v7
+
+    if-ge v6, v12, :cond_94
+
+    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    aget-object v13, v7, v6
+
+    invoke-virtual {v12, v13, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    add-int/lit8 v6, v6, 0x1
+
+    goto :goto_87
+
+    :cond_94
+    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    const/4 v6, 0x0
+
+    :goto_9b
+    if-ge v6, v2, :cond_b1
+
+    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v12, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v12
+
+    if-ne v12, v4, :cond_ae
+
+    iget-object v12, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;
+
+    invoke-virtual {v12, v6}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v6, v6, -0x1
+
+    add-int/lit8 v2, v2, -0x1
+
+    :cond_ae
+    add-int/lit8 v6, v6, 0x1
+
+    goto :goto_9b
+
+    :cond_b1
+    monitor-enter v4
+    :try_end_b2
+    .catchall {:try_start_3c .. :try_end_b2} :catchall_39
+
+    :try_start_b2
+    iget-object v12, v11, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;
+
+    iput-object v12, v4, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;
+
+    iput-object v10, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v4}, Ljava/lang/Object;->notifyAll()V
+
+    monitor-exit v4
+    :try_end_bc
+    .catchall {:try_start_b2 .. :try_end_bc} :catchall_c0
+
+    :try_start_bc
+    invoke-direct {p0, v10}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+    :try_end_bf
+    .catchall {:try_start_bc .. :try_end_bf} :catchall_39
+
+    goto :goto_59
+
+    :catchall_c0
+    move-exception v12
+
+    :try_start_c1
+    monitor-exit v4
+    :try_end_c2
+    .catchall {:try_start_c1 .. :try_end_c2} :catchall_c0
+
+    :try_start_c2
+    throw v12
+
+    :cond_c3
+    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_c7
+    .catchall {:try_start_c2 .. :try_end_c7} :catchall_39
+
+    goto/16 :goto_2
+.end method
+
+.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
+    .registers 18
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v11
+
+    const/4 v12, 0x1
+
+    if-ne v11, v12, :cond_11
+
+    new-instance v11, Ljava/lang/IllegalArgumentException;
+
+    const-string v12, "File descriptors passed in Intent"
+
+    invoke-direct {v11, v12}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v11
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    instance-of v11, p1, Lcom/android/server/am/ServiceRecord;
+
+    if-nez v11, :cond_21
+
+    new-instance v11, Ljava/lang/IllegalArgumentException;
+
+    const-string v12, "Invalid service token"
+
+    invoke-direct {v11, v12}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v11
+
+    :catchall_1e
+    move-exception v11
+
+    monitor-exit p0
+    :try_end_20
+    .catchall {:try_start_12 .. :try_end_20} :catchall_1e
+
+    throw v11
+
+    :cond_21
+    :try_start_21
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord;
+
+    move-object v10, v0
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v8
+
+    if-eqz v10, :cond_dc
+
+    new-instance v5, Landroid/content/Intent$FilterComparison;
+
+    move-object/from16 v0, p2
+
+    invoke-direct {v5, v0}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V
+
+    iget-object v11, v10, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v11, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/IntentBindRecord;
+
+    if-eqz v1, :cond_d0
+
+    iget-boolean v11, v1, Lcom/android/server/am/IntentBindRecord;->received:Z
+
+    if-nez v11, :cond_d0
+
+    move-object/from16 v0, p3
+
+    iput-object v0, v1, Lcom/android/server/am/IntentBindRecord;->binder:Landroid/os/IBinder;
+
+    const/4 v11, 0x1
+
+    iput-boolean v11, v1, Lcom/android/server/am/IntentBindRecord;->requested:Z
+
+    const/4 v11, 0x1
+
+    iput-boolean v11, v1, Lcom/android/server/am/IntentBindRecord;->received:Z
+
+    iget-object v11, v10, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v11}, Ljava/util/HashMap;->size()I
+
+    move-result v11
+
+    if-lez v11, :cond_d0
+
+    iget-object v11, v10, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v11}, Ljava/util/HashMap;->values()Ljava/util/Collection;
+
+    move-result-object v11
+
+    invoke-interface {v11}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;
+
+    move-result-object v7
+
+    :cond_5c
+    invoke-interface {v7}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v11
+
+    if-eqz v11, :cond_d0
+
+    invoke-interface {v7}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Ljava/util/ArrayList;
+
+    const/4 v6, 0x0
+
+    :goto_69
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v11
+
+    if-ge v6, v11, :cond_5c
+
+    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ConnectionRecord;
+
+    iget-object v11, v2, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v11, v11, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v11, v11, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v5, v11}, Landroid/content/Intent$FilterComparison;->equals(Ljava/lang/Object;)Z
+    :try_end_7e
+    .catchall {:try_start_21 .. :try_end_7e} :catchall_1e
+
+    move-result v11
+
+    if-nez v11, :cond_84
+
+    :goto_81
+    add-int/lit8 v6, v6, 0x1
+
+    goto :goto_69
+
+    :cond_84
+    :try_start_84
+    iget-object v11, v2, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    iget-object v12, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v11, v12, v0}, Landroid/app/IServiceConnection;->connected(Landroid/content/ComponentName;Landroid/os/IBinder;)V
+    :try_end_8d
+    .catchall {:try_start_84 .. :try_end_8d} :catchall_1e
+    .catch Ljava/lang/Exception; {:try_start_84 .. :try_end_8d} :catch_8e
+
+    goto :goto_81
+
+    :catch_8e
+    move-exception v4
+
+    :try_start_8f
+    const-string v11, "ActivityManager"
+
+    new-instance v12, Ljava/lang/StringBuilder;
+
+    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v13, "Failure sending service "
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    iget-object v13, v10, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, " to connection "
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    iget-object v13, v2, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    invoke-interface {v13}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v13
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, " (in "
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    iget-object v13, v2, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v13, v13, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v13, v13, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    const-string v13, ")"
+
+    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v12
+
+    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v12
+
+    invoke-static {v11, v12, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_81
+
+    :cond_d0
+    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v11
+
+    invoke-virtual {p0, v10, v11}, Lcom/android/server/am/ActivityManagerService;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :cond_dc
+    monitor-exit p0
+    :try_end_dd
+    .catchall {:try_start_8f .. :try_end_dd} :catchall_1e
+
+    return-void
+.end method
+
+.method public registerActivityWatcher(Landroid/app/IActivityWatcher;)V
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_8
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_a
+    .catchall {:try_start_1 .. :try_end_a} :catchall_8
+
+    throw v0
+.end method
+
+.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z
+
+    return-void
+.end method
+
+.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;)Landroid/content/Intent;
+    .registers 36
+
+    monitor-enter p0
+
+    const/4 v6, 0x0
+
+    if-eqz p1, :cond_79
+
+    :try_start_4
+    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v6
+
+    if-nez v6, :cond_42
+
+    new-instance v5, Ljava/lang/SecurityException;
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Unable to find app for caller "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " (pid="
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v10
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, ") when registering receiver "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-direct {v5, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v5
+
+    :catchall_3f
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_41
+    .catchall {:try_start_4 .. :try_end_41} :catchall_3f
+
+    throw v5
+
+    :cond_42
+    :try_start_42
+    iget-object v5, v6, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    const/16 v9, 0x3e8
+
+    if-eq v5, v9, :cond_7b
+
+    iget-object v5, v6, Lcom/android/server/am/ProcessRecord;->pkgList:Ljava/util/HashSet;
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v5, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z
+
+    move-result v5
+
+    if-nez v5, :cond_7b
+
+    new-instance v5, Ljava/lang/SecurityException;
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Given caller package "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v9, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    const-string v10, " is not running in process "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v9
+
+    invoke-direct {v5, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v5
+
+    :cond_79
+    const/16 p2, 0x0
+
+    :cond_7b
+    const/16 v25, 0x0
+
+    invoke-virtual/range {p4 .. p4}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;
+
+    move-result-object v24
+
+    if-eqz v24, :cond_9c
+
+    :goto_83
+    invoke-interface/range {v24 .. v24}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v5
+
+    if-eqz v5, :cond_a7
+
+    invoke-interface/range {v24 .. v24}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v23
+
+    check-cast v23, Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v23
+
+    move-object/from16 v2, p4
+
+    move-object/from16 v3, v25
+
+    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;)Ljava/util/List;
+
+    move-result-object v25
+
+    goto :goto_83
+
+    :cond_9c
+    const/4 v5, 0x0
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p4
+
+    move-object/from16 v2, v25
+
+    invoke-direct {v0, v5, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;)Ljava/util/List;
+
+    move-result-object v25
+
+    :cond_a7
+    if-eqz v25, :cond_b8
+
+    const/4 v5, 0x0
+
+    move-object/from16 v0, v25
+
+    invoke-interface {v0, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v5
+
+    check-cast v5, Landroid/content/Intent;
+
+    move-object/from16 v29, v5
+
+    :goto_b4
+    if-nez p3, :cond_bb
+
+    monitor-exit p0
+
+    :goto_b7
+    return-object v29
+
+    :cond_b8
+    const/16 v29, 0x0
+
+    goto :goto_b4
+
+    :cond_bb
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v9
+
+    invoke-virtual {v5, v9}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ReceiverList;
+
+    if-nez v4, :cond_f2
+
+    new-instance v4, Lcom/android/server/am/ReceiverList;
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v7
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v8
+
+    move-object/from16 v5, p0
+
+    move-object/from16 v9, p3
+
+    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IILandroid/content/IIntentReceiver;)V
+
+    iget-object v5, v4, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v5, :cond_16a
+
+    iget-object v5, v4, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->receivers:Ljava/util/HashSet;
+
+    invoke-virtual {v5, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
+
+    :goto_e7
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v9
+
+    invoke-virtual {v5, v9, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_f2
+    new-instance v26, Lcom/android/server/am/BroadcastFilter;
+
+    move-object/from16 v0, v26
+
+    move-object/from16 v1, p4
+
+    move-object/from16 v2, p2
+
+    move-object/from16 v3, p5
+
+    invoke-direct {v0, v1, v4, v2, v3}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, v26
+
+    invoke-virtual {v4, v0}, Lcom/android/server/am/ReceiverList;->add(Ljava/lang/Object;)Z
+
+    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/BroadcastFilter;->debugCheck()Z
+
+    move-result v5
+
+    if-nez v5, :cond_111
+
+    const-string v5, "ActivityManager"
+
+    const-string v9, "==> For Dynamic broadast"
+
+    invoke-static {v5, v9}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_111
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;
+
+    move-object/from16 v0, v26
+
+    invoke-virtual {v5, v0}, Lcom/android/server/IntentResolver;->addFilter(Landroid/content/IntentFilter;)V
+
+    if-eqz v25, :cond_17b
+
+    new-instance v14, Ljava/util/ArrayList;
+
+    invoke-direct {v14}, Ljava/util/ArrayList;-><init>()V
+
+    move-object/from16 v0, v26
+
+    invoke-virtual {v14, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    invoke-interface/range {v25 .. v25}, Ljava/util/List;->size()I
+
+    move-result v22
+
+    const/16 v28, 0x0
+
+    :goto_12c
+    move/from16 v0, v28
+
+    move/from16 v1, v22
+
+    if-ge v0, v1, :cond_17b
+
+    move-object/from16 v0, v25
+
+    move/from16 v1, v28
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v8
+
+    check-cast v8, Landroid/content/Intent;
+
+    new-instance v7, Lcom/android/server/am/BroadcastRecord;
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, -0x1
+
+    const/4 v12, -0x1
+
+    const/4 v13, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    const/16 v17, 0x0
+
+    const/16 v18, 0x0
+
+    const/16 v19, 0x0
+
+    const/16 v20, 0x1
+
+    const/16 v21, 0x1
+
+    invoke-direct/range {v7 .. v21}, Lcom/android/server/am/BroadcastRecord;-><init>(Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;Ljava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZ)V
+
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-nez v5, :cond_160
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    :cond_160
+    move-object/from16 v0, p0
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mParallelBroadcasts:Ljava/util/ArrayList;
+
+    invoke-virtual {v5, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+    :try_end_167
+    .catchall {:try_start_42 .. :try_end_167} :catchall_3f
+
+    add-int/lit8 v28, v28, 0x1
+
+    goto :goto_12c
+
+    :cond_16a
+    :try_start_16a
+    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v5
+
+    const/4 v9, 0x0
+
+    invoke-interface {v5, v4, v9}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
+    :try_end_172
+    .catchall {:try_start_16a .. :try_end_172} :catchall_3f
+    .catch Landroid/os/RemoteException; {:try_start_16a .. :try_end_172} :catch_177
+
+    const/4 v5, 0x1
+
+    :try_start_173
+    iput-boolean v5, v4, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z
+
+    goto/16 :goto_e7
+
+    :catch_177
+    move-exception v27
+
+    monitor-exit p0
+
+    goto/16 :goto_b7
+
+    :cond_17b
+    monitor-exit p0
+    :try_end_17c
+    .catchall {:try_start_173 .. :try_end_17c} :catchall_3f
+
+    goto/16 :goto_b7
+.end method
+
+.method removeConnectionLocked(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;)V
+    .registers 13
+
+    const/4 v8, 0x0
+
+    iget-object v5, p1, Lcom/android/server/am/ConnectionRecord;->conn:Landroid/app/IServiceConnection;
+
+    invoke-interface {v5}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v1
+
+    iget-object v0, p1, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v4, v0, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v5, v4, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v5, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Ljava/util/ArrayList;
+
+    if-eqz v2, :cond_23
+
+    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-nez v5, :cond_23
+
+    iget-object v5, v4, Lcom/android/server/am/ServiceRecord;->connections:Ljava/util/HashMap;
+
+    invoke-virtual {v5, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_23
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v5, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    iget-object v5, p1, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v5, :cond_3d
+
+    iget-object v5, p1, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;
+
+    if-eq v5, p3, :cond_3d
+
+    iget-object v5, p1, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityRecord;->connections:Ljava/util/HashSet;
+
+    if-eqz v5, :cond_3d
+
+    iget-object v5, p1, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v5, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    :cond_3d
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    if-eq v5, p2, :cond_53
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v5, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    iget v5, p1, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v5, v5, 0x8
+
+    if-eqz v5, :cond_53
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v5}, Lcom/android/server/am/ProcessRecord;->updateHasAboveClientLocked()V
+
+    :cond_53
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    invoke-virtual {v5, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Ljava/util/ArrayList;
+
+    if-eqz v2, :cond_6b
+
+    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-nez v5, :cond_6b
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    invoke-virtual {v5, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_6b
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->connections:Ljava/util/HashSet;
+
+    invoke-virtual {v5}, Ljava/util/HashSet;->size()I
+
+    move-result v5
+
+    if-nez v5, :cond_7c
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/IntentBindRecord;->apps:Ljava/util/HashMap;
+
+    iget-object v6, v0, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v5, v6}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    :cond_7c
+    iget-boolean v5, p1, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z
+
+    if-nez v5, :cond_c6
+
+    iget-object v5, v4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v5, :cond_bd
+
+    iget-object v5, v4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v5, :cond_bd
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/IntentBindRecord;->apps:Ljava/util/HashMap;
+
+    invoke-virtual {v5}, Ljava/util/HashMap;->size()I
+
+    move-result v5
+
+    if-nez v5, :cond_bd
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-boolean v5, v5, Lcom/android/server/am/IntentBindRecord;->hasBound:Z
+
+    if-eqz v5, :cond_bd
+
+    :try_start_9a
+    const-string v5, "unbind"
+
+    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->bumpServiceExecutingLocked(Lcom/android/server/am/ServiceRecord;Ljava/lang/String;)V
+
+    iget-object v5, v4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {p0, v5}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    const/4 v6, 0x0
+
+    iput-boolean v6, v5, Lcom/android/server/am/IntentBindRecord;->hasBound:Z
+
+    iget-object v5, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    const/4 v6, 0x0
+
+    iput-boolean v6, v5, Lcom/android/server/am/IntentBindRecord;->doRebind:Z
+
+    iget-object v5, v4, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    iget-object v6, v0, Lcom/android/server/am/AppBindRecord;->intent:Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v6, v6, Lcom/android/server/am/IntentBindRecord;->intent:Landroid/content/Intent$FilterComparison;
+
+    invoke-virtual {v6}, Landroid/content/Intent$FilterComparison;->getIntent()Landroid/content/Intent;
+
+    move-result-object v6
+
+    invoke-interface {v5, v4, v6}, Landroid/app/IApplicationThread;->scheduleUnbindService(Landroid/os/IBinder;Landroid/content/Intent;)V
+    :try_end_bd
+    .catch Ljava/lang/Exception; {:try_start_9a .. :try_end_bd} :catch_c7
+
+    :cond_bd
+    :goto_bd
+    iget v5, p1, Lcom/android/server/am/ConnectionRecord;->flags:I
+
+    and-int/lit8 v5, v5, 0x1
+
+    if-eqz v5, :cond_c6
+
+    invoke-direct {p0, v4, v8}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    :cond_c6
+    return-void
+
+    :catch_c7
+    move-exception v3
+
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Exception when unbinding service "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, v4, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    const/4 v5, 0x1
+
+    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    goto :goto_bd
+.end method
+
+.method public removeContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;)V
+    .registers 10
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    invoke-virtual {v4, p2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ContentProviderRecord;
+
+    if-nez v1, :cond_d
+
+    monitor-exit p0
+
+    :goto_c
+    return-void
+
+    :cond_d
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v3
+
+    if-nez v3, :cond_39
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Unable to find app for caller "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " when removing content provider "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :catchall_36
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_38
+    .catchall {:try_start_1 .. :try_end_38} :catchall_36
+
+    throw v4
+
+    :cond_39
+    :try_start_39
+    new-instance v0, Landroid/content/ComponentName;
+
+    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;
+
+    iget-object v5, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v0, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByClass:Ljava/util/HashMap;
+
+    invoke-virtual {v4, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ContentProviderRecord;
+
+    iget-object v4, v2, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v4, v3, :cond_7c
+
+    const-string v4, "ActivityManager"
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "removeContentProvider called on local provider: "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    iget-object v6, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " in process "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    goto :goto_c
+
+    :cond_7c
+    invoke-virtual {p0, v3, v2}, Lcom/android/server/am/ActivityManagerService;->decProviderCount(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_85
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_85
+    monitor-exit p0
+    :try_end_86
+    .catchall {:try_start_39 .. :try_end_86} :catchall_36
+
+    goto :goto_c
+.end method
+
+.method removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
+    .registers 6
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    iget-object v3, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;
+
+    invoke-interface {v3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v3
+
+    invoke-virtual {v2, v3}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    invoke-virtual {p1}, Lcom/android/server/am/ReceiverList;->size()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    :goto_10
+    if-ge v1, v0, :cond_20
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;
+
+    invoke-virtual {p1, v1}, Lcom/android/server/am/ReceiverList;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/IntentFilter;
+
+    invoke-virtual {v3, v2}, Lcom/android/server/IntentResolver;->removeFilter(Landroid/content/IntentFilter;)V
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_10
+
+    :cond_20
+    return-void
+.end method
+
+.method public removeSubTask(II)Z
+    .registers 7
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v2, "android.permission.REMOVE_TASKS"
+
+    const-string v3, "removeSubTask()"
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+    :try_end_b
+    .catchall {:try_start_1 .. :try_end_b} :catchall_21
+
+    move-result-wide v0
+
+    :try_start_c
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ActivityStack;->removeTaskActivitiesLocked(II)Lcom/android/server/am/ActivityRecord;
+    :try_end_11
+    .catchall {:try_start_c .. :try_end_11} :catchall_1c
+
+    move-result-object v2
+
+    if-eqz v2, :cond_1a
+
+    const/4 v2, 0x1
+
+    :goto_15
+    :try_start_15
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return v2
+
+    :cond_1a
+    const/4 v2, 0x0
+
+    goto :goto_15
+
+    :catchall_1c
+    move-exception v2
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v2
+
+    :catchall_21
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_23
+    .catchall {:try_start_15 .. :try_end_23} :catchall_21
+
+    throw v2
+.end method
+
+.method public removeTask(II)Z
+    .registers 13
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    monitor-enter p0
+
+    :try_start_3
+    const-string v8, "android.permission.REMOVE_TASKS"
+
+    const-string v9, "removeTask()"
+
+    invoke-virtual {p0, v8, v9}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+    :try_end_d
+    .catchall {:try_start_3 .. :try_end_d} :catchall_90
+
+    move-result-wide v1
+
+    :try_start_e
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v9, -0x1
+
+    invoke-virtual {v8, p1, v9}, Lcom/android/server/am/ActivityStack;->removeTaskActivitiesLocked(II)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_2b
+
+    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    iget-object v9, v3, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    invoke-virtual {v8, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    and-int/lit8 v8, p2, 0x1
+
+    if-eqz v8, :cond_23
+
+    move v7, v6
+
+    :cond_23
+    invoke-direct {p0, v3, v7}, Lcom/android/server/am/ActivityManagerService;->cleanUpRemovedTaskLocked(Lcom/android/server/am/ActivityRecord;Z)V
+    :try_end_26
+    .catchall {:try_start_e .. :try_end_26} :catchall_8b
+
+    :try_start_26
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_2a
+    .catchall {:try_start_26 .. :try_end_2a} :catchall_90
+
+    :goto_2a
+    return v6
+
+    :cond_2b
+    const/4 v5, 0x0
+
+    const/4 v0, 0x0
+
+    :goto_2d
+    :try_start_2d
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    if-ge v0, v6, :cond_42
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/TaskRecord;
+
+    iget v6, v4, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    if-ne v6, p1, :cond_53
+
+    move-object v5, v4
+
+    :cond_42
+    if-eqz v5, :cond_4d
+
+    iget v6, v5, Lcom/android/server/am/TaskRecord;->numActivities:I
+
+    if-gtz v6, :cond_56
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;
+
+    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+    :try_end_4d
+    .catchall {:try_start_2d .. :try_end_4d} :catchall_8b
+
+    :cond_4d
+    :goto_4d
+    :try_start_4d
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_51
+    .catchall {:try_start_4d .. :try_end_51} :catchall_90
+
+    move v6, v7
+
+    goto :goto_2a
+
+    :cond_53
+    add-int/lit8 v0, v0, 0x1
+
+    goto :goto_2d
+
+    :cond_56
+    :try_start_56
+    const-string v6, "ActivityManager"
+
+    new-instance v8, Ljava/lang/StringBuilder;
+
+    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v9, "removeTask: task "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, " does not have activities to remove, "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, " but numActivities="
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    iget v9, v5, Lcom/android/server/am/TaskRecord;->numActivities:I
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    const-string v9, ": "
+
+    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v8
+
+    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v8
+
+    invoke-static {v6, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_8a
+    .catchall {:try_start_56 .. :try_end_8a} :catchall_8b
+
+    goto :goto_4d
+
+    :catchall_8b
+    move-exception v6
+
+    :try_start_8c
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v6
+
+    :catchall_90
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_92
+    .catchall {:try_start_8c .. :try_end_92} :catchall_90
+
+    throw v6
+.end method
+
+.method removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V
+    .registers 5
+
+    iget v1, p1, Lcom/android/server/am/UriPermission;->modeFlags:I
+
+    and-int/lit8 v1, v1, 0x3
+
+    if-nez v1, :cond_24
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    iget v2, p1, Lcom/android/server/am/UriPermission;->uid:I
+
+    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Ljava/util/HashMap;
+
+    if-eqz v0, :cond_24
+
+    iget-object v1, p1, Lcom/android/server/am/UriPermission;->uri:Landroid/net/Uri;
+
+    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;
+
+    invoke-virtual {v0}, Ljava/util/HashMap;->size()I
+
+    move-result v1
+
+    if-nez v1, :cond_24
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;
+
+    iget v2, p1, Lcom/android/server/am/UriPermission;->uid:I
+
+    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->remove(I)V
+
+    :cond_24
+    return-void
+.end method
+
+.method reportResumedActivityLocked(Lcom/android/server/am/ActivityRecord;)V
+    .registers 6
+
+    invoke-static {p1}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I
+
+    move-result v1
+
+    const/4 v3, 0x1
+
+    invoke-virtual {p0, p1, v3}, Lcom/android/server/am/ActivityManagerService;->updateUsageStats(Lcom/android/server/am/ActivityRecord;Z)V
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->beginBroadcast()I
+
+    move-result v0
+
+    :cond_e
+    :goto_e
+    if-lez v0, :cond_22
+
+    add-int/lit8 v0, v0, -0x1
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v3, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/app/IActivityWatcher;
+
+    if-eqz v2, :cond_e
+
+    :try_start_1c
+    invoke-interface {v2, v1}, Landroid/app/IActivityWatcher;->activityResuming(I)V
+    :try_end_1f
+    .catch Landroid/os/RemoteException; {:try_start_1c .. :try_end_1f} :catch_20
+
+    goto :goto_e
+
+    :catch_20
+    move-exception v3
+
+    goto :goto_e
+
+    :cond_22
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->finishBroadcast()V
+
+    return-void
+.end method
+
+.method public reportThumbnail(Landroid/os/IBinder;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
+    .registers 12
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v6
+
+    const/4 v1, 0x0
+
+    const/4 v5, 0x1
+
+    move-object v0, p0
+
+    move-object v2, p1
+
+    move-object v3, p2
+
+    move-object v4, p3
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->sendPendingThumbnail(Lcom/android/server/am/ActivityRecord;Landroid/os/IBinder;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;Z)V
+
+    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+.end method
+
+.method public resumeAppSwitches()V
+    .registers 3
+
+    const-string v0, "android.permission.STOP_APP_SWITCHES"
+
+    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v0
+
+    if-eqz v0, :cond_10
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    const-string v1, "Requires permission android.permission.STOP_APP_SWITCHES"
+
+    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_10
+    monitor-enter p0
+
+    const-wide/16 v0, 0x0
+
+    :try_start_13
+    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_17
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_19
+    .catchall {:try_start_13 .. :try_end_19} :catchall_17
+
+    throw v0
+.end method
+
+.method public revokeUriPermission(Landroid/app/IApplicationThread;Landroid/net/Uri;I)V
+    .registers 12
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v4
+
+    if-nez v4, :cond_2d
+
+    new-instance v5, Ljava/lang/SecurityException;
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "Unable to find app for caller "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " when revoking permission to uri "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v5
+
+    :catchall_2a
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_2c
+    .catchall {:try_start_1 .. :try_end_2c} :catchall_2a
+
+    throw v5
+
+    :cond_2d
+    if-nez p2, :cond_38
+
+    :try_start_2f
+    const-string v5, "ActivityManager"
+
+    const-string v6, "revokeUriPermission: null uri"
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    :goto_37
+    return-void
+
+    :cond_38
+    and-int/lit8 p3, p3, 0x3
+
+    if-nez p3, :cond_3e
+
+    monitor-exit p0
+
+    goto :goto_37
+
+    :cond_3e
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    invoke-virtual {p2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v0
+
+    const/4 v2, 0x0
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProvidersByName:Ljava/util/HashMap;
+
+    invoke-virtual {v5, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ContentProviderRecord;
+
+    if-eqz v1, :cond_73
+
+    iget-object v2, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;
+
+    :goto_53
+    if-nez v2, :cond_7a
+
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "No content provider found for permission revoke: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+    :try_end_72
+    .catchall {:try_start_2f .. :try_end_72} :catchall_2a
+
+    goto :goto_37
+
+    :cond_73
+    const/16 v5, 0x800
+
+    :try_start_75
+    invoke-interface {v3, v0, v5}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
+    :try_end_78
+    .catchall {:try_start_75 .. :try_end_78} :catchall_2a
+    .catch Landroid/os/RemoteException; {:try_start_75 .. :try_end_78} :catch_83
+
+    move-result-object v2
+
+    goto :goto_53
+
+    :cond_7a
+    :try_start_7a
+    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-direct {p0, v5, p2, p3}, Lcom/android/server/am/ActivityManagerService;->revokeUriPermissionLocked(ILandroid/net/Uri;I)V
+
+    monitor-exit p0
+    :try_end_82
+    .catchall {:try_start_7a .. :try_end_82} :catchall_2a
+
+    goto :goto_37
+
+    :catch_83
+    move-exception v5
+
+    goto :goto_53
+.end method
+
+.method public revokeUriPermissionFromOwner(Landroid/os/IBinder;Landroid/net/Uri;I)V
+    .registers 8
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;
+
+    move-result-object v0
+
+    if-nez v0, :cond_23
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "Unknown owner: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :catchall_20
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_22
+    .catchall {:try_start_1 .. :try_end_22} :catchall_20
+
+    throw v1
+
+    :cond_23
+    if-nez p2, :cond_2a
+
+    :try_start_25
+    invoke-virtual {v0, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionsLocked(I)V
+
+    :goto_28
+    monitor-exit p0
+
+    return-void
+
+    :cond_2a
+    invoke-virtual {v0, p2, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionLocked(Landroid/net/Uri;I)V
+    :try_end_2d
+    .catchall {:try_start_25 .. :try_end_2d} :catchall_20
+
+    goto :goto_28
+.end method
+
+.method final scheduleAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
+    .registers 8
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    const-wide/32 v4, 0xea60
+
+    add-long/2addr v2, v4
+
+    cmp-long v2, v2, v0
+
+    if-lez v2, :cond_f
+
+    :cond_e
+    :goto_e
+    return-void
+
+    :cond_f
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_e
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V
+
+    goto :goto_e
+.end method
+
+.method final scheduleAppGcsLocked()V
+    .registers 13
+
+    const-wide/16 v10, 0x1388
+
+    const/4 v8, 0x5
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v6, v8}, Landroid/os/Handler;->removeMessages(I)V
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    if-lez v6, :cond_37
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v6, v8}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v0
+
+    iget-wide v6, v3, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
+
+    const-wide/32 v8, 0xea60
+
+    add-long v4, v6, v8
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    add-long v6, v1, v10
+
+    cmp-long v6, v4, v6
+
+    if-gez v6, :cond_32
+
+    add-long v4, v1, v10
+
+    :cond_32
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v6, v0, v4, v5}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z
+
+    :cond_37
+    return-void
+.end method
+
+.method final sendPendingThumbnail(Lcom/android/server/am/ActivityRecord;Landroid/os/IBinder;Landroid/graphics/Bitmap;Ljava/lang/CharSequence;Z)V
+    .registers 15
+
+    const/4 v6, 0x0
+
+    const/4 v4, 0x0
+
+    monitor-enter p0
+
+    if-nez p1, :cond_f
+
+    :try_start_5
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v7, p2}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object p1
+
+    if-nez p1, :cond_f
+
+    monitor-exit p0
+
+    :goto_e
+    return-void
+
+    :cond_f
+    if-nez p3, :cond_1d
+
+    iget-object v7, p1, Lcom/android/server/am/ActivityRecord;->thumbHolder:Lcom/android/server/am/ThumbnailHolder;
+
+    if-eqz v7, :cond_1d
+
+    iget-object v7, p1, Lcom/android/server/am/ActivityRecord;->thumbHolder:Lcom/android/server/am/ThumbnailHolder;
+
+    iget-object p3, v7, Lcom/android/server/am/ThumbnailHolder;->lastThumbnail:Landroid/graphics/Bitmap;
+
+    iget-object v7, p1, Lcom/android/server/am/ActivityRecord;->thumbHolder:Lcom/android/server/am/ThumbnailHolder;
+
+    iget-object p4, v7, Lcom/android/server/am/ThumbnailHolder;->lastDescription:Ljava/lang/CharSequence;
+
+    :cond_1d
+    if-nez p3, :cond_26
+
+    if-nez p5, :cond_26
+
+    monitor-exit p0
+
+    goto :goto_e
+
+    :catchall_23
+    move-exception v7
+
+    :goto_24
+    monitor-exit p0
+    :try_end_25
+    .catchall {:try_start_5 .. :try_end_25} :catchall_23
+
+    throw v7
+
+    :cond_26
+    :try_start_26
+    iget-object v6, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingThumbnails:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+    :try_end_2d
+    .catchall {:try_start_26 .. :try_end_2d} :catchall_23
+
+    move-result v0
+
+    const/4 v2, 0x0
+
+    move-object v5, v4
+
+    :goto_30
+    if-ge v2, v0, :cond_65
+
+    :try_start_32
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingThumbnails:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/PendingThumbnailsRecord;
+
+    iget-object v7, v3, Lcom/android/server/am/PendingThumbnailsRecord;->pendingRecords:Ljava/util/HashSet;
+
+    invoke-virtual {v7, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    move-result v7
+
+    if-eqz v7, :cond_60
+
+    if-nez v5, :cond_9b
+
+    new-instance v4, Ljava/util/ArrayList;
+
+    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V
+    :try_end_49
+    .catchall {:try_start_32 .. :try_end_49} :catchall_98
+
+    :goto_49
+    :try_start_49
+    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    iget-object v7, v3, Lcom/android/server/am/PendingThumbnailsRecord;->pendingRecords:Ljava/util/HashSet;
+
+    invoke-virtual {v7}, Ljava/util/HashSet;->size()I
+
+    move-result v7
+
+    if-nez v7, :cond_61
+
+    const/4 v7, 0x1
+
+    iput-boolean v7, v3, Lcom/android/server/am/PendingThumbnailsRecord;->finished:Z
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingThumbnails:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+    :try_end_5c
+    .catchall {:try_start_49 .. :try_end_5c} :catchall_23
+
+    add-int/lit8 v0, v0, -0x1
+
+    move-object v5, v4
+
+    goto :goto_30
+
+    :cond_60
+    move-object v4, v5
+
+    :cond_61
+    add-int/lit8 v2, v2, 0x1
+
+    move-object v5, v4
+
+    goto :goto_30
+
+    :cond_65
+    :try_start_65
+    monitor-exit p0
+    :try_end_66
+    .catchall {:try_start_65 .. :try_end_66} :catchall_98
+
+    if-eqz v5, :cond_95
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v2, 0x0
+
+    :goto_6d
+    if-ge v2, v0, :cond_95
+
+    :try_start_6f
+    invoke-virtual {v5, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/PendingThumbnailsRecord;
+
+    iget-object v8, v3, Lcom/android/server/am/PendingThumbnailsRecord;->receiver:Landroid/app/IThumbnailReceiver;
+
+    if-eqz v6, :cond_8a
+
+    iget v7, v6, Lcom/android/server/am/TaskRecord;->taskId:I
+
+    :goto_7b
+    invoke-interface {v8, v7, p3, p4}, Landroid/app/IThumbnailReceiver;->newThumbnail(ILandroid/graphics/Bitmap;Ljava/lang/CharSequence;)V
+
+    iget-boolean v7, v3, Lcom/android/server/am/PendingThumbnailsRecord;->finished:Z
+
+    if-eqz v7, :cond_87
+
+    iget-object v7, v3, Lcom/android/server/am/PendingThumbnailsRecord;->receiver:Landroid/app/IThumbnailReceiver;
+
+    invoke-interface {v7}, Landroid/app/IThumbnailReceiver;->finished()V
+    :try_end_87
+    .catch Ljava/lang/Exception; {:try_start_6f .. :try_end_87} :catch_8c
+
+    :cond_87
+    :goto_87
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_6d
+
+    :cond_8a
+    const/4 v7, -0x1
+
+    goto :goto_7b
+
+    :catch_8c
+    move-exception v1
+
+    const-string v7, "ActivityManager"
+
+    const-string v8, "Exception thrown when sending thumbnail"
+
+    invoke-static {v7, v8, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_87
+
+    :cond_95
+    move-object v4, v5
+
+    goto/16 :goto_e
+
+    :catchall_98
+    move-exception v7
+
+    move-object v4, v5
+
+    goto :goto_24
+
+    :cond_9b
+    move-object v4, v5
+
+    goto :goto_49
+.end method
+
+.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
+    .registers 14
+
+    const/4 v7, 0x1
+
+    monitor-enter p0
+
+    :try_start_2
+    instance-of v6, p1, Lcom/android/server/am/ServiceRecord;
+
+    if-nez v6, :cond_11
+
+    new-instance v6, Ljava/lang/IllegalArgumentException;
+
+    const-string v7, "Invalid service token"
+
+    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :catchall_e
+    move-exception v6
+
+    monitor-exit p0
+    :try_end_10
+    .catchall {:try_start_2 .. :try_end_10} :catchall_e
+
+    throw v6
+
+    :cond_11
+    :try_start_11
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord;
+
+    move-object v4, v0
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v6, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v4, :cond_af
+
+    if-eq v4, p1, :cond_4f
+
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Done executing service "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    iget-object v8, v4, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, " with incorrect token: given "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    const-string v8, ", expected "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    :goto_4e
+    return-void
+
+    :cond_4f
+    if-ne p2, v7, :cond_7c
+
+    const/4 v6, 0x1
+
+    iput-boolean v6, v4, Lcom/android/server/am/ServiceRecord;->callStart:Z
+
+    sparse-switch p4, :sswitch_data_cc
+
+    new-instance v6, Ljava/lang/IllegalArgumentException;
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Unknown service start result: "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7, p4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-direct {v6, v7}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v6
+
+    :sswitch_70
+    const/4 v6, 0x1
+
+    invoke-virtual {v4, p3, v6}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZ)Lcom/android/server/am/ServiceRecord$StartItem;
+
+    const/4 v6, 0x0
+
+    iput-boolean v6, v4, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z
+
+    :cond_77
+    :goto_77
+    if-nez p4, :cond_7c
+
+    const/4 v6, 0x0
+
+    iput-boolean v6, v4, Lcom/android/server/am/ServiceRecord;->callStart:Z
+
+    :cond_7c
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v2
+
+    invoke-virtual {p0, v4, v1}, Lcom/android/server/am/ActivityManagerService;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :goto_86
+    monitor-exit p0
+
+    goto :goto_4e
+
+    :sswitch_88
+    const/4 v6, 0x1
+
+    invoke-virtual {v4, p3, v6}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZ)Lcom/android/server/am/ServiceRecord$StartItem;
+
+    invoke-virtual {v4}, Lcom/android/server/am/ServiceRecord;->getLastStartId()I
+
+    move-result v6
+
+    if-ne v6, p3, :cond_77
+
+    const/4 v6, 0x1
+
+    iput-boolean v6, v4, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z
+
+    goto :goto_77
+
+    :sswitch_96
+    const/4 v6, 0x0
+
+    invoke-virtual {v4, p3, v6}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZ)Lcom/android/server/am/ServiceRecord$StartItem;
+
+    move-result-object v5
+
+    if-eqz v5, :cond_77
+
+    const/4 v6, 0x0
+
+    iput v6, v5, Lcom/android/server/am/ServiceRecord$StartItem;->deliveryCount:I
+
+    iget v6, v5, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I
+
+    add-int/lit8 v6, v6, 0x1
+
+    iput v6, v5, Lcom/android/server/am/ServiceRecord$StartItem;->doneExecutingCount:I
+
+    const/4 v6, 0x1
+
+    iput-boolean v6, v4, Lcom/android/server/am/ServiceRecord;->stopIfKilled:Z
+
+    goto :goto_77
+
+    :sswitch_aa
+    const/4 v6, 0x1
+
+    invoke-virtual {v4, p3, v6}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZ)Lcom/android/server/am/ServiceRecord$StartItem;
+
+    goto :goto_77
+
+    :cond_af
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Done executing unknown service from pid "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v8
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_cb
+    .catchall {:try_start_11 .. :try_end_cb} :catchall_e
+
+    goto :goto_86
+
+    :sswitch_data_cc
+    .sparse-switch
+        0x0 -> :sswitch_70
+        0x1 -> :sswitch_70
+        0x2 -> :sswitch_88
+        0x3 -> :sswitch_96
+        0x3e8 -> :sswitch_aa
+    .end sparse-switch
+.end method
+
+.method public serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+    .registers 6
+
+    iget v0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    add-int/lit8 v0, v0, -0x1
+
+    iput v0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    iget v0, p1, Lcom/android/server/am/ServiceRecord;->executeNesting:I
+
+    if-gtz v0, :cond_39
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v0, :cond_39
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v0, p1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v0}, Ljava/util/HashSet;->size()I
+
+    move-result v0
+
+    if-nez v0, :cond_28
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v1, 0xc
+
+    iget-object v2, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v0, v1, v2}, Landroid/os/Handler;->removeMessages(ILjava/lang/Object;)V
+
+    :cond_28
+    if-eqz p2, :cond_34
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z
+
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V
+
+    :cond_34
+    iget-object v0, p1, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    :cond_39
+    return-void
+.end method
+
+.method serviceTimeout(Lcom/android/server/am/ProcessRecord;)V
+    .registers 15
+
+    const/4 v0, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->size()I
+
+    move-result v9
+
+    if-eqz v9, :cond_e
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v9, :cond_10
+
+    :cond_e
+    monitor-exit p0
+
+    :cond_f
+    :goto_f
+    return-void
+
+    :cond_10
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v9
+
+    const-wide/16 v11, 0x4e20
+
+    sub-long v2, v9, v11
+
+    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->executingServices:Ljava/util/HashSet;
+
+    invoke-virtual {v9}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v1
+
+    const/4 v8, 0x0
+
+    const-wide/16 v5, 0x0
+
+    :cond_21
+    :goto_21
+    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v9
+
+    if-eqz v9, :cond_34
+
+    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v7
+
+    check-cast v7, Lcom/android/server/am/ServiceRecord;
+
+    iget-wide v9, v7, Lcom/android/server/am/ServiceRecord;->executingStart:J
+
+    cmp-long v9, v9, v2
+
+    if-gez v9, :cond_74
+
+    move-object v8, v7
+
+    :cond_34
+    if-eqz v8, :cond_7d
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v9
+
+    if-eqz v9, :cond_7d
+
+    const-string v9, "ActivityManager"
+
+    new-instance v10, Ljava/lang/StringBuilder;
+
+    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v11, "Timeout executing service: "
+
+    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v10
+
+    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v9, Ljava/lang/StringBuilder;
+
+    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v10, "Executing service "
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    iget-object v10, v8, Lcom/android/server/am/ServiceRecord;->shortName:Ljava/lang/String;
+
+    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v9
+
+    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v0
+
+    :goto_6b
+    monitor-exit p0
+    :try_end_6c
+    .catchall {:try_start_2 .. :try_end_6c} :catchall_90
+
+    if-eqz v0, :cond_f
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    invoke-virtual {p0, p1, v9, v10, v0}, Lcom/android/server/am/ActivityManagerService;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
+
+    goto :goto_f
+
+    :cond_74
+    :try_start_74
+    iget-wide v9, v7, Lcom/android/server/am/ServiceRecord;->executingStart:J
+
+    cmp-long v9, v9, v5
+
+    if-lez v9, :cond_21
+
+    iget-wide v5, v7, Lcom/android/server/am/ServiceRecord;->executingStart:J
+
+    goto :goto_21
+
+    :cond_7d
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v10, 0xc
+
+    invoke-virtual {v9, v10}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v4
+
+    iput-object p1, v4, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const-wide/16 v10, 0x4e20
+
+    add-long/2addr v10, v5
+
+    invoke-virtual {v9, v4, v10, v11}, Landroid/os/Handler;->sendMessageAtTime(Landroid/os/Message;J)Z
+
+    goto :goto_6b
+
+    :catchall_90
+    move-exception v9
+
+    monitor-exit p0
+    :try_end_92
+    .catchall {:try_start_74 .. :try_end_92} :catchall_90
+
+    throw v9
+.end method
+
+.method public setActivityController(Landroid/app/IActivityController;)V
+    .registers 4
+
+    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"
+
+    const-string v1, "setActivityController()"
+
+    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    :try_start_8
+    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_c
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_e
+    .catchall {:try_start_8 .. :try_end_e} :catchall_c
+
+    throw v0
+.end method
+
+.method public setAlwaysFinish(Z)V
+    .registers 5
+
+    const-string v0, "android.permission.SET_ALWAYS_FINISH"
+
+    const-string v1, "setAlwaysFinish()"
+
+    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v1
+
+    const-string v2, "always_finish_activities"
+
+    if-eqz p1, :cond_1a
+
+    const/4 v0, 0x1
+
+    :goto_12
+    invoke-static {v1, v2, v0}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
+
+    monitor-enter p0
+
+    :try_start_16
+    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
+
+    monitor-exit p0
+
+    return-void
+
+    :cond_1a
+    const/4 v0, 0x0
+
+    goto :goto_12
+
+    :catchall_1c
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_1e
+    .catchall {:try_start_16 .. :try_end_1e} :catchall_1c
+
+    throw v0
+.end method
+
+.method public setDebugApp(Ljava/lang/String;ZZ)V
+    .registers 14
+
+    const/4 v1, 0x1
+
+    const/4 v2, 0x0
+
+    const-string v0, "android.permission.SET_DEBUG_APP"
+
+    const-string v3, "setDebugApp()"
+
+    invoke-virtual {p0, v0, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    if-eqz p3, :cond_1e
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v9
+
+    const-string v0, "debug_app"
+
+    invoke-static {v9, v0, p1}, Landroid/provider/Settings$System;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z
+
+    const-string v3, "wait_for_debugger"
+
+    if-eqz p2, :cond_46
+
+    move v0, v1
+
+    :goto_1b
+    invoke-static {v9, v3, v0}, Landroid/provider/Settings$System;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z
+
+    :cond_1e
+    monitor-enter p0
+
+    if-nez p3, :cond_29
+
+    :try_start_21
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z
+
+    :cond_29
+    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;
+
+    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z
+
+    if-nez p3, :cond_48
+
+    :goto_2f
+    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z
+
+    if-eqz p1, :cond_44
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v7
+
+    const/4 v2, -0x1
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x1
+
+    const/4 v6, 0x1
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :cond_44
+    monitor-exit p0
+
+    return-void
+
+    :cond_46
+    move v0, v2
+
+    goto :goto_1b
+
+    :cond_48
+    move v1, v2
+
+    goto :goto_2f
+
+    :catchall_4a
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_4c
+    .catchall {:try_start_21 .. :try_end_4c} :catchall_4a
+
+    throw v0
+.end method
+
+.method final setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;)V
+    .registers 5
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eq v0, p1, :cond_10
+
+    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz p1, :cond_10
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    const/4 v2, 0x1
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->setFocusedApp(Landroid/os/IBinder;Z)V
+
+    :cond_10
+    return-void
+.end method
+
+.method public setFrontActivityScreenCompatMode(I)V
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->setFrontActivityScreenCompatModeLocked(I)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_8
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_a
+    .catchall {:try_start_1 .. :try_end_a} :catchall_8
+
+    throw v0
+.end method
+
+.method public setImmersive(Landroid/os/IBinder;Z)V
+    .registers 5
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v0
+
+    if-nez v0, :cond_12
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V
+
+    throw v1
+
+    :catchall_f
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_11
+    .catchall {:try_start_1 .. :try_end_11} :catchall_f
+
+    throw v1
+
+    :cond_12
+    :try_start_12
+    iput-boolean p2, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z
+
+    monitor-exit p0
+    :try_end_15
+    .catchall {:try_start_12 .. :try_end_15} :catchall_f
+
+    return-void
+.end method
+
+.method public setPackageAskScreenCompat(Ljava/lang/String;Z)V
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageAskCompatModeLocked(Ljava/lang/String;Z)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_8
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_a
+    .catchall {:try_start_1 .. :try_end_a} :catchall_8
+
+    throw v0
+.end method
+
+.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
+    .registers 4
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;
+
+    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageScreenCompatModeLocked(Ljava/lang/String;I)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_8
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_a
+    .catchall {:try_start_1 .. :try_end_a} :catchall_8
+
+    throw v0
+.end method
+
+.method public setProcessForeground(Landroid/os/IBinder;IZ)V
+    .registers 12
+
+    const-string v4, "android.permission.SET_PROCESS_LIMIT"
+
+    const-string v5, "setProcessForeground()"
+
+    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    const/4 v0, 0x0
+
+    :try_start_9
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v5
+    :try_end_c
+    .catchall {:try_start_9 .. :try_end_c} :catchall_6b
+
+    :try_start_c
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Lcom/android/server/am/ProcessRecord;
+
+    if-nez v3, :cond_31
+
+    const-string v4, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "setProcessForeground called on unknown pid: "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit v5
+    :try_end_2f
+    .catchall {:try_start_c .. :try_end_2f} :catchall_6e
+
+    :try_start_2f
+    monitor-exit p0
+    :try_end_30
+    .catchall {:try_start_2f .. :try_end_30} :catchall_6b
+
+    :goto_30
+    return-void
+
+    :cond_31
+    :try_start_31
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;
+
+    if-eqz v2, :cond_4a
+
+    iget-object v4, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;
+
+    const/4 v6, 0x0
+
+    invoke-interface {v4, v2, v6}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->remove(I)V
+
+    const/4 v4, 0x0
+
+    iput-object v4, v3, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+
+    const/4 v0, 0x1
+
+    :cond_4a
+    if-eqz p3, :cond_63
+
+    if-eqz p1, :cond_63
+
+    new-instance v1, Lcom/android/server/am/ActivityManagerService$8;
+
+    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;)V
+
+    iput p2, v1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I
+
+    iput-object p1, v1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;
+    :try_end_57
+    .catchall {:try_start_31 .. :try_end_57} :catchall_6e
+
+    const/4 v4, 0x0
+
+    :try_start_58
+    invoke-interface {p1, v1, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;
+
+    invoke-virtual {v4, p2, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V
+
+    iput-object p1, v3, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
+    :try_end_62
+    .catchall {:try_start_58 .. :try_end_62} :catchall_6e
+    .catch Landroid/os/RemoteException; {:try_start_58 .. :try_end_62} :catch_71
+
+    const/4 v0, 0x1
+
+    :cond_63
+    :goto_63
+    :try_start_63
+    monitor-exit v5
+    :try_end_64
+    .catchall {:try_start_63 .. :try_end_64} :catchall_6e
+
+    if-eqz v0, :cond_69
+
+    :try_start_66
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_69
+    monitor-exit p0
+
+    goto :goto_30
+
+    :catchall_6b
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_6d
+    .catchall {:try_start_66 .. :try_end_6d} :catchall_6b
+
+    throw v4
+
+    :catchall_6e
+    move-exception v4
+
+    :try_start_6f
+    monitor-exit v5
+    :try_end_70
+    .catchall {:try_start_6f .. :try_end_70} :catchall_6e
+
+    :try_start_70
+    throw v4
+    :try_end_71
+    .catchall {:try_start_70 .. :try_end_71} :catchall_6b
+
+    :catch_71
+    move-exception v4
+
+    goto :goto_63
+.end method
+
+.method public setProcessLimit(I)V
+    .registers 4
+
+    const-string v0, "android.permission.SET_PROCESS_LIMIT"
+
+    const-string v1, "setProcessLimit()"
+
+    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    if-gez p1, :cond_15
+
+    const/16 v0, 0xf
+
+    :goto_c
+    :try_start_c
+    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I
+
+    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I
+
+    monitor-exit p0
+    :try_end_11
+    .catchall {:try_start_c .. :try_end_11} :catchall_17
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
+
+    return-void
+
+    :cond_15
+    move v0, p1
+
+    goto :goto_c
+
+    :catchall_17
+    move-exception v0
+
+    :try_start_18
+    monitor-exit p0
+    :try_end_19
+    .catchall {:try_start_18 .. :try_end_19} :catchall_17
+
+    throw v0
+.end method
+
+.method setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Ljava/lang/String;Landroid/os/ParcelFileDescriptor;Z)V
+    .registers 10
+
+    monitor-enter p0
+
+    :try_start_1
+    const-string v1, "1"
+
+    const-string v2, "ro.debuggable"
+
+    const-string v3, "0"
+
+    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v0
+
+    if-nez v0, :cond_35
+
+    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v1, v1, 0x2
+
+    if-nez v1, :cond_35
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "Process not debuggable: "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :catchall_32
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_34
+    .catchall {:try_start_1 .. :try_end_34} :catchall_32
+
+    throw v1
+
+    :cond_35
+    :try_start_35
+    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;
+
+    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+    :try_end_3b
+    .catchall {:try_start_35 .. :try_end_3b} :catchall_32
+
+    if-eqz v1, :cond_45
+
+    :try_start_3d
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->close()V
+    :try_end_42
+    .catchall {:try_start_3d .. :try_end_42} :catchall_32
+    .catch Ljava/io/IOException; {:try_start_3d .. :try_end_42} :catch_4e
+
+    :goto_42
+    const/4 v1, 0x0
+
+    :try_start_43
+    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    :cond_45
+    iput-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
+
+    const/4 v1, 0x0
+
+    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I
+
+    iput-boolean p5, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z
+
+    monitor-exit p0
+    :try_end_4d
+    .catchall {:try_start_43 .. :try_end_4d} :catchall_32
+
+    return-void
+
+    :catch_4e
+    move-exception v1
+
+    goto :goto_42
+.end method
+
+.method public setRequestedOrientation(Landroid/os/IBinder;I)V
+    .registers 11
+
+    const/4 v4, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5, p1}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v3
+
+    if-nez v3, :cond_c
+
+    monitor-exit p0
+
+    :goto_b
+    return-void
+
+    :cond_c
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v1
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    iget-object v6, v3, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    invoke-virtual {v5, v6, p2}, Lcom/android/server/wm/WindowManagerService;->setAppOrientation(Landroid/view/IApplicationToken;I)V
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget-object v7, v3, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-virtual {v3, v7}, Lcom/android/server/am/ActivityRecord;->mayFreezeScreenLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    move-result v7
+
+    if-eqz v7, :cond_25
+
+    iget-object v4, v3, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    :cond_25
+    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_3c
+
+    const/4 v4, 0x1
+
+    iput-boolean v4, v3, Lcom/android/server/am/ActivityRecord;->frozenBeforeDestroy:Z
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    invoke-virtual {p0, v0, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
+
+    move-result v4
+
+    if-nez v4, :cond_3c
+
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    :cond_3c
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    goto :goto_b
+
+    :catchall_41
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_43
+    .catchall {:try_start_2 .. :try_end_43} :catchall_41
+
+    throw v4
+.end method
+
+.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
+    .registers 12
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    :try_start_4
+    monitor-enter p0
+    :try_end_5
+    .catchall {:try_start_4 .. :try_end_5} :catchall_1a
+
+    :try_start_5
+    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->findServiceLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)Lcom/android/server/am/ServiceRecord;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_40
+
+    if-eqz p3, :cond_45
+
+    if-nez p4, :cond_1f
+
+    new-instance v3, Ljava/lang/IllegalArgumentException;
+
+    const-string v4, "null notification"
+
+    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :catchall_17
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_19
+    .catchall {:try_start_5 .. :try_end_19} :catchall_17
+
+    :try_start_19
+    throw v3
+    :try_end_1a
+    .catchall {:try_start_19 .. :try_end_1a} :catchall_1a
+
+    :catchall_1a
+    move-exception v3
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v3
+
+    :cond_1f
+    :try_start_1f
+    iget v3, v2, Lcom/android/server/am/ServiceRecord;->foregroundId:I
+
+    if-eq v3, p3, :cond_28
+
+    invoke-virtual {v2}, Lcom/android/server/am/ServiceRecord;->cancelNotification()V
+
+    iput p3, v2, Lcom/android/server/am/ServiceRecord;->foregroundId:I
+
+    :cond_28
+    iget v3, p4, Landroid/app/Notification;->flags:I
+
+    or-int/lit8 v3, v3, 0x40
+
+    iput v3, p4, Landroid/app/Notification;->flags:I
+
+    iput-object p4, v2, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;
+
+    const/4 v3, 0x1
+
+    iput-boolean v3, v2, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    invoke-virtual {v2}, Lcom/android/server/am/ServiceRecord;->postNotification()V
+
+    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_40
+
+    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v4, 0x1
+
+    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessRecord;Z)V
+
+    :cond_40
+    :goto_40
+    monitor-exit p0
+    :try_end_41
+    .catchall {:try_start_1f .. :try_end_41} :catchall_17
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    return-void
+
+    :cond_45
+    :try_start_45
+    iget-boolean v3, v2, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    if-eqz v3, :cond_5d
+
+    const/4 v3, 0x0
+
+    iput-boolean v3, v2, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v3, :cond_5d
+
+    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x1
+
+    invoke-virtual {p0, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v4, 0x1
+
+    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateServiceForegroundLocked(Lcom/android/server/am/ProcessRecord;Z)V
+
+    :cond_5d
+    if-eqz p5, :cond_40
+
+    invoke-virtual {v2}, Lcom/android/server/am/ServiceRecord;->cancelNotification()V
+
+    const/4 v3, 0x0
+
+    iput v3, v2, Lcom/android/server/am/ServiceRecord;->foregroundId:I
+
+    const/4 v3, 0x0
+
+    iput-object v3, v2, Lcom/android/server/am/ServiceRecord;->foregroundNoti:Landroid/app/Notification;
+    :try_end_68
+    .catchall {:try_start_45 .. :try_end_68} :catchall_17
+
+    goto :goto_40
+.end method
+
+.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
+    .registers 2
+
+    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    return-void
+.end method
+
+.method public showBootMessage(Ljava/lang/CharSequence;Z)V
+    .registers 4
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V
+
+    return-void
+.end method
+
+.method final showLaunchWarningLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V
+    .registers 5
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z
+
+    if-nez v0, :cond_11
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    new-instance v1, Lcom/android/server/am/ActivityManagerService$5;
+
+    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$5;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V
+
+    invoke-virtual {v0, v1}, Landroid/os/Handler;->post(Ljava/lang/Runnable;)Z
+
+    :cond_11
+    return-void
+.end method
+
+.method public final showSafeModeOverlay()V
+    .registers 7
+
+    const/4 v5, -0x2
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-static {v2}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;
+
+    move-result-object v2
+
+    const v3, 0x1090080
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v2, v3, v4}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;
+
+    move-result-object v1
+
+    new-instance v0, Landroid/view/WindowManager$LayoutParams;
+
+    invoke-direct {v0}, Landroid/view/WindowManager$LayoutParams;-><init>()V
+
+    const/16 v2, 0x7df
+
+    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I
+
+    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->width:I
+
+    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->height:I
+
+    const/16 v2, 0x53
+
+    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I
+
+    invoke-virtual {v1}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I
+
+    move-result v2
+
+    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->format:I
+
+    const/16 v2, 0x18
+
+    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    const-string v3, "window"
+
+    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/view/WindowManager;
+
+    invoke-interface {v2, v1, v0}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V
+
+    return-void
+.end method
+
+.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
+    .registers 6
+
+    monitor-enter p0
+
+    if-eqz p1, :cond_b
+
+    :try_start_3
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    :goto_7
+    if-nez v0, :cond_d
+
+    monitor-exit p0
+
+    :goto_a
+    return-void
+
+    :cond_b
+    const/4 v0, 0x0
+
+    goto :goto_7
+
+    :cond_d
+    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;
+
+    move-result-object v1
+
+    const/4 v2, 0x6
+
+    iput v2, v1, Landroid/os/Message;->what:I
+
+    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    if-eqz p2, :cond_25
+
+    const/4 v2, 0x1
+
+    :goto_19
+    iput v2, v1, Landroid/os/Message;->arg1:I
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    invoke-virtual {v2, v1}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    monitor-exit p0
+
+    goto :goto_a
+
+    :catchall_22
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_24
+    .catchall {:try_start_3 .. :try_end_24} :catchall_22
+
+    throw v2
+
+    :cond_25
+    const/4 v2, 0x0
+
+    goto :goto_19
+.end method
+
+.method public shutdown(I)Z
+    .registers 11
+
+    const-string v5, "android.permission.SHUTDOWN"
+
+    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v5
+
+    if-eqz v5, :cond_10
+
+    new-instance v5, Ljava/lang/SecurityException;
+
+    const-string v6, "Requires permission android.permission.SHUTDOWN"
+
+    invoke-direct {v5, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v5
+
+    :cond_10
+    const/4 v4, 0x0
+
+    monitor-enter p0
+
+    const/4 v5, 0x1
+
+    :try_start_13
+    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    const/4 v6, 0x0
+
+    invoke-virtual {v5, v6}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v5, :cond_4d
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v5}, Lcom/android/server/am/ActivityStack;->stopIfSleepingLocked()V
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v5
+
+    int-to-long v7, p1
+
+    add-long v2, v5, v7
+
+    :goto_2d
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-nez v5, :cond_39
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v5, v5, Lcom/android/server/am/ActivityStack;->mPausingActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v5, :cond_4d
+
+    :cond_39
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v5
+
+    sub-long v0, v2, v5
+
+    const-wide/16 v5, 0x0
+
+    cmp-long v5, v0, v5
+
+    if-gtz v5, :cond_59
+
+    const-string v5, "ActivityManager"
+
+    const-string v6, "Activity manager shutdown timed out"
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v4, 0x1
+
+    :cond_4d
+    monitor-exit p0
+    :try_end_4e
+    .catchall {:try_start_13 .. :try_end_4e} :catchall_5f
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+    invoke-virtual {v5}, Lcom/android/server/am/UsageStatsService;->shutdown()V
+
+    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    invoke-virtual {v5}, Lcom/android/server/am/BatteryStatsService;->shutdown()V
+
+    return v4
+
+    :cond_59
+    :try_start_59
+    invoke-virtual {p0}, Ljava/lang/Object;->wait()V
+    :try_end_5c
+    .catchall {:try_start_59 .. :try_end_5c} :catchall_5f
+    .catch Ljava/lang/InterruptedException; {:try_start_59 .. :try_end_5c} :catch_5d
+
+    goto :goto_2d
+
+    :catch_5d
+    move-exception v5
+
+    goto :goto_2d
+
+    :catchall_5f
+    move-exception v5
+
+    :try_start_60
+    monitor-exit p0
+    :try_end_61
+    .catchall {:try_start_60 .. :try_end_61} :catchall_5f
+
+    throw v5
+.end method
+
+.method public signalPersistentProcesses(I)V
+    .registers 6
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    const/16 v2, 0xa
+
+    if-eq p1, v2, :cond_c
+
+    new-instance v2, Ljava/lang/SecurityException;
+
+    const-string v3, "Only SIGNAL_USR1 is allowed"
+
+    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_c
+    monitor-enter p0
+
+    :try_start_d
+    const-string v2, "android.permission.SIGNAL_PERSISTENT_PROCESSES"
+
+    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v2
+
+    if-eqz v2, :cond_20
+
+    new-instance v2, Ljava/lang/SecurityException;
+
+    const-string v3, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"
+
+    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :catchall_1d
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_1f
+    .catchall {:try_start_d .. :try_end_1f} :catchall_1d
+
+    throw v2
+
+    :cond_20
+    :try_start_20
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v0, v2, -0x1
+
+    :goto_28
+    if-ltz v0, :cond_42
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v2, :cond_3f
+
+    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v2, :cond_3f
+
+    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v2, p1}, Landroid/os/Process;->sendSignal(II)V
+
+    :cond_3f
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_28
+
+    :cond_42
+    monitor-exit p0
+    :try_end_43
+    .catchall {:try_start_20 .. :try_end_43} :catchall_1d
+
+    return-void
+.end method
+
+.method skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
+    .registers 11
+
+    const/4 v6, 0x1
+
+    const/4 v8, 0x0
+
+    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v7, :cond_18
+
+    invoke-direct {p0, v7}, Lcom/android/server/am/ActivityManagerService;->logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    iget-object v1, v7, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iget v2, v7, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    iget-object v3, v7, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    iget-object v4, v7, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    iget-boolean v5, v7, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    move-object v0, p0
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    const/4 v8, 0x1
+
+    :cond_18
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v7, :cond_32
+
+    iget-object v0, v7, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;
+
+    if-ne v0, p1, :cond_32
+
+    invoke-direct {p0, v7}, Lcom/android/server/am/ActivityManagerService;->logBroadcastReceiverDiscardLocked(Lcom/android/server/am/BroadcastRecord;)V
+
+    iget-object v1, v7, Lcom/android/server/am/BroadcastRecord;->receiver:Landroid/os/IBinder;
+
+    iget v2, v7, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    iget-object v3, v7, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    iget-object v4, v7, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    iget-boolean v5, v7, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    move-object v0, p0
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    const/4 v8, 0x1
+
+    :cond_32
+    if-eqz v8, :cond_37
+
+    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleBroadcastsLocked()V
+
+    :cond_37
+    return-void
+.end method
+
+.method public final startActivities(Landroid/app/IApplicationThread;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;)I
+    .registers 11
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v2, -0x1
+
+    move-object v1, p1
+
+    move-object v3, p2
+
+    move-object v4, p3
+
+    move-object v5, p4
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->startActivities(Landroid/app/IApplicationThread;I[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;)I
+
+    move-result v0
+
+    return v0
+.end method
+
+.method public final startActivitiesInPackage(I[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;)I
+    .registers 12
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v6
+
+    if-eqz v6, :cond_14
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v0
+
+    if-eq v6, v0, :cond_14
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    const-string v1, "startActivityInPackage only available to the system"
+
+    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_14
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v1, 0x0
+
+    move v2, p1
+
+    move-object v3, p2
+
+    move-object v4, p3
+
+    move-object v5, p4
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->startActivities(Landroid/app/IApplicationThread;I[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;)I
+
+    move-result v0
+
+    return v0
+.end method
+
+.method public final startActivity(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Z)I
+    .registers 32
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, -0x1
+
+    const/16 v16, 0x0
+
+    const/16 v17, 0x0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v4, p2
+
+    move-object/from16 v5, p3
+
+    move-object/from16 v6, p4
+
+    move/from16 v7, p5
+
+    move-object/from16 v8, p6
+
+    move-object/from16 v9, p7
+
+    move/from16 v10, p8
+
+    move/from16 v11, p9
+
+    move/from16 v12, p10
+
+    move-object/from16 v13, p11
+
+    move-object/from16 v14, p12
+
+    move/from16 v15, p13
+
+    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityStack;->startActivityMayWait(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;ZLandroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;)I
+
+    move-result v1
+
+    return v1
+.end method
+
+.method public final startActivityAndWait(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;Z)Landroid/app/IActivityManager$WaitResult;
+    .registers 32
+
+    new-instance v16, Landroid/app/IActivityManager$WaitResult;
+
+    invoke-direct/range {v16 .. v16}, Landroid/app/IActivityManager$WaitResult;-><init>()V
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, -0x1
+
+    const/16 v17, 0x0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v4, p2
+
+    move-object/from16 v5, p3
+
+    move-object/from16 v6, p4
+
+    move/from16 v7, p5
+
+    move-object/from16 v8, p6
+
+    move-object/from16 v9, p7
+
+    move/from16 v10, p8
+
+    move/from16 v11, p9
+
+    move/from16 v12, p10
+
+    move-object/from16 v13, p11
+
+    move-object/from16 v14, p12
+
+    move/from16 v15, p13
+
+    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityStack;->startActivityMayWait(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;ZLandroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;)I
+
+    return-object v16
+.end method
+
+.method public final startActivityInPackage(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IZ)I
+    .registers 27
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v18
+
+    if-eqz v18, :cond_16
+
+    invoke-static {}, Landroid/os/Process;->myUid()I
+
+    move-result v1
+
+    move/from16 v0, v18
+
+    if-eq v0, v1, :cond_16
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    const-string v2, "startActivityInPackage only available to the system"
+
+    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_16
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v2, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    const/16 v17, 0x0
+
+    move/from16 v3, p1
+
+    move-object/from16 v4, p2
+
+    move-object/from16 v5, p3
+
+    move-object/from16 v8, p4
+
+    move-object/from16 v9, p5
+
+    move/from16 v10, p6
+
+    move/from16 v11, p7
+
+    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityStack;->startActivityMayWait(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;ZLandroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;)I
+
+    move-result v1
+
+    return v1
+.end method
+
+.method public startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IntentSender;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;III)I
+    .registers 22
+
+    if-eqz p3, :cond_10
+
+    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v1
+
+    if-eqz v1, :cond_10
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "File descriptors passed in Intent"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_10
+    invoke-virtual {p2}, Landroid/content/IntentSender;->getTarget()Landroid/content/IIntentSender;
+
+    move-result-object v11
+
+    instance-of v1, v11, Lcom/android/server/am/PendingIntentRecord;
+
+    if-nez v1, :cond_20
+
+    new-instance v1, Ljava/lang/IllegalArgumentException;
+
+    const-string v2, "Bad PendingIntent object"
+
+    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_20
+    move-object v0, v11
+
+    check-cast v0, Lcom/android/server/am/PendingIntentRecord;
+
+    monitor-enter p0
+
+    :try_start_24
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v1, :cond_3e
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;
+
+    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    if-ne v1, v2, :cond_3e
+
+    const-wide/16 v1, 0x0
+
+    iput-wide v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J
+
+    :cond_3e
+    monitor-exit p0
+    :try_end_3f
+    .catchall {:try_start_24 .. :try_end_3f} :catchall_54
+
+    const/4 v1, 0x0
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    move-object v2, p3
+
+    move-object/from16 v3, p4
+
+    move-object/from16 v6, p5
+
+    move-object/from16 v7, p6
+
+    move/from16 v8, p7
+
+    move/from16 v9, p8
+
+    move/from16 v10, p9
+
+    invoke-virtual/range {v0 .. v10}, Lcom/android/server/am/PendingIntentRecord;->sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;III)I
+
+    move-result v1
+
+    return v1
+
+    :catchall_54
+    move-exception v1
+
+    :try_start_55
+    monitor-exit p0
+    :try_end_56
+    .catchall {:try_start_55 .. :try_end_56} :catchall_54
+
+    throw v1
+.end method
+
+.method public final startActivityWithConfig(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLandroid/content/res/Configuration;)I
+    .registers 30
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, -0x1
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    move-object/from16 v2, p1
+
+    move-object/from16 v4, p2
+
+    move-object/from16 v5, p3
+
+    move-object/from16 v6, p4
+
+    move/from16 v7, p5
+
+    move-object/from16 v8, p6
+
+    move-object/from16 v9, p7
+
+    move/from16 v10, p8
+
+    move/from16 v11, p9
+
+    move/from16 v12, p10
+
+    move-object/from16 v17, p11
+
+    invoke-virtual/range {v1 .. v17}, Lcom/android/server/am/ActivityStack;->startActivityMayWait(Landroid/app/IApplicationThread;ILandroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/os/IBinder;Ljava/lang/String;IZZLjava/lang/String;Landroid/os/ParcelFileDescriptor;ZLandroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;)I
+
+    move-result v1
+
+    return v1
+.end method
+
+.method startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V
+    .registers 5
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    invoke-static {v0, v1, v2}, Landroid/app/ApplicationErrorReport;->getErrorReportReceiver(Landroid/content/Context;Ljava/lang/String;I)Landroid/content/ComponentName;
+
+    move-result-object v0
+
+    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
+
+    return-void
+.end method
+
+.method startHomeActivityLocked()Z
+    .registers 18
+
+    move-object/from16 v0, p0
+
+    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v2, 0x1
+
+    if-ne v1, v2, :cond_f
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;
+
+    if-nez v1, :cond_f
+
+    const/4 v1, 0x0
+
+    :goto_e
+    return v1
+
+    :cond_f
+    new-instance v3, Landroid/content/Intent;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;
+
+    if-eqz v1, :cond_8a
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;
+
+    invoke-static {v1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;
+
+    move-result-object v1
+
+    :goto_23
+    invoke-direct {v3, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;
+
+    invoke-virtual {v3, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    move-object/from16 v0, p0
+
+    iget v1, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v2, 0x1
+
+    if-eq v1, v2, :cond_39
+
+    const-string v1, "android.intent.category.HOME"
+
+    invoke-virtual {v3, v1}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;
+
+    :cond_39
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v1}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v1
+
+    const/16 v2, 0x400
+
+    invoke-virtual {v3, v1, v2}, Landroid/content/Intent;->resolveActivityInfo(Landroid/content/pm/PackageManager;I)Landroid/content/pm/ActivityInfo;
+
+    move-result-object v7
+
+    if-eqz v7, :cond_88
+
+    new-instance v1, Landroid/content/ComponentName;
+
+    iget-object v2, v7, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v4, v7, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v1, v2, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-virtual {v3, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    iget-object v1, v7, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;
+
+    iget-object v2, v7, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v16
+
+    if-eqz v16, :cond_6b
+
+    move-object/from16 v0, v16
+
+    iget-object v1, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    if-nez v1, :cond_88
+
+    :cond_6b
+    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I
+
+    move-result v1
+
+    const/high16 v2, 0x1000
+
+    or-int/2addr v1, v2
+
+    invoke-virtual {v3, v1}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;
+
+    move-object/from16 v0, p0
+
+    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v2, 0x0
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    invoke-virtual/range {v1 .. v15}, Lcom/android/server/am/ActivityStack;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/content/pm/ActivityInfo;Landroid/os/IBinder;Ljava/lang/String;IIIZZ[Lcom/android/server/am/ActivityRecord;)I
+
+    :cond_88
+    const/4 v1, 0x1
+
+    goto :goto_e
+
+    :cond_8a
+    const/4 v1, 0x0
+
+    goto :goto_23
+.end method
+
+.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;)Z
+    .registers 23
+
+    if-eqz p4, :cond_10
+
+    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_10
+
+    new-instance v3, Ljava/lang/IllegalArgumentException;
+
+    const-string v4, "File descriptors passed in Bundle"
+
+    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_10
+    monitor-enter p0
+
+    const/4 v12, 0x0
+
+    const/4 v10, 0x0
+
+    :try_start_13
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v3
+
+    const/16 v4, 0x400
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0, v4}, Landroid/content/pm/PackageManager;->getInstrumentationInfo(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;
+
+    move-result-object v12
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v3
+
+    iget-object v4, v12, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;
+
+    const/16 v5, 0x400
+
+    invoke-virtual {v3, v4, v5}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;
+    :try_end_32
+    .catchall {:try_start_13 .. :try_end_32} :catchall_79
+    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_13 .. :try_end_32} :catch_11c
+
+    move-result-object v10
+
+    :goto_33
+    if-nez v12, :cond_56
+
+    :try_start_35
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unable to find instrumentation info for: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p5
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
+
+    const/4 v3, 0x0
+
+    monitor-exit p0
+
+    :goto_55
+    return v3
+
+    :cond_56
+    if-nez v10, :cond_7c
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unable to find instrumentation target package: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v12, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p5
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
+
+    const/4 v3, 0x0
+
+    monitor-exit p0
+
+    goto :goto_55
+
+    :catchall_79
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_7b
+    .catchall {:try_start_35 .. :try_end_7b} :catchall_79
+
+    throw v3
+
+    :cond_7c
+    :try_start_7c
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v3
+
+    iget-object v4, v12, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;
+
+    iget-object v5, v12, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4, v5}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I
+
+    move-result v13
+
+    if-gez v13, :cond_e9
+
+    const/4 v3, -0x1
+
+    if-eq v13, v3, :cond_e9
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Permission Denial: starting instrumentation "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " from pid="
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, ", uid="
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v4
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " not allowed because package "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v12, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " does not have a signature matching the target "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    iget-object v4, v12, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v14
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, p5
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v0, v1, v2, v14}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
+
+    new-instance v3, Ljava/lang/SecurityException;
+
+    invoke-direct {v3, v14}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v3
+
+    :cond_e9
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v15
+
+    iget-object v4, v12, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;
+
+    const/4 v5, -0x1
+
+    const/4 v6, 0x1
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x1
+
+    const/4 v9, 0x1
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZ)Z
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v10}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v11
+
+    move-object/from16 v0, p1
+
+    iput-object v0, v11, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;
+
+    iput-object v10, v11, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v0, p2
+
+    iput-object v0, v11, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;
+
+    move-object/from16 v0, p4
+
+    iput-object v0, v11, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;
+
+    move-object/from16 v0, p5
+
+    iput-object v0, v11, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;
+
+    move-object/from16 v0, p1
+
+    iput-object v0, v11, Lcom/android/server/am/ProcessRecord;->instrumentationResultClass:Landroid/content/ComponentName;
+
+    invoke-static/range {v15 .. v16}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_119
+    .catchall {:try_start_7c .. :try_end_119} :catchall_79
+
+    const/4 v3, 0x1
+
+    goto/16 :goto_55
+
+    :catch_11c
+    move-exception v3
+
+    goto/16 :goto_33
+.end method
+
+.method public startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;)Z
+    .registers 30
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v2
+
+    const/4 v3, 0x1
+
+    if-ne v2, v3, :cond_11
+
+    new-instance v2, Ljava/lang/IllegalArgumentException;
+
+    const-string v3, "File descriptors passed in Intent"
+
+    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    move-object/from16 v0, p1
+
+    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStack;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v21
+
+    if-nez v21, :cond_21
+
+    const/4 v2, 0x0
+
+    monitor-exit p0
+
+    :goto_20
+    return v2
+
+    :cond_21
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v2, :cond_2f
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v2, :cond_35
+
+    :cond_2f
+    const/4 v2, 0x0
+
+    monitor-exit p0
+
+    goto :goto_20
+
+    :catchall_32
+    move-exception v2
+
+    :goto_33
+    monitor-exit p0
+    :try_end_34
+    .catchall {:try_start_12 .. :try_end_34} :catchall_32
+
+    throw v2
+
+    :cond_35
+    :try_start_35
+    new-instance v4, Landroid/content/Intent;
+
+    move-object/from16 v0, p2
+
+    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+    :try_end_3c
+    .catchall {:try_start_35 .. :try_end_3c} :catchall_32
+
+    :try_start_3c
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v2}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v2
+
+    move-object/from16 v0, v21
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;
+
+    invoke-virtual {v3}, Landroid/content/Intent;->getType()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-virtual {v4, v2, v3}, Landroid/content/Intent;->setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+    :try_end_53
+    .catchall {:try_start_3c .. :try_end_53} :catchall_13f
+
+    const/4 v8, 0x0
+
+    :try_start_54
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v2
+
+    move-object/from16 v0, v21
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;
+
+    const v5, 0x10400
+
+    invoke-interface {v2, v4, v3, v5}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;I)Ljava/util/List;
+
+    move-result-object v24
+
+    if-eqz v24, :cond_b9
+
+    invoke-interface/range {v24 .. v24}, Ljava/util/List;->size()I
+
+    move-result v17
+
+    :goto_69
+    const/16 v18, 0x0
+
+    :goto_6b
+    move/from16 v0, v18
+
+    move/from16 v1, v17
+
+    if-ge v0, v1, :cond_b1
+
+    move-object/from16 v0, v24
+
+    move/from16 v1, v18
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v22
+
+    check-cast v22, Landroid/content/pm/ResolveInfo;
+
+    move-object/from16 v0, v22
+
+    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v21
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_bc
+
+    move-object/from16 v0, v22
+
+    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    move-object/from16 v0, v21
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_bc
+
+    add-int/lit8 v18, v18, 0x1
+
+    move/from16 v0, v18
+
+    move/from16 v1, v17
+
+    if-ge v0, v1, :cond_b1
+
+    move-object/from16 v0, v24
+
+    move/from16 v1, v18
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/pm/ResolveInfo;
+
+    iget-object v8, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+    :try_end_b1
+    .catchall {:try_start_54 .. :try_end_b1} :catchall_13f
+    .catch Landroid/os/RemoteException; {:try_start_54 .. :try_end_b1} :catch_144
+
+    :cond_b1
+    :goto_b1
+    if-nez v8, :cond_bf
+
+    const/4 v2, 0x0
+
+    :try_start_b4
+    monitor-exit p0
+
+    move-object/from16 p2, v4
+
+    goto/16 :goto_20
+
+    :cond_b9
+    const/16 v17, 0x0
+
+    goto :goto_69
+
+    :cond_bc
+    add-int/lit8 v18, v18, 0x1
+
+    goto :goto_6b
+
+    :cond_bf
+    new-instance v2, Landroid/content/ComponentName;
+
+    iget-object v3, v8, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    iget-object v5, v8, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I
+
+    move-result v2
+
+    const v3, -0x1e000001
+
+    and-int/2addr v2, v3
+
+    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;
+
+    move-object/from16 v0, v21
+
+    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    move/from16 v26, v0
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, v21
+
+    iput-boolean v2, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    move-object/from16 v0, v21
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;
+
+    move-object/from16 v25, v0
+
+    move-object/from16 v0, v21
+
+    iget-object v10, v0, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;
+
+    move-object/from16 v0, v21
+
+    iget v11, v0, Lcom/android/server/am/ActivityRecord;->requestCode:I
+
+    const/4 v2, 0x0
+
+    move-object/from16 v0, v21
+
+    iput-object v2, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;
+
+    if-eqz v25, :cond_ff
+
+    move-object/from16 v0, v25
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1, v10, v11}, Lcom/android/server/am/ActivityRecord;->removeResultsLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V
+
+    :cond_ff
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v19
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    move-object/from16 v0, v21
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v0, v21
+
+    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    if-eqz v25, :cond_137
+
+    move-object/from16 v0, v25
+
+    iget-object v9, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    :goto_119
+    const/4 v12, -0x1
+
+    move-object/from16 v0, v21
+
+    iget v13, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    invoke-virtual/range {v2 .. v16}, Lcom/android/server/am/ActivityStack;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/content/pm/ActivityInfo;Landroid/os/IBinder;Ljava/lang/String;IIIZZ[Lcom/android/server/am/ActivityRecord;)I
+
+    move-result v23
+
+    invoke-static/range {v19 .. v20}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    move/from16 v0, v26
+
+    move-object/from16 v1, v21
+
+    iput-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-eqz v23, :cond_139
+
+    const/4 v2, 0x0
+
+    monitor-exit p0
+
+    move-object/from16 p2, v4
+
+    goto/16 :goto_20
+
+    :cond_137
+    const/4 v9, 0x0
+
+    goto :goto_119
+
+    :cond_139
+    const/4 v2, 0x1
+
+    monitor-exit p0
+    :try_end_13b
+    .catchall {:try_start_b4 .. :try_end_13b} :catchall_13f
+
+    move-object/from16 p2, v4
+
+    goto/16 :goto_20
+
+    :catchall_13f
+    move-exception v2
+
+    move-object/from16 p2, v4
+
+    goto/16 :goto_33
+
+    :catch_144
+    move-exception v2
+
+    goto/16 :goto_b1
+.end method
+
+.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;Z)Lcom/android/server/am/ProcessRecord;
+    .registers 16
+
+    const/4 v7, 0x0
+
+    const/4 v6, 0x1
+
+    const/4 v2, 0x0
+
+    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {p0, p1, v3}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;I)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    if-eqz v0, :cond_1f
+
+    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v3, :cond_1f
+
+    if-eqz p3, :cond_15
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-nez v3, :cond_1c
+
+    :cond_15
+    iget-object v2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v0, v2}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;)Z
+
+    move-object v2, v0
+
+    :cond_1b
+    :goto_1b
+    return-object v2
+
+    :cond_1c
+    invoke-direct {p0, v0, v6, v6}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+
+    :cond_1f
+    if-eqz p6, :cond_5d
+
+    invoke-virtual {p6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;
+
+    move-result-object v1
+
+    :goto_25
+    and-int/lit8 v3, p4, 0x4
+
+    if-eqz v3, :cond_5f
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    iget v5, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, v4, v5}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    if-nez v3, :cond_1b
+
+    :cond_35
+    :goto_35
+    if-nez v0, :cond_96
+
+    invoke-virtual {p0, v2, p2, p1}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/app/IApplicationThread;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/server/ProcessMap;
+
+    iget v4, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, p1, v4, v0}, Lcom/android/server/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;
+
+    :goto_42
+    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-nez v3, :cond_9c
+
+    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_9c
+
+    if-nez p7, :cond_9c
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_5b
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    :cond_5b
+    move-object v2, v0
+
+    goto :goto_1b
+
+    :cond_5d
+    move-object v1, v2
+
+    goto :goto_25
+
+    :cond_5f
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/server/ProcessMap;
+
+    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    iget v5, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, v4, v5}, Lcom/android/server/ProcessMap;->remove(Ljava/lang/String;I)V
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    iget v5, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, v4, v5}, Lcom/android/server/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_35
+
+    const/16 v3, 0x7540
+
+    const/4 v4, 0x2
+
+    new-array v4, v4, [Ljava/lang/Object;
+
+    iget v5, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v4, v7
+
+    iget-object v5, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    aput-object v5, v4, v6
+
+    invoke-static {v3, v4}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/server/ProcessMap;
+
+    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;
+
+    iget v5, p2, Landroid/content/pm/ApplicationInfo;->uid:I
+
+    invoke-virtual {v3, v4, v5}, Lcom/android/server/ProcessMap;->remove(Ljava/lang/String;I)V
+
+    if-eqz v0, :cond_35
+
+    iput-boolean v7, v0, Lcom/android/server/am/ProcessRecord;->bad:Z
+
+    goto :goto_35
+
+    :cond_96
+    iget-object v3, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v0, v3}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;)Z
+
+    goto :goto_42
+
+    :cond_9c
+    invoke-direct {p0, v0, p5, v1}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
+
+    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-eqz v3, :cond_1b
+
+    move-object v2, v0
+
+    goto/16 :goto_1b
+.end method
+
+.method public final startRunning(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
+    .registers 7
+
+    const/4 v1, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartRunning:Z
+
+    if-eqz v0, :cond_8
+
+    monitor-exit p0
+
+    :goto_7
+    return-void
+
+    :cond_8
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartRunning:Z
+
+    if-eqz p1, :cond_25
+
+    if-eqz p2, :cond_25
+
+    new-instance v0, Landroid/content/ComponentName;
+
+    invoke-direct {v0, p1, p2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    :goto_14
+    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;
+
+    if-eqz p3, :cond_27
+
+    :goto_18
+    iput-object p3, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;
+
+    iput-object p4, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+
+    if-nez v0, :cond_2a
+
+    monitor-exit p0
+
+    goto :goto_7
+
+    :catchall_22
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_24
+    .catchall {:try_start_2 .. :try_end_24} :catchall_22
+
+    throw v0
+
+    :cond_25
+    move-object v0, v1
+
+    goto :goto_14
+
+    :cond_27
+    :try_start_27
+    const-string p3, "android.intent.action.MAIN"
+
+    goto :goto_18
+
+    :cond_2a
+    monitor-exit p0
+    :try_end_2b
+    .catchall {:try_start_27 .. :try_end_2b} :catchall_22
+
+    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->systemReady(Ljava/lang/Runnable;)V
+
+    goto :goto_7
+.end method
+
+.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;)Landroid/content/ComponentName;
+    .registers 13
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v0
+
+    const/4 v1, 0x1
+
+    if-ne v0, v1, :cond_11
+
+    new-instance v0, Ljava/lang/IllegalArgumentException;
+
+    const-string v1, "File descriptors passed in Intent"
+
+    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v5
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v6
+
+    move-object v0, p0
+
+    move-object v1, p1
+
+    move-object v2, p2
+
+    move-object v3, p3
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/ComponentName;
+
+    move-result-object v8
+
+    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return-object v8
+
+    :catchall_2b
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_2d
+    .catchall {:try_start_12 .. :try_end_2d} :catchall_2b
+
+    throw v0
+.end method
+
+.method startServiceInPackage(ILandroid/content/Intent;Ljava/lang/String;)Landroid/content/ComponentName;
+    .registers 13
+
+    monitor-enter p0
+
+    :try_start_1
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v6
+
+    const/4 v1, 0x0
+
+    const/4 v4, -0x1
+
+    move-object v0, p0
+
+    move-object v2, p2
+
+    move-object v3, p3
+
+    move v5, p1
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/ComponentName;
+
+    move-result-object v8
+
+    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return-object v8
+
+    :catchall_14
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_16
+    .catchall {:try_start_1 .. :try_end_16} :catchall_14
+
+    throw v0
+.end method
+
+.method startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/ComponentName;
+    .registers 15
+
+    monitor-enter p0
+
+    if-eqz p1, :cond_3d
+
+    :try_start_3
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v6
+
+    if-nez v6, :cond_3d
+
+    new-instance v0, Ljava/lang/SecurityException;
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v3, "Unable to find app for caller "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, " (pid="
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v3
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v3, ") when starting service "
+
+    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v0
+
+    :catchall_3a
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_3c
+    .catchall {:try_start_3 .. :try_end_3c} :catchall_3a
+
+    throw v0
+
+    :cond_3d
+    :try_start_3d
+    invoke-direct {p0, p2, p3, p4, p5}, Lcom/android/server/am/ActivityManagerService;->retrieveServiceLocked(Landroid/content/Intent;Ljava/lang/String;II)Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    move-result-object v7
+
+    if-nez v7, :cond_46
+
+    const/4 v0, 0x0
+
+    monitor-exit p0
+
+    :goto_45
+    return-object v0
+
+    :cond_46
+    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    if-nez v0, :cond_5c
+
+    new-instance v0, Landroid/content/ComponentName;
+
+    const-string v3, "!"
+
+    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->permission:Ljava/lang/String;
+
+    if-eqz v2, :cond_59
+
+    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->permission:Ljava/lang/String;
+
+    :goto_54
+    invoke-direct {v0, v3, v2}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-exit p0
+
+    goto :goto_45
+
+    :cond_59
+    const-string v2, "private to package"
+
+    goto :goto_54
+
+    :cond_5c
+    iget-object v1, v7, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v0, v1, Lcom/android/server/am/ServiceRecord;->packageName:Ljava/lang/String;
+
+    invoke-virtual {p0, p5, v0, p2}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;)I
+
+    move-result v5
+
+    invoke-direct {p0, v1}, Lcom/android/server/am/ActivityManagerService;->unscheduleServiceRestartLocked(Lcom/android/server/am/ServiceRecord;)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_6a
+
+    :cond_6a
+    const/4 v0, 0x1
+
+    iput-boolean v0, v1, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, v1, Lcom/android/server/am/ServiceRecord;->callStart:Z
+
+    iget-object v8, v1, Lcom/android/server/am/ServiceRecord;->pendingStarts:Ljava/util/ArrayList;
+
+    new-instance v0, Lcom/android/server/am/ServiceRecord$StartItem;
+
+    const/4 v2, 0x0
+
+    invoke-virtual {v1}, Lcom/android/server/am/ServiceRecord;->makeNextStartId()I
+
+    move-result v3
+
+    move-object v4, p2
+
+    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ServiceRecord$StartItem;-><init>(Lcom/android/server/am/ServiceRecord;ZILandroid/content/Intent;I)V
+
+    invoke-virtual {v8, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v2
+
+    iput-wide v2, v1, Lcom/android/server/am/ServiceRecord;->lastActivity:J
+
+    iget-object v0, v1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v2
+
+    monitor-enter v2
+    :try_end_8d
+    .catchall {:try_start_3d .. :try_end_8d} :catchall_3a
+
+    :try_start_8d
+    iget-object v0, v1, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->startRunningLocked()V
+
+    monitor-exit v2
+    :try_end_93
+    .catchall {:try_start_8d .. :try_end_93} :catchall_a9
+
+    :try_start_93
+    invoke-virtual {p2}, Landroid/content/Intent;->getFlags()I
+
+    move-result v0
+
+    const/4 v2, 0x0
+
+    invoke-direct {p0, v1, v0, v2}, Lcom/android/server/am/ActivityManagerService;->bringUpServiceLocked(Lcom/android/server/am/ServiceRecord;IZ)Z
+
+    move-result v0
+
+    if-nez v0, :cond_ac
+
+    new-instance v0, Landroid/content/ComponentName;
+
+    const-string v2, "!"
+
+    const-string v3, "Service process is bad"
+
+    invoke-direct {v0, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-exit p0
+    :try_end_a8
+    .catchall {:try_start_93 .. :try_end_a8} :catchall_3a
+
+    goto :goto_45
+
+    :catchall_a9
+    move-exception v0
+
+    :try_start_aa
+    monitor-exit v2
+    :try_end_ab
+    .catchall {:try_start_aa .. :try_end_ab} :catchall_a9
+
+    :try_start_ab
+    throw v0
+
+    :cond_ac
+    iget-object v0, v1, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;
+
+    monitor-exit p0
+    :try_end_af
+    .catchall {:try_start_ab .. :try_end_af} :catchall_3a
+
+    goto :goto_45
+.end method
+
+.method startSetupActivityLocked()V
+    .registers 24
+
+    move-object/from16 v0, p0
+
+    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z
+
+    if-eqz v2, :cond_7
+
+    :cond_6
+    :goto_6
+    return-void
+
+    :cond_7
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;
+
+    move-result-object v19
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v3, 0x1
+
+    if-eq v2, v3, :cond_6
+
+    const-string v2, "device_provisioned"
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, v19
+
+    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I
+
+    move-result v2
+
+    if-eqz v2, :cond_6
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p0
+
+    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z
+
+    new-instance v4, Landroid/content/Intent;
+
+    const-string v2, "android.intent.action.UPGRADE_SETUP"
+
+    invoke-direct {v4, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    sget-object v2, Lcom/android/server/am/ActivityManagerService;->mSelf:Lcom/android/server/am/ActivityManagerService;
+
+    iget-object v2, v2, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v2
+
+    const/16 v3, 0x80
+
+    invoke-virtual {v2, v4, v3}, Landroid/content/pm/PackageManager;->queryIntentActivities(Landroid/content/Intent;I)Ljava/util/List;
+
+    move-result-object v21
+
+    const/16 v20, 0x0
+
+    const/16 v17, 0x0
+
+    :goto_3f
+    if-eqz v21, :cond_67
+
+    invoke-interface/range {v21 .. v21}, Ljava/util/List;->size()I
+
+    move-result v2
+
+    move/from16 v0, v17
+
+    if-ge v0, v2, :cond_67
+
+    move-object/from16 v0, v21
+
+    move/from16 v1, v17
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/pm/ResolveInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v2, v2, 0x1
+
+    if-eqz v2, :cond_de
+
+    move-object/from16 v0, v21
+
+    move/from16 v1, v17
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v20
+
+    check-cast v20, Landroid/content/pm/ResolveInfo;
+
+    :cond_67
+    if-eqz v20, :cond_6
+
+    move-object/from16 v0, v20
+
+    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;
+
+    if-eqz v2, :cond_e2
+
+    move-object/from16 v0, v20
+
+    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;
+
+    const-string v3, "android.SETUP_VERSION"
+
+    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v22
+
+    :goto_7d
+    if-nez v22, :cond_97
+
+    move-object/from16 v0, v20
+
+    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;
+
+    if-eqz v2, :cond_97
+
+    move-object/from16 v0, v20
+
+    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;
+
+    const-string v3, "android.SETUP_VERSION"
+
+    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v22
+
+    :cond_97
+    const-string v2, "last_setup_shown"
+
+    move-object/from16 v0, v19
+
+    invoke-static {v0, v2}, Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v18
+
+    if-eqz v22, :cond_6
+
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, v18
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_6
+
+    const/high16 v2, 0x1000
+
+    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;
+
+    new-instance v2, Landroid/content/ComponentName;
+
+    move-object/from16 v0, v20
+
+    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v20
+
+    iget-object v5, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    move-object/from16 v0, v20
+
+    iget-object v8, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    invoke-virtual/range {v2 .. v16}, Lcom/android/server/am/ActivityStack;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;[Landroid/net/Uri;ILandroid/content/pm/ActivityInfo;Landroid/os/IBinder;Ljava/lang/String;IIIZZ[Lcom/android/server/am/ActivityRecord;)I
+
+    goto/16 :goto_6
+
+    :cond_de
+    add-int/lit8 v17, v17, 0x1
+
+    goto/16 :goto_3f
+
+    :cond_e2
+    const/16 v22, 0x0
+
+    goto :goto_7d
+.end method
+
+.method public stopAppSwitches()V
+    .registers 6
+
+    const-wide/16 v3, 0x1388
+
+    const-string v1, "android.permission.STOP_APP_SWITCHES"
+
+    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v1
+
+    if-eqz v1, :cond_12
+
+    new-instance v1, Ljava/lang/SecurityException;
+
+    const-string v2, "Requires permission android.permission.STOP_APP_SWITCHES"
+
+    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v1
+
+    :cond_12
+    monitor-enter p0
+
+    :try_start_13
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v1
+
+    add-long/2addr v1, v3
+
+    iput-wide v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J
+
+    const/4 v1, 0x0
+
+    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidAppSwitch:Z
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v2, 0x15
+
+    invoke-virtual {v1, v2}, Landroid/os/Handler;->removeMessages(I)V
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/16 v2, 0x15
+
+    invoke-virtual {v1, v2}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v0
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const-wide/16 v2, 0x1388
+
+    invoke-virtual {v1, v0, v2, v3}, Landroid/os/Handler;->sendMessageDelayed(Landroid/os/Message;J)Z
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_35
+    move-exception v1
+
+    monitor-exit p0
+    :try_end_37
+    .catchall {:try_start_13 .. :try_end_37} :catchall_35
+
+    throw v1
+.end method
+
+.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;)I
+    .registers 11
+
+    const/4 v4, 0x1
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v5
+
+    if-ne v5, v4, :cond_11
+
+    new-instance v4, Ljava/lang/IllegalArgumentException;
+
+    const-string v5, "File descriptors passed in Intent"
+
+    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
+
+    move-result-object v0
+
+    if-eqz p1, :cond_4e
+
+    if-nez v0, :cond_4e
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "Unable to find app for caller "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, " (pid="
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v6
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, ") when stopping service "
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :catchall_4b
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_4d
+    .catchall {:try_start_12 .. :try_end_4d} :catchall_4b
+
+    throw v4
+
+    :cond_4e
+    :try_start_4e
+    invoke-direct {p0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->findServiceLocked(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_6e
+
+    iget-object v5, v3, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    if-eqz v5, :cond_6b
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+    :try_end_5b
+    .catchall {:try_start_4e .. :try_end_5b} :catchall_4b
+
+    move-result-wide v1
+
+    :try_start_5c
+    iget-object v5, v3, Lcom/android/server/am/ActivityManagerService$ServiceLookupResult;->record:Lcom/android/server/am/ServiceRecord;
+
+    invoke-direct {p0, v5}, Lcom/android/server/am/ActivityManagerService;->stopServiceLocked(Lcom/android/server/am/ServiceRecord;)V
+    :try_end_61
+    .catchall {:try_start_5c .. :try_end_61} :catchall_66
+
+    :try_start_61
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    :goto_65
+    return v4
+
+    :catchall_66
+    move-exception v4
+
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    throw v4
+
+    :cond_6b
+    const/4 v4, -0x1
+
+    monitor-exit p0
+
+    goto :goto_65
+
+    :cond_6e
+    monitor-exit p0
+    :try_end_6f
+    .catchall {:try_start_61 .. :try_end_6f} :catchall_4b
+
+    const/4 v4, 0x0
+
+    goto :goto_65
+.end method
+
+.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
+    .registers 12
+
+    const/4 v5, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->findServiceLocked(Landroid/content/ComponentName;Landroid/os/IBinder;)Lcom/android/server/am/ServiceRecord;
+
+    move-result-object v3
+
+    if-eqz v3, :cond_8c
+
+    if-ltz p3, :cond_65
+
+    const/4 v6, 0x0
+
+    invoke-virtual {v3, p3, v6}, Lcom/android/server/am/ServiceRecord;->findDeliveredStart(IZ)Lcom/android/server/am/ServiceRecord$StartItem;
+
+    move-result-object v4
+
+    if-eqz v4, :cond_27
+
+    :cond_11
+    iget-object v6, v3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    if-lez v6, :cond_27
+
+    iget-object v6, v3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    const/4 v7, 0x0
+
+    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord$StartItem;
+
+    invoke-virtual {v0}, Lcom/android/server/am/ServiceRecord$StartItem;->removeUriPermissionsLocked()V
+
+    if-ne v0, v4, :cond_11
+
+    :cond_27
+    invoke-virtual {v3}, Lcom/android/server/am/ServiceRecord;->getLastStartId()I
+
+    move-result v6
+
+    if-eq v6, p3, :cond_2f
+
+    monitor-exit p0
+
+    :goto_2e
+    return v5
+
+    :cond_2f
+    iget-object v5, v3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-lez v5, :cond_65
+
+    const-string v5, "ActivityManager"
+
+    new-instance v6, Ljava/lang/StringBuilder;
+
+    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v7, "stopServiceToken startId "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " is last, but have "
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    iget-object v7, v3, Lcom/android/server/am/ServiceRecord;->deliveredStarts:Ljava/util/ArrayList;
+
+    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
+
+    move-result v7
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    const-string v7, " remaining args"
+
+    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v6
+
+    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v6
+
+    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_65
+    iget-object v5, v3, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->getBatteryStats()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v6
+
+    monitor-enter v6
+    :try_end_6c
+    .catchall {:try_start_2 .. :try_end_6c} :catchall_86
+
+    :try_start_6c
+    iget-object v5, v3, Lcom/android/server/am/ServiceRecord;->stats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
+
+    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;->stopRunningLocked()V
+
+    const/4 v5, 0x0
+
+    iput-boolean v5, v3, Lcom/android/server/am/ServiceRecord;->startRequested:Z
+
+    const/4 v5, 0x0
+
+    iput-boolean v5, v3, Lcom/android/server/am/ServiceRecord;->callStart:Z
+
+    monitor-exit v6
+    :try_end_78
+    .catchall {:try_start_6c .. :try_end_78} :catchall_89
+
+    :try_start_78
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v1
+
+    const/4 v5, 0x0
+
+    invoke-direct {p0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->bringDownServiceLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    invoke-static {v1, v2}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    const/4 v5, 0x1
+
+    monitor-exit p0
+
+    goto :goto_2e
+
+    :catchall_86
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_88
+    .catchall {:try_start_78 .. :try_end_88} :catchall_86
+
+    throw v5
+
+    :catchall_89
+    move-exception v5
+
+    :try_start_8a
+    monitor-exit v6
+    :try_end_8b
+    .catchall {:try_start_8a .. :try_end_8b} :catchall_89
+
+    :try_start_8b
+    throw v5
+
+    :cond_8c
+    monitor-exit p0
+    :try_end_8d
+    .catchall {:try_start_8b .. :try_end_8d} :catchall_86
+
+    goto :goto_2e
+.end method
+
+.method public switchUser(I)Z
+    .registers 3
+
+    const/4 v0, 0x1
+
+    return v0
+.end method
+
+.method public systemReady(Ljava/lang/Runnable;)V
+    .registers 35
+
+    monitor-enter p0
+
+    :try_start_1
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+
+    if-eqz v3, :cond_e
+
+    if-eqz p1, :cond_c
+
+    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V
+
+    :cond_c
+    monitor-exit p0
+
+    :goto_d
+    return-void
+
+    :cond_e
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z
+
+    if-nez v3, :cond_134
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
+
+    if-eqz v3, :cond_1f
+
+    monitor-exit p0
+
+    goto :goto_d
+
+    :catchall_1c
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_1e
+    .catchall {:try_start_1 .. :try_end_1e} :catchall_1c
+
+    throw v3
+
+    :cond_1f
+    :try_start_1f
+    new-instance v6, Landroid/content/Intent;
+
+    const-string v3, "android.intent.action.PRE_BOOT_COMPLETED"
+
+    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+    :try_end_26
+    .catchall {:try_start_1f .. :try_end_26} :catchall_1c
+
+    const/16 v32, 0x0
+
+    :try_start_28
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    invoke-interface {v3, v6, v4, v5}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;I)Ljava/util/List;
+    :try_end_31
+    .catchall {:try_start_28 .. :try_end_31} :catchall_1c
+    .catch Landroid/os/RemoteException; {:try_start_28 .. :try_end_31} :catch_304
+
+    move-result-object v32
+
+    :goto_32
+    if-eqz v32, :cond_126
+
+    :try_start_34
+    invoke-interface/range {v32 .. v32}, Ljava/util/List;->size()I
+
+    move-result v3
+
+    add-int/lit8 v24, v3, -0x1
+
+    :goto_3a
+    if-ltz v24, :cond_5a
+
+    move-object/from16 v0, v32
+
+    move/from16 v1, v24
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Landroid/content/pm/ResolveInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v3, v3, 0x1
+
+    if-nez v3, :cond_57
+
+    move-object/from16 v0, v32
+
+    move/from16 v1, v24
+
+    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;
+
+    :cond_57
+    add-int/lit8 v24, v24, -0x1
+
+    goto :goto_3a
+
+    :cond_5a
+    const/high16 v3, 0x800
+
+    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->readLastDonePreBootReceivers()Ljava/util/ArrayList;
+
+    move-result-object v26
+
+    new-instance v22, Ljava/util/ArrayList;
+
+    invoke-direct/range {v22 .. v22}, Ljava/util/ArrayList;-><init>()V
+
+    const/16 v24, 0x0
+
+    :goto_6a
+    invoke-interface/range {v32 .. v32}, Ljava/util/List;->size()I
+
+    move-result v3
+
+    move/from16 v0, v24
+
+    if-ge v0, v3, :cond_a5
+
+    move-object/from16 v0, v32
+
+    move/from16 v1, v24
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Landroid/content/pm/ResolveInfo;
+
+    iget-object v0, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    move-object/from16 v18, v0
+
+    new-instance v21, Landroid/content/ComponentName;
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v18
+
+    iget-object v4, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    move-object/from16 v0, v21
+
+    invoke-direct {v0, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, v26
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v3, :cond_a2
+
+    move-object/from16 v0, v32
+
+    move/from16 v1, v24
+
+    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;
+
+    add-int/lit8 v24, v24, -0x1
+
+    :cond_a2
+    add-int/lit8 v24, v24, 0x1
+
+    goto :goto_6a
+
+    :cond_a5
+    const/16 v24, 0x0
+
+    :goto_a7
+    invoke-interface/range {v32 .. v32}, Ljava/util/List;->size()I
+
+    move-result v3
+
+    move/from16 v0, v24
+
+    if-ge v0, v3, :cond_126
+
+    move-object/from16 v0, v32
+
+    move/from16 v1, v24
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v3
+
+    check-cast v3, Landroid/content/pm/ResolveInfo;
+
+    iget-object v0, v3, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    move-object/from16 v18, v0
+
+    new-instance v21, Landroid/content/ComponentName;
+
+    move-object/from16 v0, v18
+
+    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v18
+
+    iget-object v4, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    move-object/from16 v0, v21
+
+    invoke-direct {v0, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, v22
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+
+    move-object/from16 v0, v21
+
+    invoke-virtual {v6, v0}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;
+
+    const/4 v8, 0x0
+
+    invoke-interface/range {v32 .. v32}, Ljava/util/List;->size()I
+
+    move-result v3
+
+    add-int/lit8 v3, v3, -0x1
+
+    move/from16 v0, v24
+
+    if-ne v0, v3, :cond_ee
+
+    new-instance v8, Lcom/android/server/am/ActivityManagerService$9;
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v22
+
+    move-object/from16 v2, p1
+
+    invoke-direct {v8, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/Runnable;)V
+
+    :cond_ee
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Sending system update to: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v4, 0x0
+
+    const/4 v5, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x1
+
+    const/4 v14, 0x0
+
+    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    const/16 v16, 0x3e8
+
+    move-object/from16 v3, p0
+
+    invoke-direct/range {v3 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    if-eqz v8, :cond_123
+
+    const/4 v3, 0x1
+
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
+
+    :cond_123
+    add-int/lit8 v24, v24, 0x1
+
+    goto :goto_a7
+
+    :cond_126
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z
+
+    if-eqz v3, :cond_12f
+
+    monitor-exit p0
+
+    goto/16 :goto_d
+
+    :cond_12f
+    const/4 v3, 0x1
+
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z
+
+    :cond_134
+    const/4 v3, 0x1
+
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+
+    move-object/from16 v0, p0
+
+    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mStartRunning:Z
+
+    if-nez v3, :cond_142
+
+    monitor-exit p0
+
+    goto/16 :goto_d
+
+    :cond_142
+    monitor-exit p0
+    :try_end_143
+    .catchall {:try_start_34 .. :try_end_143} :catchall_1c
+
+    const/16 v29, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    monitor-enter v4
+
+    :try_start_14a
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I
+    :try_end_151
+    .catchall {:try_start_14a .. :try_end_151} :catchall_1c1
+
+    move-result v3
+
+    add-int/lit8 v24, v3, -0x1
+
+    move-object/from16 v30, v29
+
+    :goto_156
+    if-ltz v24, :cond_183
+
+    :try_start_158
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move/from16 v0, v24
+
+    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;
+
+    move-result-object v28
+
+    check-cast v28, Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v28
+
+    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_30b
+
+    if-nez v30, :cond_307
+
+    new-instance v29, Ljava/util/ArrayList;
+
+    invoke-direct/range {v29 .. v29}, Ljava/util/ArrayList;-><init>()V
+    :try_end_177
+    .catchall {:try_start_158 .. :try_end_177} :catchall_2ff
+
+    :goto_177
+    :try_start_177
+    move-object/from16 v0, v29
+
+    move-object/from16 v1, v28
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
+    :try_end_17e
+    .catchall {:try_start_177 .. :try_end_17e} :catchall_1c1
+
+    :goto_17e
+    add-int/lit8 v24, v24, -0x1
+
+    move-object/from16 v30, v29
+
+    goto :goto_156
+
+    :cond_183
+    :try_start_183
+    monitor-exit v4
+    :try_end_184
+    .catchall {:try_start_183 .. :try_end_184} :catchall_2ff
+
+    monitor-enter p0
+
+    if-eqz v30, :cond_1c4
+
+    :try_start_187
+    invoke-virtual/range {v30 .. v30}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    add-int/lit8 v24, v3, -0x1
+
+    :goto_18d
+    if-ltz v24, :cond_1c4
+
+    move-object/from16 v0, v30
+
+    move/from16 v1, v24
+
+    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v28
+
+    check-cast v28, Lcom/android/server/am/ProcessRecord;
+
+    const-string v3, "ActivityManager"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Removing system update proc: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    move-object/from16 v0, v28
+
+    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/4 v3, 0x1
+
+    const/4 v4, 0x0
+
+    const-string v5, "system update done"
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v28
+
+    invoke-direct {v0, v1, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
+    :try_end_1be
+    .catchall {:try_start_187 .. :try_end_1be} :catchall_2a4
+
+    add-int/lit8 v24, v24, -0x1
+
+    goto :goto_18d
+
+    :catchall_1c1
+    move-exception v3
+
+    :goto_1c2
+    :try_start_1c2
+    monitor-exit v4
+    :try_end_1c3
+    .catchall {:try_start_1c2 .. :try_end_1c3} :catchall_1c1
+
+    throw v3
+
+    :cond_1c4
+    const/4 v3, 0x1
+
+    :try_start_1c5
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    monitor-exit p0
+    :try_end_1ca
+    .catchall {:try_start_1c5 .. :try_end_1ca} :catchall_2a4
+
+    const-string v3, "ActivityManager"
+
+    const-string v4, "System now ready"
+
+    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v3, 0xbe0
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v4
+
+    invoke-static {v3, v4, v5}, Landroid/util/EventLog;->writeEvent(IJ)I
+
+    monitor-enter p0
+
+    :try_start_1db
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+
+    const/4 v4, 0x1
+
+    if-ne v3, v4, :cond_259
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v3
+
+    new-instance v4, Landroid/content/Intent;
+
+    const-string v5, "android.intent.action.FACTORY_TEST"
+
+    invoke-direct {v4, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    const/16 v5, 0x400
+
+    invoke-virtual {v3, v4, v5}, Landroid/content/pm/PackageManager;->resolveActivity(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;
+
+    move-result-object v31
+
+    const/16 v23, 0x0
+
+    if-eqz v31, :cond_2b8
+
+    move-object/from16 v0, v31
+
+    iget-object v0, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
+
+    move-object/from16 v18, v0
+
+    move-object/from16 v0, v18
+
+    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;
+
+    move-object/from16 v19, v0
+
+    move-object/from16 v0, v19
+
+    iget v3, v0, Landroid/content/pm/ApplicationInfo;->flags:I
+
+    and-int/lit8 v3, v3, 0x1
+
+    if-eqz v3, :cond_2a7
+
+    const-string v3, "android.intent.action.FACTORY_TEST"
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;
+
+    new-instance v3, Landroid/content/ComponentName;
+
+    move-object/from16 v0, v19
+
+    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    move-object/from16 v0, v18
+
+    iget-object v5, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;
+
+    invoke-direct {v3, v4, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;
+
+    :goto_22b
+    if-eqz v23, :cond_259
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;
+
+    const/4 v3, 0x0
+
+    move-object/from16 v0, p0
+
+    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;
+
+    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;
+
+    move-result-object v27
+
+    const/4 v3, 0x3
+
+    move-object/from16 v0, v27
+
+    iput v3, v0, Landroid/os/Message;->what:I
+
+    invoke-virtual/range {v27 .. v27}, Landroid/os/Message;->getData()Landroid/os/Bundle;
+
+    move-result-object v3
+
+    const-string v4, "msg"
+
+    move-object/from16 v0, v23
+
+    invoke-virtual {v3, v4, v0}, Landroid/os/Bundle;->putCharSequence(Ljava/lang/String;Ljava/lang/CharSequence;)V
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v0, v27
+
+    invoke-virtual {v3, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    :cond_259
+    monitor-exit p0
+    :try_end_25a
+    .catchall {:try_start_1db .. :try_end_25a} :catchall_2c9
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V
+
+    if-eqz p1, :cond_262
+
+    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V
+
+    :cond_262
+    monitor-enter p0
+
+    :try_start_263
+    move-object/from16 v0, p0
+
+    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
+    :try_end_267
+    .catchall {:try_start_263 .. :try_end_267} :catchall_2fa
+
+    const/4 v4, 0x1
+
+    if-eq v3, v4, :cond_2cd
+
+    :try_start_26a
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    const/16 v4, 0x400
+
+    invoke-interface {v3, v4}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Ljava/util/List;
+
+    move-result-object v20
+
+    if-eqz v20, :cond_2cd
+
+    invoke-interface/range {v20 .. v20}, Ljava/util/List;->size()I
+
+    move-result v17
+
+    const/16 v24, 0x0
+
+    :goto_27c
+    move/from16 v0, v24
+
+    move/from16 v1, v17
+
+    if-ge v0, v1, :cond_2cd
+
+    move-object/from16 v0, v20
+
+    move/from16 v1, v24
+
+    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;
+
+    move-result-object v25
+
+    check-cast v25, Landroid/content/pm/ApplicationInfo;
+
+    if-eqz v25, :cond_2a1
+
+    move-object/from16 v0, v25
+
+    iget-object v3, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    const-string v4, "android"
+
+    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-nez v3, :cond_2a1
+
+    move-object/from16 v0, p0
+
+    move-object/from16 v1, v25
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;)Lcom/android/server/am/ProcessRecord;
+    :try_end_2a1
+    .catchall {:try_start_26a .. :try_end_2a1} :catchall_2fa
+    .catch Landroid/os/RemoteException; {:try_start_26a .. :try_end_2a1} :catch_2cc
+
+    :cond_2a1
+    add-int/lit8 v24, v24, 0x1
+
+    goto :goto_27c
+
+    :catchall_2a4
+    move-exception v3
+
+    :try_start_2a5
+    monitor-exit p0
+    :try_end_2a6
+    .catchall {:try_start_2a5 .. :try_end_2a6} :catchall_2a4
+
+    throw v3
+
+    :cond_2a7
+    :try_start_2a7
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;
+
+    move-result-object v3
+
+    const v4, 0x1040333
+
+    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;
+
+    move-result-object v23
+
+    goto/16 :goto_22b
+
+    :cond_2b8
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v3}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;
+
+    move-result-object v3
+
+    const v4, 0x1040334
+
+    invoke-virtual {v3, v4}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;
+
+    move-result-object v23
+
+    goto/16 :goto_22b
+
+    :catchall_2c9
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_2cb
+    .catchall {:try_start_2a7 .. :try_end_2cb} :catchall_2c9
+
+    throw v3
+
+    :catch_2cc
+    move-exception v3
+
+    :cond_2cd
+    const/4 v3, 0x1
+
+    :try_start_2ce
+    move-object/from16 v0, p0
+
+    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z
+    :try_end_2d2
+    .catchall {:try_start_2ce .. :try_end_2d2} :catchall_2fa
+
+    :try_start_2d2
+    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;
+
+    move-result-object v3
+
+    invoke-interface {v3}, Landroid/content/pm/IPackageManager;->hasSystemUidErrors()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_2ef
+
+    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;
+
+    move-result-object v27
+
+    const/16 v3, 0xe
+
+    move-object/from16 v0, v27
+
+    iput v3, v0, Landroid/os/Message;->what:I
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v0, v27
+
+    invoke-virtual {v3, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+    :try_end_2ef
+    .catchall {:try_start_2d2 .. :try_end_2ef} :catchall_2fa
+    .catch Landroid/os/RemoteException; {:try_start_2d2 .. :try_end_2ef} :catch_2fd
+
+    :cond_2ef
+    :goto_2ef
+    :try_start_2ef
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    monitor-exit p0
+
+    goto/16 :goto_d
+
+    :catchall_2fa
+    move-exception v3
+
+    monitor-exit p0
+    :try_end_2fc
+    .catchall {:try_start_2ef .. :try_end_2fc} :catchall_2fa
+
+    throw v3
+
+    :catch_2fd
+    move-exception v3
+
+    goto :goto_2ef
+
+    :catchall_2ff
+    move-exception v3
+
+    move-object/from16 v29, v30
+
+    goto/16 :goto_1c2
+
+    :catch_304
+    move-exception v3
+
+    goto/16 :goto_32
+
+    :cond_307
+    move-object/from16 v29, v30
+
+    goto/16 :goto_177
+
+    :cond_30b
+    move-object/from16 v29, v30
+
+    goto/16 :goto_17e
+.end method
+
+.method public testIsSystemReady()Z
+    .registers 2
+
+    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
+
+    return v0
+.end method
+
+.method final trimApplications()V
+    .registers 7
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v1, v2, -0x1
+
+    :goto_9
+    if-ltz v1, :cond_b4
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v0
+
+    check-cast v0, Lcom/android/server/am/ProcessRecord;
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    if-nez v2, :cond_a6
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;
+
+    if-nez v2, :cond_a6
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v2}, Ljava/util/HashSet;->size()I
+
+    move-result v2
+
+    if-nez v2, :cond_a6
+
+    const-string v3, "ActivityManager"
+
+    new-instance v2, Ljava/lang/StringBuilder;
+
+    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Exiting empty application process "
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v4, " ("
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v2, :cond_aa
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v2}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v2
+
+    :goto_4a
+    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    const-string v4, ")\n"
+
+    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {v3, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    if-lez v2, :cond_ac
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    if-eq v2, v3, :cond_ac
+
+    const/16 v2, 0x7547
+
+    const/4 v3, 0x4
+
+    new-array v3, v3, [Ljava/lang/Object;
+
+    const/4 v4, 0x0
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x1
+
+    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x2
+
+    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v5
+
+    aput-object v5, v3, v4
+
+    const/4 v4, 0x3
+
+    const-string v5, "empty"
+
+    aput-object v5, v3, v4
+
+    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v2}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    :goto_8e
+    const/4 v2, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v4, -0x1
+
+    invoke-direct {p0, v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v2, :cond_a6
+
+    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z
+
+    if-eqz v2, :cond_a6
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;
+
+    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;)Lcom/android/server/am/ProcessRecord;
+    :try_end_a6
+    .catchall {:try_start_1 .. :try_end_a6} :catchall_b9
+
+    :cond_a6
+    add-int/lit8 v1, v1, -0x1
+
+    goto/16 :goto_9
+
+    :cond_aa
+    const/4 v2, 0x0
+
+    goto :goto_4a
+
+    :cond_ac
+    :try_start_ac
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleExit()V
+    :try_end_b1
+    .catchall {:try_start_ac .. :try_end_b1} :catchall_b9
+    .catch Ljava/lang/Exception; {:try_start_ac .. :try_end_b1} :catch_b2
+
+    goto :goto_8e
+
+    :catch_b2
+    move-exception v2
+
+    goto :goto_8e
+
+    :cond_b4
+    :try_start_b4
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_b9
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_bb
+    .catchall {:try_start_b4 .. :try_end_bb} :catchall_b9
+
+    throw v2
+.end method
+
+.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
+    .registers 7
+
+    if-nez p1, :cond_a
+
+    const-string v2, "ActivityManager"
+
+    const-string v3, "unbind backup agent for null app"
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    :goto_9
+    return-void
+
+    :cond_a
+    monitor-enter p0
+
+    :try_start_b
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    if-nez v2, :cond_1b
+
+    const-string v2, "ActivityManager"
+
+    const-string v3, "Unbinding backup agent with no active backup"
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    goto :goto_9
+
+    :catchall_18
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_1a
+    .catchall {:try_start_b .. :try_end_1a} :catchall_18
+
+    throw v2
+
+    :cond_1b
+    :try_start_1b
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;
+
+    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_45
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Unbind of "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " but is not the current backup target"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    goto :goto_9
+
+    :cond_45
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    iget-object v1, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    const/4 v2, 0x0
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;
+
+    const/4 v2, 0x0
+
+    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;
+
+    invoke-direct {p0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+    :try_end_54
+    .catchall {:try_start_1b .. :try_end_54} :catchall_18
+
+    if-eqz v2, :cond_5f
+
+    :try_start_56
+    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
+
+    move-result-object v3
+
+    invoke-interface {v2, p1, v3}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;)V
+    :try_end_5f
+    .catchall {:try_start_56 .. :try_end_5f} :catchall_18
+    .catch Ljava/lang/Exception; {:try_start_56 .. :try_end_5f} :catch_61
+
+    :cond_5f
+    :goto_5f
+    :try_start_5f
+    monitor-exit p0
+
+    goto :goto_9
+
+    :catch_61
+    move-exception v0
+
+    const-string v2, "ActivityManager"
+
+    const-string v3, "Exception when unbinding backup agent:"
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+    :try_end_6c
+    .catchall {:try_start_5f .. :try_end_6c} :catchall_18
+
+    goto :goto_5f
+.end method
+
+.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
+    .registers 13
+
+    const/4 v8, 0x1
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v7
+
+    if-ne v7, v8, :cond_11
+
+    new-instance v7, Ljava/lang/IllegalArgumentException;
+
+    const-string v8, "File descriptors passed in Intent"
+
+    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    instance-of v7, p1, Lcom/android/server/am/ServiceRecord;
+
+    if-nez v7, :cond_21
+
+    new-instance v7, Ljava/lang/IllegalArgumentException;
+
+    const-string v8, "Invalid service token"
+
+    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v7
+
+    :catchall_1e
+    move-exception v7
+
+    monitor-exit p0
+    :try_end_20
+    .catchall {:try_start_12 .. :try_end_20} :catchall_1e
+
+    throw v7
+
+    :cond_21
+    :try_start_21
+    move-object v0, p1
+
+    check-cast v0, Lcom/android/server/am/ServiceRecord;
+
+    move-object v6, v0
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v4
+
+    if-eqz v6, :cond_54
+
+    new-instance v2, Landroid/content/Intent$FilterComparison;
+
+    invoke-direct {v2, p2}, Landroid/content/Intent$FilterComparison;-><init>(Landroid/content/Intent;)V
+
+    iget-object v7, v6, Lcom/android/server/am/ServiceRecord;->bindings:Ljava/util/HashMap;
+
+    invoke-virtual {v7, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/IntentBindRecord;
+
+    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStoppingServices:Ljava/util/ArrayList;
+
+    invoke-virtual {v7, v6}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z
+
+    move-result v3
+
+    if-eqz v1, :cond_4e
+
+    iget-object v7, v1, Lcom/android/server/am/IntentBindRecord;->apps:Ljava/util/HashMap;
+
+    invoke-virtual {v7}, Ljava/util/HashMap;->size()I
+
+    move-result v7
+
+    if-lez v7, :cond_56
+
+    if-nez v3, :cond_56
+
+    const/4 v7, 0x1
+
+    invoke-direct {p0, v6, v1, v7}, Lcom/android/server/am/ActivityManagerService;->requestServiceBindingLocked(Lcom/android/server/am/ServiceRecord;Lcom/android/server/am/IntentBindRecord;Z)Z
+
+    :cond_4e
+    :goto_4e
+    invoke-virtual {p0, v6, v3}, Lcom/android/server/am/ActivityManagerService;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;Z)V
+
+    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :cond_54
+    monitor-exit p0
+
+    return-void
+
+    :cond_56
+    const/4 v7, 0x1
+
+    iput-boolean v7, v1, Lcom/android/server/am/IntentBindRecord;->doRebind:Z
+    :try_end_59
+    .catchall {:try_start_21 .. :try_end_59} :catchall_1e
+
+    goto :goto_4e
+.end method
+
+.method public unbindService(Landroid/app/IServiceConnection;)Z
+    .registers 11
+
+    const/4 v5, 0x0
+
+    monitor-enter p0
+
+    :try_start_2
+    invoke-interface {p1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mServiceConnections:Ljava/util/HashMap;
+
+    invoke-virtual {v6, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Ljava/util/ArrayList;
+
+    if-nez v1, :cond_2e
+
+    const-string v6, "ActivityManager"
+
+    new-instance v7, Ljava/lang/StringBuilder;
+
+    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v8, "Unbind failed: could not find connection for "
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-interface {p1}, Landroid/app/IServiceConnection;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v8
+
+    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v7
+
+    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v7
+
+    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    monitor-exit p0
+
+    :goto_2d
+    return v5
+
+    :cond_2e
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v2
+
+    :cond_32
+    :goto_32
+    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I
+
+    move-result v5
+
+    if-lez v5, :cond_59
+
+    const/4 v5, 0x0
+
+    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ConnectionRecord;
+
+    const/4 v5, 0x0
+
+    const/4 v6, 0x0
+
+    invoke-virtual {p0, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->removeConnectionLocked(Lcom/android/server/am/ConnectionRecord;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;)V
+
+    iget-object v5, v4, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v5, :cond_32
+
+    iget-object v5, v4, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;
+
+    iget-object v5, v5, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    invoke-direct {p0, v5}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
+
+    goto :goto_32
+
+    :catchall_56
+    move-exception v5
+
+    monitor-exit p0
+    :try_end_58
+    .catchall {:try_start_2 .. :try_end_58} :catchall_56
+
+    throw v5
+
+    :cond_59
+    :try_start_59
+    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+    :try_end_5d
+    .catchall {:try_start_59 .. :try_end_5d} :catchall_56
+
+    const/4 v5, 0x1
+
+    goto :goto_2d
+.end method
+
+.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;)V
+    .registers 9
+
+    if-eqz p2, :cond_11
+
+    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v4
+
+    const/4 v5, 0x1
+
+    if-ne v4, v5, :cond_11
+
+    new-instance v4, Ljava/lang/IllegalArgumentException;
+
+    const-string v5, "File descriptors passed in Intent"
+
+    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :cond_11
+    monitor-enter p0
+
+    :try_start_12
+    const-string v4, "android.permission.BROADCAST_STICKY"
+
+    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I
+
+    move-result v4
+
+    if-eqz v4, :cond_59
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v5, "Permission Denial: unbroadcastIntent() from pid="
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingPid()I
+
+    move-result v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, ", uid="
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, " requires "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    const-string v5, "android.permission.BROADCAST_STICKY"
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    const-string v4, "ActivityManager"
+
+    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v4, Ljava/lang/SecurityException;
+
+    invoke-direct {v4, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V
+
+    throw v4
+
+    :catchall_56
+    move-exception v4
+
+    monitor-exit p0
+    :try_end_58
+    .catchall {:try_start_12 .. :try_end_58} :catchall_56
+
+    throw v4
+
+    :cond_59
+    :try_start_59
+    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Ljava/util/HashMap;
+
+    invoke-virtual {p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Ljava/util/ArrayList;
+
+    if-eqz v2, :cond_7d
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v0
+
+    const/4 v1, 0x0
+
+    :goto_6c
+    if-ge v1, v0, :cond_7d
+
+    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Landroid/content/Intent;
+
+    invoke-virtual {p2, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z
+
+    move-result v4
+
+    if-eqz v4, :cond_7f
+
+    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;
+
+    :cond_7d
+    monitor-exit p0
+    :try_end_7e
+    .catchall {:try_start_59 .. :try_end_7e} :catchall_56
+
+    return-void
+
+    :cond_7f
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_6c
+.end method
+
+.method public unhandledBack()V
+    .registers 10
+
+    const-string v0, "android.permission.FORCE_BACK"
+
+    const-string v1, "unhandledBack()"
+
+    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    :try_start_8
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I
+
+    move-result v6
+
+    const/4 v0, 0x1
+
+    if-le v6, v0, :cond_31
+
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v7
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v1, v1, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    add-int/lit8 v2, v6, -0x1
+
+    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+
+    add-int/lit8 v2, v6, -0x1
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const-string v5, "unhandled-back"
+
+    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;IILandroid/content/Intent;Ljava/lang/String;)Z
+
+    invoke-static {v7, v8}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    :cond_31
+    monitor-exit p0
+
+    return-void
+
+    :catchall_33
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_35
+    .catchall {:try_start_8 .. :try_end_35} :catchall_33
+
+    throw v0
+.end method
+
+.method public unregisterActivityWatcher(Landroid/app/IActivityWatcher;)V
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWatchers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_8
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_a
+    .catchall {:try_start_1 .. :try_end_a} :catchall_8
+
+    throw v0
+.end method
+
+.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
+    .registers 3
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;
+
+    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z
+
+    return-void
+.end method
+
+.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
+    .registers 15
+
+    const/4 v12, 0x0
+
+    const/4 v7, 0x0
+
+    monitor-enter p0
+
+    :try_start_3
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;
+
+    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v1
+
+    invoke-virtual {v0, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;
+
+    move-result-object v11
+
+    check-cast v11, Lcom/android/server/am/ReceiverList;
+
+    if-eqz v11, :cond_48
+
+    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    if-eqz v0, :cond_29
+
+    iget-object v10, v11, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;
+
+    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v1
+
+    iget v2, v10, Lcom/android/server/am/BroadcastRecord;->resultCode:I
+
+    iget-object v3, v10, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;
+
+    iget-object v4, v10, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;
+
+    iget-boolean v5, v10, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z
+
+    const/4 v6, 0x1
+
+    move-object v0, p0
+
+    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z
+
+    move-result v7
+
+    :cond_29
+    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v0, :cond_34
+
+    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Ljava/util/HashSet;
+
+    invoke-virtual {v0, v11}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z
+
+    :cond_34
+    invoke-virtual {p0, v11}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
+
+    iget-boolean v0, v11, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z
+
+    if-eqz v0, :cond_48
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, v11, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z
+
+    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;
+
+    invoke-interface {v0}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;
+
+    move-result-object v0
+
+    const/4 v1, 0x0
+
+    invoke-interface {v0, v11, v1}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z
+
+    :cond_48
+    monitor-exit p0
+
+    if-nez v7, :cond_4f
+
+    :goto_4b
+    return-void
+
+    :catchall_4c
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_4e
+    .catchall {:try_start_3 .. :try_end_4e} :catchall_4c
+
+    throw v0
+
+    :cond_4f
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v8
+
+    invoke-direct {p0, v12}, Lcom/android/server/am/ActivityManagerService;->processNextBroadcast(Z)V
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
+
+    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    goto :goto_4b
+.end method
+
+.method public updateConfiguration(Landroid/content/res/Configuration;)V
+    .registers 7
+
+    const-string v2, "android.permission.CHANGE_CONFIGURATION"
+
+    const-string v3, "updateConfiguration()"
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    monitor-enter p0
+
+    if-nez p1, :cond_14
+
+    :try_start_a
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    if-eqz v2, :cond_14
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration()Landroid/content/res/Configuration;
+
+    move-result-object p1
+
+    :cond_14
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    if-eqz v2, :cond_1f
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V
+
+    :cond_1f
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    if-eqz p1, :cond_28
+
+    invoke-static {p1}, Landroid/provider/Settings$System;->clearConfiguration(Landroid/content/res/Configuration;)V
+
+    :cond_28
+    const/4 v2, 0x0
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_33
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_35
+    .catchall {:try_start_a .. :try_end_35} :catchall_33
+
+    throw v2
+.end method
+
+.method public updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
+    .registers 33
+
+    const/16 v22, 0x0
+
+    const/16 v25, 0x1
+
+    if-eqz p1, :cond_158
+
+    new-instance v27, Landroid/content/res/Configuration;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    move-object/from16 v0, v27
+
+    invoke-direct {v0, v2}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
+
+    move-object/from16 v0, v27
+
+    move-object/from16 v1, p1
+
+    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I
+
+    move-result v22
+
+    if-eqz v22, :cond_158
+
+    const/16 v2, 0xa9f
+
+    move/from16 v0, v22
+
+    invoke-static {v2, v0}, Landroid/util/EventLog;->writeEvent(II)I
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;
+
+    if-eqz v2, :cond_48
+
+    if-nez p4, :cond_48
+
+    move-object/from16 v0, p1
+
+    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget-object v4, v4, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;
+
+    invoke-virtual {v2, v4}, Ljava/util/Locale;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_113
+
+    const/4 v2, 0x1
+
+    :goto_3f
+    move-object/from16 v0, p1
+
+    iget-boolean v4, v0, Landroid/content/res/Configuration;->userSetLocale:Z
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->saveLocaleLocked(Ljava/util/Locale;ZZ)V
+
+    :cond_48
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Landroid/content/res/Configuration;->customTheme:Landroid/content/res/CustomTheme;
+
+    if-eqz v2, :cond_68
+
+    move-object/from16 v0, p1
+
+    iget-object v3, v0, Landroid/content/res/Configuration;->customTheme:Landroid/content/res/CustomTheme;
+
+    move-object/from16 v0, p1
+
+    iget-object v2, v0, Landroid/content/res/Configuration;->customTheme:Landroid/content/res/CustomTheme;
+
+    move-object/from16 v0, p0
+
+    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    iget-object v4, v4, Landroid/content/res/Configuration;->customTheme:Landroid/content/res/CustomTheme;
+
+    invoke-virtual {v2, v4}, Landroid/content/res/CustomTheme;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_116
+
+    const/4 v2, 0x1
+
+    :goto_63
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v3, v2}, Lcom/android/server/am/ActivityManagerService;->saveThemeResourceLocked(Landroid/content/res/CustomTheme;Z)V
+
+    :cond_68
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    add-int/lit8 v2, v2, 0x1
+
+    move-object/from16 v0, p0
+
+    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    if-gtz v2, :cond_7d
+
+    const/4 v2, 0x1
+
+    move-object/from16 v0, p0
+
+    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    :cond_7d
+    move-object/from16 v0, p0
+
+    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I
+
+    move-object/from16 v0, v27
+
+    iput v2, v0, Landroid/content/res/Configuration;->seq:I
+
+    move-object/from16 v0, v27
+
+    move-object/from16 v1, p0
+
+    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Config changed: "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    move-object/from16 v0, v27
+
+    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v23, Landroid/content/res/Configuration;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    move-object/from16 v0, v23
+
+    invoke-direct {v0, v2}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
+
+    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;
+
+    move-result-object v20
+
+    if-eqz v20, :cond_bd
+
+    move-object/from16 v0, v20
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v1}, Lcom/android/server/AttributeCache;->updateConfiguration(Landroid/content/res/Configuration;)V
+
+    :cond_bd
+    sget-object v2, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;
+
+    move-object/from16 v0, v23
+
+    invoke-virtual {v2, v0}, Landroid/app/ActivityThread;->applyConfigurationToResources(Landroid/content/res/Configuration;)V
+
+    if-eqz p3, :cond_e9
+
+    invoke-static/range {v22 .. v22}, Landroid/provider/Settings$System;->hasInterestingConfigurationChanges(I)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_e9
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    const/4 v3, 0x4
+
+    invoke-virtual {v2, v3}, Landroid/os/Handler;->obtainMessage(I)Landroid/os/Message;
+
+    move-result-object v26
+
+    new-instance v2, Landroid/content/res/Configuration;
+
+    move-object/from16 v0, v23
+
+    invoke-direct {v2, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V
+
+    move-object/from16 v0, v26
+
+    iput-object v2, v0, Landroid/os/Message;->obj:Ljava/lang/Object;
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Landroid/os/Handler;
+
+    move-object/from16 v0, v26
+
+    invoke-virtual {v2, v0}, Landroid/os/Handler;->sendMessage(Landroid/os/Message;)Z
+
+    :cond_e9
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I
+
+    move-result v2
+
+    add-int/lit8 v24, v2, -0x1
+
+    :goto_f3
+    if-ltz v24, :cond_119
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    move/from16 v0, v24
+
+    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v21
+
+    check-cast v21, Lcom/android/server/am/ProcessRecord;
+
+    :try_start_101
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v2, :cond_110
+
+    move-object/from16 v0, v21
+
+    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    move-object/from16 v0, v23
+
+    invoke-interface {v2, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationChanged(Landroid/content/res/Configuration;)V
+    :try_end_110
+    .catch Ljava/lang/Exception; {:try_start_101 .. :try_end_110} :catch_192
+
+    :cond_110
+    :goto_110
+    add-int/lit8 v24, v24, -0x1
+
+    goto :goto_f3
+
+    :cond_113
+    const/4 v2, 0x0
+
+    goto/16 :goto_3f
+
+    :cond_116
+    const/4 v2, 0x0
+
+    goto/16 :goto_63
+
+    :cond_119
+    new-instance v5, Landroid/content/Intent;
+
+    const-string v2, "android.intent.action.CONFIGURATION_CHANGED"
+
+    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    const/high16 v2, 0x6000
+
+    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    const/4 v3, 0x0
+
+    const/4 v4, 0x0
+
+    const/4 v6, 0x0
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    const/4 v9, 0x0
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    sget v14, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    const/16 v15, 0x3e8
+
+    move-object/from16 v2, p0
+
+    invoke-direct/range {v2 .. v15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    and-int/lit8 v2, v22, 0x4
+
+    if-eqz v2, :cond_158
+
+    const/4 v7, 0x0
+
+    const/4 v8, 0x0
+
+    new-instance v9, Landroid/content/Intent;
+
+    const-string v2, "android.intent.action.LOCALE_CHANGED"
+
+    invoke-direct {v9, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V
+
+    const/4 v10, 0x0
+
+    const/4 v11, 0x0
+
+    const/4 v12, 0x0
+
+    const/4 v13, 0x0
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const/16 v16, 0x0
+
+    const/16 v17, 0x0
+
+    sget v18, Lcom/android/server/am/ActivityManagerService;->MY_PID:I
+
+    const/16 v19, 0x3e8
+
+    move-object/from16 v6, p0
+
+    invoke-direct/range {v6 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZII)I
+
+    :cond_158
+    if-eqz v22, :cond_165
+
+    if-nez p2, :cond_165
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v3, 0x0
+
+    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;
+
+    move-result-object p2
+
+    :cond_165
+    if-eqz p2, :cond_17e
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v22
+
+    invoke-virtual {v2, v0, v1}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z
+
+    move-result v25
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    move-object/from16 v0, p2
+
+    move/from16 v1, v22
+
+    invoke-virtual {v2, v0, v1}, Lcom/android/server/am/ActivityStack;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V
+
+    :cond_17e
+    if-eqz p1, :cond_191
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    if-eqz v2, :cond_191
+
+    move-object/from16 v0, p0
+
+    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    move-object/from16 v0, p0
+
+    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;
+
+    invoke-virtual {v2, v3}, Lcom/android/server/wm/WindowManagerService;->setNewConfiguration(Landroid/content/res/Configuration;)V
+
+    :cond_191
+    return v25
+
+    :catch_192
+    move-exception v2
+
+    goto/16 :goto_110
+.end method
+
+.method updateCpuStats()V
+    .registers 7
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v0
+
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;
+
+    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicLong;->get()J
+
+    move-result-wide v2
+
+    const-wide/16 v4, 0x1388
+
+    sub-long v4, v0, v4
+
+    cmp-long v2, v2, v4
+
+    if-ltz v2, :cond_13
+
+    :cond_12
+    :goto_12
+    return-void
+
+    :cond_13
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;
+
+    const/4 v3, 0x1
+
+    const/4 v4, 0x0
+
+    invoke-virtual {v2, v3, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_12
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsThread:Ljava/lang/Thread;
+
+    monitor-enter v3
+
+    :try_start_20
+    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsThread:Ljava/lang/Thread;
+
+    invoke-virtual {v2}, Ljava/lang/Object;->notify()V
+
+    monitor-exit v3
+
+    goto :goto_12
+
+    :catchall_27
+    move-exception v2
+
+    monitor-exit v3
+    :try_end_29
+    .catchall {:try_start_20 .. :try_end_29} :catchall_27
+
+    throw v2
+.end method
+
+.method updateCpuStatsNow()V
+    .registers 33
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsThread:Ljava/lang/Thread;
+
+    move-object/from16 v26, v0
+
+    monitor-enter v26
+
+    :try_start_7
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStatsMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;
+
+    move-object/from16 v25, v0
+
+    const/16 v27, 0x0
+
+    move-object/from16 v0, v25
+
+    move/from16 v1, v27
+
+    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V
+
+    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J
+
+    move-result-wide v11
+
+    const/4 v6, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Ljava/util/concurrent/atomic/AtomicLong;->get()J
+
+    move-result-wide v27
+
+    const-wide/16 v29, 0x1388
+
+    sub-long v29, v11, v29
+
+    cmp-long v25, v27, v29
+
+    if-gez v25, :cond_ff
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;
+
+    move-object/from16 v25, v0
+
+    move-object/from16 v0, v25
+
+    invoke-virtual {v0, v11, v12}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V
+
+    const/4 v6, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->update()V
+
+    const-string v25, "true"
+
+    const-string v27, "events.cpu"
+
+    invoke-static/range {v27 .. v27}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v27
+
+    move-object/from16 v0, v25
+
+    move-object/from16 v1, v27
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v25
+
+    if-eqz v25, :cond_ff
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastUserTime()I
+
+    move-result v24
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastSystemTime()I
+
+    move-result v20
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastIoWaitTime()I
+
+    move-result v9
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastIrqTime()I
+
+    move-result v10
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastSoftIrqTime()I
+
+    move-result v18
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastIdleTime()I
+
+    move-result v8
+
+    add-int v25, v24, v20
+
+    add-int v25, v25, v9
+
+    add-int v25, v25, v10
+
+    add-int v25, v25, v18
+
+    add-int v21, v25, v8
+
+    if-nez v21, :cond_9e
+
+    const/16 v21, 0x1
+
+    :cond_9e
+    const/16 v25, 0xaa1
+
+    const/16 v27, 0x6
+
+    move/from16 v0, v27
+
+    new-array v0, v0, [Ljava/lang/Object;
+
+    move-object/from16 v27, v0
+
+    const/16 v28, 0x0
+
+    add-int v29, v24, v20
+
+    add-int v29, v29, v9
+
+    add-int v29, v29, v10
+
+    add-int v29, v29, v18
+
+    mul-int/lit8 v29, v29, 0x64
+
+    div-int v29, v29, v21
+
+    invoke-static/range {v29 .. v29}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v29
+
+    aput-object v29, v27, v28
+
+    const/16 v28, 0x1
+
+    mul-int/lit8 v29, v24, 0x64
+
+    div-int v29, v29, v21
+
+    invoke-static/range {v29 .. v29}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v29
+
+    aput-object v29, v27, v28
+
+    const/16 v28, 0x2
+
+    mul-int/lit8 v29, v20, 0x64
+
+    div-int v29, v29, v21
+
+    invoke-static/range {v29 .. v29}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v29
+
+    aput-object v29, v27, v28
+
+    const/16 v28, 0x3
+
+    mul-int/lit8 v29, v9, 0x64
+
+    div-int v29, v29, v21
+
+    invoke-static/range {v29 .. v29}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v29
+
+    aput-object v29, v27, v28
+
+    const/16 v28, 0x4
+
+    mul-int/lit8 v29, v10, 0x64
+
+    div-int v29, v29, v21
+
+    invoke-static/range {v29 .. v29}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v29
+
+    aput-object v29, v27, v28
+
+    const/16 v28, 0x5
+
+    mul-int/lit8 v29, v18, 0x64
+
+    div-int v29, v29, v21
+
+    invoke-static/range {v29 .. v29}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v29
+
+    aput-object v29, v27, v28
+
+    move/from16 v0, v25
+
+    move-object/from16 v1, v27
+
+    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    :cond_ff
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->getLastCpuSpeedTimes()[J
+
+    move-result-object v5
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v4
+
+    monitor-enter v4
+    :try_end_114
+    .catchall {:try_start_7 .. :try_end_114} :catchall_1cf
+
+    :try_start_114
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move-object/from16 v27, v0
+
+    monitor-enter v27
+    :try_end_11b
+    .catchall {:try_start_114 .. :try_end_11b} :catchall_1cc
+
+    if-eqz v6, :cond_20f
+
+    :try_start_11d
+    move-object/from16 v0, p0
+
+    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z
+
+    move/from16 v25, v0
+
+    if-eqz v25, :cond_20f
+
+    invoke-virtual {v4}, Lcom/android/internal/os/BatteryStatsImpl;->startAddingCpuLocked()I
+
+    move-result v15
+
+    const/16 v23, 0x0
+
+    const/16 v22, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/ProcessStats;->countStats()I
+
+    move-result v3
+
+    const/4 v7, 0x0
+
+    :goto_138
+    if-ge v7, v3, :cond_208
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/internal/os/ProcessStats;
+
+    move-object/from16 v25, v0
+
+    move-object/from16 v0, v25
+
+    invoke-virtual {v0, v7}, Lcom/android/internal/os/ProcessStats;->getStats(I)Lcom/android/internal/os/ProcessStats$Stats;
+
+    move-result-object v19
+
+    move-object/from16 v0, v19
+
+    iget-boolean v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->working:Z
+
+    move/from16 v25, v0
+
+    if-nez v25, :cond_151
+
+    :cond_14e
+    :goto_14e
+    add-int/lit8 v7, v7, 0x1
+
+    goto :goto_138
+
+    :cond_151
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;
+
+    move-object/from16 v25, v0
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->pid:I
+
+    move/from16 v28, v0
+
+    move-object/from16 v0, v25
+
+    move/from16 v1, v28
+
+    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;
+
+    move-result-object v16
+
+    check-cast v16, Lcom/android/server/am/ProcessRecord;
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_utime:I
+
+    move/from16 v25, v0
+
+    mul-int v25, v25, v15
+
+    div-int/lit8 v14, v25, 0x64
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_stime:I
+
+    move/from16 v25, v0
+
+    mul-int v25, v25, v15
+
+    div-int/lit8 v13, v25, 0x64
+
+    add-int v23, v23, v14
+
+    add-int v22, v22, v13
+
+    if-eqz v16, :cond_1d2
+
+    move-object/from16 v0, v16
+
+    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
+
+    move-object/from16 v17, v0
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_utime:I
+
+    move/from16 v25, v0
+
+    sub-int v25, v25, v14
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_stime:I
+
+    move/from16 v28, v0
+
+    sub-int v28, v28, v13
+
+    move-object/from16 v0, v17
+
+    move/from16 v1, v25
+
+    move/from16 v2, v28
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addSpeedStepTimes([J)V
+
+    move-object/from16 v0, v16
+
+    iget-wide v0, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
+
+    move-wide/from16 v28, v0
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_utime:I
+
+    move/from16 v25, v0
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_stime:I
+
+    move/from16 v30, v0
+
+    add-int v25, v25, v30
+
+    mul-int/lit8 v25, v25, 0xa
+
+    move/from16 v0, v25
+
+    int-to-long v0, v0
+
+    move-wide/from16 v30, v0
+
+    add-long v28, v28, v30
+
+    move-wide/from16 v0, v28
+
+    move-object/from16 v2, v16
+
+    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->curCpuTime:J
+
+    goto :goto_14e
+
+    :catchall_1c9
+    move-exception v25
+
+    monitor-exit v27
+    :try_end_1cb
+    .catchall {:try_start_11d .. :try_end_1cb} :catchall_1c9
+
+    :try_start_1cb
+    throw v25
+
+    :catchall_1cc
+    move-exception v25
+
+    monitor-exit v4
+    :try_end_1ce
+    .catchall {:try_start_1cb .. :try_end_1ce} :catchall_1cc
+
+    :try_start_1ce
+    throw v25
+
+    :catchall_1cf
+    move-exception v25
+
+    monitor-exit v26
+    :try_end_1d1
+    .catchall {:try_start_1ce .. :try_end_1d1} :catchall_1cf
+
+    throw v25
+
+    :cond_1d2
+    :try_start_1d2
+    move-object/from16 v0, v19
+
+    iget-object v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->name:Ljava/lang/String;
+
+    move-object/from16 v25, v0
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->pid:I
+
+    move/from16 v28, v0
+
+    move-object/from16 v0, v25
+
+    move/from16 v1, v28
+
+    invoke-virtual {v4, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(Ljava/lang/String;I)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
+
+    move-result-object v17
+
+    if-eqz v17, :cond_14e
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_utime:I
+
+    move/from16 v25, v0
+
+    sub-int v25, v25, v14
+
+    move-object/from16 v0, v19
+
+    iget v0, v0, Lcom/android/internal/os/ProcessStats$Stats;->rel_stime:I
+
+    move/from16 v28, v0
+
+    sub-int v28, v28, v13
+
+    move-object/from16 v0, v17
+
+    move/from16 v1, v25
+
+    move/from16 v2, v28
+
+    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V
+
+    move-object/from16 v0, v17
+
+    invoke-virtual {v0, v5}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addSpeedStepTimes([J)V
+
+    goto/16 :goto_14e
+
+    :cond_208
+    move/from16 v0, v23
+
+    move/from16 v1, v22
+
+    invoke-virtual {v4, v15, v0, v1, v5}, Lcom/android/internal/os/BatteryStatsImpl;->finishAddingCpuLocked(III[J)V
+
+    :cond_20f
+    monitor-exit v27
+    :try_end_210
+    .catchall {:try_start_1d2 .. :try_end_210} :catchall_1c9
+
+    :try_start_210
+    move-object/from16 v0, p0
+
+    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J
+
+    move-wide/from16 v27, v0
+
+    const-wide/32 v29, 0x1b7740
+
+    sub-long v29, v11, v29
+
+    cmp-long v25, v27, v29
+
+    if-gez v25, :cond_230
+
+    move-object/from16 v0, p0
+
+    iput-wide v11, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J
+
+    move-object/from16 v0, p0
+
+    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;
+
+    move-object/from16 v25, v0
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;
+
+    move-result-object v25
+
+    invoke-virtual/range {v25 .. v25}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V
+
+    :cond_230
+    monitor-exit v4
+    :try_end_231
+    .catchall {:try_start_210 .. :try_end_231} :catchall_1cc
+
+    :try_start_231
+    monitor-exit v26
+    :try_end_232
+    .catchall {:try_start_231 .. :try_end_232} :catchall_1cf
+
+    return-void
+.end method
+
+.method final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
+    .registers 5
+
+    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    add-int/lit8 v0, v0, 0x1
+
+    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I
+
+    const/4 v0, 0x0
+
+    invoke-direct {p0, p1, p2, p3, v0}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;ZZI)V
+
+    return-void
+.end method
+
+.method final updateOomAdjLocked()V
+    .registers 18
+
+    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_d2
+
+    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;
+
+    :goto_8
+    move-object/from16 v0, p0
+
+    iget v13, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    add-int/lit8 v13, v13, 0x1
+
+    move-object/from16 v0, p0
+
+    iput v13, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I
+
+    const/4 v13, 0x0
+
+    move-object/from16 v0, p0
+
+    iput v13, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    sget v13, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    rsub-int/lit8 v13, v13, 0xf
+
+    add-int/lit8 v11, v13, 0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
+
+    move-result v13
+
+    add-int/lit8 v13, v13, -0x4
+
+    div-int v7, v13, v11
+
+    const/4 v13, 0x1
+
+    if-ge v7, v13, :cond_2d
+
+    const/4 v7, 0x1
+
+    :cond_2d
+    const/4 v12, 0x0
+
+    const/4 v10, 0x0
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
+
+    move-result v8
+
+    sget v5, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    :cond_39
+    :goto_39
+    if-lez v8, :cond_d5
+
+    add-int/lit8 v8, v8, -0x1
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ProcessRecord;
+
+    const/4 v13, 0x1
+
+    move-object/from16 v0, p0
+
+    invoke-direct {v0, v4, v5, v3, v13}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;Z)Z
+
+    const/16 v13, 0xf
+
+    if-ge v5, v13, :cond_5c
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    if-ne v13, v5, :cond_5c
+
+    add-int/lit8 v12, v12, 0x1
+
+    if-lt v12, v7, :cond_5c
+
+    const/4 v12, 0x0
+
+    add-int/lit8 v5, v5, 0x1
+
+    :cond_5c
+    iget-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->killedBackground:Z
+
+    if-nez v13, :cond_39
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    sget v14, Lcom/android/server/am/ProcessList;->HIDDEN_APP_MIN_ADJ:I
+
+    if-lt v13, v14, :cond_39
+
+    add-int/lit8 v10, v10, 0x1
+
+    move-object/from16 v0, p0
+
+    iget v13, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I
+
+    if-le v10, v13, :cond_39
+
+    const-string v13, "ActivityManager"
+
+    new-instance v14, Ljava/lang/StringBuilder;
+
+    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v15, "No longer want "
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    iget-object v15, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    const-string v15, " (pid "
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    iget v15, v4, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    const-string v15, "): hidden #"
+
+    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    invoke-virtual {v14, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v14
+
+    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v14
+
+    invoke-static {v13, v14}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const/16 v13, 0x7547
+
+    const/4 v14, 0x4
+
+    new-array v14, v14, [Ljava/lang/Object;
+
+    const/4 v15, 0x0
+
+    iget v0, v4, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    move/from16 v16, v0
+
+    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v16
+
+    aput-object v16, v14, v15
+
+    const/4 v15, 0x1
+
+    iget-object v0, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;
+
+    move-object/from16 v16, v0
+
+    aput-object v16, v14, v15
+
+    const/4 v15, 0x2
+
+    iget v0, v4, Lcom/android/server/am/ProcessRecord;->setAdj:I
+
+    move/from16 v16, v0
+
+    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;
+
+    move-result-object v16
+
+    aput-object v16, v14, v15
+
+    const/4 v15, 0x3
+
+    const-string v16, "too many background"
+
+    aput-object v16, v14, v15
+
+    invoke-static {v13, v14}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I
+
+    const/4 v13, 0x1
+
+    iput-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->killedBackground:Z
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->pid:I
+
+    invoke-static {v13}, Landroid/os/Process;->killProcessQuiet(I)V
+
+    goto/16 :goto_39
+
+    :cond_d2
+    const/4 v3, 0x0
+
+    goto/16 :goto_8
+
+    :cond_d5
+    move-object/from16 v0, p0
+
+    iget v13, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I
+
+    move-object/from16 v0, p0
+
+    iput v13, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I
+
+    const/4 v13, 0x7
+
+    if-gt v10, v13, :cond_181
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    div-int/lit8 v7, v10, 0x3
+
+    const/4 v9, 0x2
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v13, :cond_f3
+
+    add-int/lit8 v9, v9, 0x1
+
+    :cond_f3
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;
+
+    if-eqz v13, :cond_fb
+
+    add-int/lit8 v9, v9, 0x1
+
+    :cond_fb
+    if-ge v7, v9, :cond_fe
+
+    move v7, v9
+
+    :cond_fe
+    const/4 v12, 0x0
+
+    const/16 v6, 0x50
+
+    const/4 v8, 0x0
+
+    :goto_102
+    if-ge v8, v1, :cond_1c2
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ProcessRecord;
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    const/4 v14, 0x6
+
+    if-lt v13, v14, :cond_13c
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    const/16 v14, 0x8
+
+    if-eq v13, v14, :cond_13c
+
+    iget-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->killedBackground:Z
+
+    if-nez v13, :cond_13c
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    if-ge v13, v6, :cond_12a
+
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v13, :cond_12a
+
+    :try_start_125
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    invoke-interface {v13, v6}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
+    :try_end_12a
+    .catch Landroid/os/RemoteException; {:try_start_125 .. :try_end_12a} :catch_1db
+
+    :cond_12a
+    :goto_12a
+    iput v6, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    add-int/lit8 v12, v12, 0x1
+
+    if-lt v12, v7, :cond_133
+
+    sparse-switch v6, :sswitch_data_1de
+
+    :cond_133
+    :goto_133
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_102
+
+    :sswitch_136
+    const/16 v6, 0x3c
+
+    goto :goto_133
+
+    :sswitch_139
+    const/16 v6, 0x28
+
+    goto :goto_133
+
+    :cond_13c
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    const/4 v14, 0x3
+
+    if-ne v13, v14, :cond_157
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    const/16 v14, 0x28
+
+    if-ge v13, v14, :cond_152
+
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v13, :cond_152
+
+    :try_start_14b
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    const/16 v14, 0x28
+
+    invoke-interface {v13, v14}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
+    :try_end_152
+    .catch Landroid/os/RemoteException; {:try_start_14b .. :try_end_152} :catch_1d8
+
+    :cond_152
+    :goto_152
+    const/16 v13, 0x28
+
+    iput v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    goto :goto_133
+
+    :cond_157
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    const/4 v14, 0x1
+
+    if-gt v13, v14, :cond_160
+
+    iget-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z
+
+    if-eqz v13, :cond_17d
+
+    :cond_160
+    iget-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z
+
+    if-eqz v13, :cond_17d
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    const/16 v14, 0x14
+
+    if-ge v13, v14, :cond_175
+
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v13, :cond_175
+
+    :try_start_16e
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    const/16 v14, 0x14
+
+    invoke-interface {v13, v14}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
+    :try_end_175
+    .catch Landroid/os/RemoteException; {:try_start_16e .. :try_end_175} :catch_1d6
+
+    :cond_175
+    :goto_175
+    const/16 v13, 0x14
+
+    iput v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    const/4 v13, 0x0
+
+    iput-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z
+
+    goto :goto_133
+
+    :cond_17d
+    const/4 v13, 0x0
+
+    iput v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    goto :goto_133
+
+    :cond_181
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I
+
+    move-result v1
+
+    const/4 v8, 0x0
+
+    :goto_18a
+    if-ge v8, v1, :cond_1c2
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;
+
+    invoke-virtual {v13, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v4
+
+    check-cast v4, Lcom/android/server/am/ProcessRecord;
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I
+
+    const/4 v14, 0x1
+
+    if-gt v13, v14, :cond_19f
+
+    iget-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z
+
+    if-eqz v13, :cond_1be
+
+    :cond_19f
+    iget-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z
+
+    if-eqz v13, :cond_1be
+
+    iget v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    const/16 v14, 0x14
+
+    if-ge v13, v14, :cond_1b4
+
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    if-eqz v13, :cond_1b4
+
+    :try_start_1ad
+    iget-object v13, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
+
+    const/16 v14, 0x14
+
+    invoke-interface {v13, v14}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
+    :try_end_1b4
+    .catch Landroid/os/RemoteException; {:try_start_1ad .. :try_end_1b4} :catch_1d4
+
+    :cond_1b4
+    :goto_1b4
+    const/16 v13, 0x14
+
+    iput v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    const/4 v13, 0x0
+
+    iput-boolean v13, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z
+
+    :goto_1bb
+    add-int/lit8 v8, v8, 0x1
+
+    goto :goto_18a
+
+    :cond_1be
+    const/4 v13, 0x0
+
+    iput v13, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I
+
+    goto :goto_1bb
+
+    :cond_1c2
+    move-object/from16 v0, p0
+
+    iget-boolean v13, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z
+
+    if-eqz v13, :cond_1d3
+
+    move-object/from16 v0, p0
+
+    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    const-string v16, "always-finish"
+
+    invoke-virtual/range {v13 .. v16}, Lcom/android/server/am/ActivityStack;->destroyActivitiesLocked(Lcom/android/server/am/ProcessRecord;ZLjava/lang/String;)V
+
+    :cond_1d3
+    return-void
+
+    :catch_1d4
+    move-exception v13
+
+    goto :goto_1b4
+
+    :catch_1d6
+    move-exception v13
+
+    goto :goto_175
+
+    :catch_1d8
+    move-exception v13
+
+    goto/16 :goto_152
+
+    :catch_1db
+    move-exception v13
+
+    goto/16 :goto_12a
+
+    :sswitch_data_1de
+    .sparse-switch
+        0x3c -> :sswitch_139
+        0x50 -> :sswitch_136
+    .end sparse-switch
+.end method
+
+.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
+    .registers 7
+
+    const-string v2, "android.permission.CHANGE_CONFIGURATION"
+
+    const-string v3, "updateConfiguration()"
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    const-string v2, "android.permission.WRITE_SETTINGS"
+
+    const-string v3, "updateConfiguration()"
+
+    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
+
+    if-nez p1, :cond_18
+
+    new-instance v2, Ljava/lang/NullPointerException;
+
+    const-string v3, "Configuration must not be null"
+
+    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_18
+    monitor-enter p0
+
+    :try_start_19
+    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
+
+    move-result-wide v0
+
+    const/4 v2, 0x0
+
+    const/4 v3, 0x1
+
+    const/4 v4, 0x0
+
+    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
+
+    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_28
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_2a
+    .catchall {:try_start_19 .. :try_end_2a} :catchall_28
+
+    throw v2
+.end method
+
+.method public updateServiceForegroundLocked(Lcom/android/server/am/ProcessRecord;Z)V
+    .registers 7
+
+    const/4 v0, 0x0
+
+    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->services:Ljava/util/HashSet;
+
+    invoke-virtual {v3}, Ljava/util/HashSet;->iterator()Ljava/util/Iterator;
+
+    move-result-object v1
+
+    :cond_7
+    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z
+
+    move-result v3
+
+    if-eqz v3, :cond_18
+
+    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Lcom/android/server/am/ServiceRecord;
+
+    iget-boolean v3, v2, Lcom/android/server/am/ServiceRecord;->isForeground:Z
+
+    if-eqz v3, :cond_7
+
+    const/4 v0, 0x1
+
+    :cond_18
+    iget-boolean v3, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    if-eq v0, v3, :cond_23
+
+    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z
+
+    if-eqz p2, :cond_23
+
+    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V
+
+    :cond_23
+    return-void
+.end method
+
+.method updateUsageStats(Lcom/android/server/am/ActivityRecord;Z)V
+    .registers 5
+
+    if-eqz p2, :cond_a
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/UsageStatsService;->noteResumeComponent(Landroid/content/ComponentName;)V
+
+    :goto_9
+    return-void
+
+    :cond_a
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Lcom/android/server/am/UsageStatsService;
+
+    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/UsageStatsService;->notePauseComponent(Landroid/content/ComponentName;)V
+
+    goto :goto_9
+.end method
+
+.method final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
+    .registers 7
+
+    const/high16 v4, 0x4000
+
+    if-eqz p1, :cond_13
+
+    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z
+
+    move-result v2
+
+    const/4 v3, 0x1
+
+    if-ne v2, v3, :cond_13
+
+    new-instance v2, Ljava/lang/IllegalArgumentException;
+
+    const-string v3, "File descriptors passed in Intent"
+
+    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_13
+    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I
+
+    move-result v0
+
+    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z
+
+    if-nez v2, :cond_29
+
+    const/high16 v2, 0x1000
+
+    and-int/2addr v2, v0
+
+    if-eqz v2, :cond_36
+
+    new-instance v1, Landroid/content/Intent;
+
+    invoke-direct {v1, p1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
+
+    invoke-virtual {v1, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;
+
+    move-object p1, v1
+
+    :cond_29
+    const/high16 v2, 0x800
+
+    and-int/2addr v2, v0
+
+    if-eqz v2, :cond_60
+
+    new-instance v2, Ljava/lang/IllegalArgumentException;
+
+    const-string v3, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"
+
+    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_36
+    and-int v2, v0, v4
+
+    if-nez v2, :cond_29
+
+    const-string v2, "ActivityManager"
+
+    new-instance v3, Ljava/lang/StringBuilder;
+
+    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v4, "Attempt to launch receivers of broadcast intent "
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    const-string v4, " before boot completion"
+
+    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v3
+
+    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v3
+
+    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    new-instance v2, Ljava/lang/IllegalStateException;
+
+    const-string v3, "Cannot broadcast before boot completed"
+
+    invoke-direct {v2, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V
+
+    throw v2
+
+    :cond_60
+    return-object p1
+.end method
+
+.method public wakingUp()V
+    .registers 3
+
+    monitor-enter p0
+
+    :try_start_1
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;
+
+    const/4 v1, 0x1
+
+    invoke-virtual {v0, v1}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->awakeFromSleepingLocked()V
+
+    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    const/4 v1, 0x0
+
+    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityStack;->resumeTopActivityLocked(Lcom/android/server/am/ActivityRecord;)Z
+
+    monitor-exit p0
+
+    return-void
+
+    :catchall_17
+    move-exception v0
+
+    monitor-exit p0
+    :try_end_19
+    .catchall {:try_start_1 .. :try_end_19} :catchall_17
+
+    throw v0
+.end method
+
+.method public willActivityBeVisible(Landroid/os/IBinder;)Z
+    .registers 6
+
+    const/4 v2, 0x1
+
+    monitor-enter p0
+
+    :try_start_2
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v3, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I
+
+    move-result v3
+
+    add-int/lit8 v0, v3, -0x1
+
+    :goto_c
+    if-ltz v0, :cond_2f
+
+    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mMainStack:Lcom/android/server/am/ActivityStack;
+
+    iget-object v3, v3, Lcom/android/server/am/ActivityStack;->mHistory:Ljava/util/ArrayList;
+
+    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Lcom/android/server/am/ActivityRecord;
+
+    iget-object v3, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;
+
+    if-ne v3, p1, :cond_1e
+
+    monitor-exit p0
+
+    :goto_1d
+    return v2
+
+    :cond_1e
+    iget-boolean v3, v1, Lcom/android/server/am/ActivityRecord;->fullscreen:Z
+
+    if-eqz v3, :cond_2c
+
+    iget-boolean v3, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z
+
+    if-nez v3, :cond_2c
+
+    const/4 v2, 0x0
+
+    monitor-exit p0
+
+    goto :goto_1d
+
+    :catchall_29
+    move-exception v2
+
+    monitor-exit p0
+    :try_end_2b
+    .catchall {:try_start_2 .. :try_end_2b} :catchall_29
+
+    throw v2
+
+    :cond_2c
+    add-int/lit8 v0, v0, -0x1
+
+    goto :goto_c
+
+    :cond_2f
+    :try_start_2f
+    monitor-exit p0
+    :try_end_30
+    .catchall {:try_start_2f .. :try_end_30} :catchall_29
+
+    goto :goto_1d
+.end method
